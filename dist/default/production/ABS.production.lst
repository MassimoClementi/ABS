

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jun 09 15:09:53 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	param0,global,class=BANK0,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  002B60                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _delay_quartz_frequency_value
    49  002B60  10                 	db	16
    50                           
    51                           	psect	idataBANK0
    52  002B58                     __pidataBANK0:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _remote_frame_array
    56  002B58  01                 	db	1
    57  002B59  00                 	db	0
    58  002B5A  00                 	db	0
    59  002B5B  00                 	db	0
    60  002B5C  00                 	db	0
    61  002B5D  00                 	db	0
    62  002B5E  00                 	db	0
    63  002B5F  00                 	db	0
    64  0000                     _RXB1CON	set	3920
    65  0000                     _RXB1CONbits	set	3920
    66  0000                     _RXB1D0	set	3926
    67  0000                     _RXB1D1	set	3927
    68  0000                     _RXB1D2	set	3928
    69  0000                     _RXB1D3	set	3929
    70  0000                     _RXB1D4	set	3930
    71  0000                     _RXB1D5	set	3931
    72  0000                     _RXB1D6	set	3932
    73  0000                     _RXB1D7	set	3933
    74  0000                     _RXB1DLC	set	3925
    75  0000                     _RXB1DLCbits	set	3925
    76  0000                     _RXB1EIDH	set	3923
    77  0000                     _RXB1EIDL	set	3924
    78  0000                     _RXB1SIDH	set	3921
    79  0000                     _RXB1SIDL	set	3922
    80  0000                     _RXB1SIDLbits	set	3922
    81  0000                     _RXF0EIDH	set	3842
    82  0000                     _RXF0EIDL	set	3843
    83  0000                     _RXF0SIDH	set	3840
    84  0000                     _RXF0SIDL	set	3841
    85  0000                     _RXF0SIDLbits	set	3841
    86  0000                     _RXF1EIDH	set	3846
    87  0000                     _RXF1EIDL	set	3847
    88  0000                     _RXF1SIDH	set	3844
    89  0000                     _RXF1SIDL	set	3845
    90  0000                     _RXF1SIDLbits	set	3845
    91  0000                     _RXF2EIDH	set	3850
    92  0000                     _RXF2EIDL	set	3851
    93  0000                     _RXF2SIDH	set	3848
    94  0000                     _RXF2SIDL	set	3849
    95  0000                     _RXF2SIDLbits	set	3849
    96  0000                     _RXF3EIDH	set	3854
    97  0000                     _RXF3EIDL	set	3855
    98  0000                     _RXF3SIDH	set	3852
    99  0000                     _RXF3SIDL	set	3853
   100  0000                     _RXF3SIDLbits	set	3853
   101  0000                     _RXF4EIDH	set	3858
   102  0000                     _RXF4EIDL	set	3859
   103  0000                     _RXF4SIDH	set	3856
   104  0000                     _RXF4SIDL	set	3857
   105  0000                     _RXF4SIDLbits	set	3857
   106  0000                     _RXF5EIDH	set	3862
   107  0000                     _RXF5EIDL	set	3863
   108  0000                     _RXF5SIDH	set	3860
   109  0000                     _RXF5SIDL	set	3861
   110  0000                     _RXF5SIDLbits	set	3861
   111  0000                     _RXM0EIDH	set	3866
   112  0000                     _RXM0EIDL	set	3867
   113  0000                     _RXM0SIDH	set	3864
   114  0000                     _RXM0SIDL	set	3865
   115  0000                     _RXM0SIDLbits	set	3865
   116  0000                     _RXM1EIDH	set	3870
   117  0000                     _RXM1EIDL	set	3871
   118  0000                     _RXM1SIDH	set	3868
   119  0000                     _RXM1SIDL	set	3869
   120  0000                     _RXM1SIDLbits	set	3869
   121  0000                     _TXB0CONbits	set	3904
   122  0000                     _TXB0D0	set	3910
   123  0000                     _TXB0D1	set	3911
   124  0000                     _TXB0D2	set	3912
   125  0000                     _TXB0D3	set	3913
   126  0000                     _TXB0D4	set	3914
   127  0000                     _TXB0D5	set	3915
   128  0000                     _TXB0D6	set	3916
   129  0000                     _TXB0D7	set	3917
   130  0000                     _TXB0DLC	set	3909
   131  0000                     _TXB0DLCbits	set	3909
   132  0000                     _TXB0EIDH	set	3907
   133  0000                     _TXB0EIDL	set	3908
   134  0000                     _TXB0SIDH	set	3905
   135  0000                     _TXB0SIDL	set	3906
   136  0000                     _TXB0SIDLbits	set	3906
   137  0000                     _TXB1CONbits	set	3888
   138  0000                     _TXB1D0	set	3894
   139  0000                     _TXB1D1	set	3895
   140  0000                     _TXB1D2	set	3896
   141  0000                     _TXB1D3	set	3897
   142  0000                     _TXB1D4	set	3898
   143  0000                     _TXB1D5	set	3899
   144  0000                     _TXB1D6	set	3900
   145  0000                     _TXB1D7	set	3901
   146  0000                     _TXB1DLC	set	3893
   147  0000                     _TXB1DLCbits	set	3893
   148  0000                     _TXB1EIDH	set	3891
   149  0000                     _TXB1EIDL	set	3892
   150  0000                     _TXB1SIDH	set	3889
   151  0000                     _TXB1SIDL	set	3890
   152  0000                     _TXB1SIDLbits	set	3890
   153  0000                     _TXB2CONbits	set	3872
   154  0000                     _TXB2D0	set	3878
   155  0000                     _TXB2D1	set	3879
   156  0000                     _TXB2D2	set	3880
   157  0000                     _TXB2D3	set	3881
   158  0000                     _TXB2D4	set	3882
   159  0000                     _TXB2D5	set	3883
   160  0000                     _TXB2D6	set	3884
   161  0000                     _TXB2D7	set	3885
   162  0000                     _TXB2DLC	set	3877
   163  0000                     _TXB2DLCbits	set	3877
   164  0000                     _TXB2EIDH	set	3875
   165  0000                     _TXB2EIDL	set	3876
   166  0000                     _TXB2SIDH	set	3873
   167  0000                     _TXB2SIDL	set	3874
   168  0000                     _TXB2SIDLbits	set	3874
   169  0000                     _BRGCON1	set	3952
   170  0000                     _BRGCON2	set	3953
   171  0000                     _BRGCON2bits	set	3953
   172  0000                     _BRGCON3	set	3954
   173  0000                     _BRGCON3bits	set	3954
   174  0000                     _CANCON	set	3951
   175  0000                     _CANCONbits	set	3951
   176  0000                     _CANSTAT	set	3950
   177  0000                     _COMSTATbits	set	3956
   178  0000                     _INTCON2bits	set	4081
   179  0000                     _INTCON3bits	set	4080
   180  0000                     _INTCONbits	set	4082
   181  0000                     _IPR1bits	set	3999
   182  0000                     _IPR2bits	set	4002
   183  0000                     _IPR3bits	set	4005
   184  0000                     _LATA	set	3977
   185  0000                     _LATB	set	3978
   186  0000                     _LATC	set	3979
   187  0000                     _LATD	set	3980
   188  0000                     _LATE	set	3981
   189  0000                     _PIE1bits	set	3997
   190  0000                     _PIE2bits	set	4000
   191  0000                     _PIE3bits	set	4003
   192  0000                     _PIR1bits	set	3998
   193  0000                     _PIR2bits	set	4001
   194  0000                     _PIR3bits	set	4004
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTCbits	set	3970
   197  0000                     _RCONbits	set	4048
   198  0000                     _RXB0CON	set	3936
   199  0000                     _RXB0CONbits	set	3936
   200  0000                     _RXB0D0	set	3942
   201  0000                     _RXB0D1	set	3943
   202  0000                     _RXB0D2	set	3944
   203  0000                     _RXB0D3	set	3945
   204  0000                     _RXB0D4	set	3946
   205  0000                     _RXB0D5	set	3947
   206  0000                     _RXB0D6	set	3948
   207  0000                     _RXB0D7	set	3949
   208  0000                     _RXB0DLC	set	3941
   209  0000                     _RXB0DLCbits	set	3941
   210  0000                     _RXB0EIDH	set	3939
   211  0000                     _RXB0EIDL	set	3940
   212  0000                     _RXB0SIDH	set	3937
   213  0000                     _RXB0SIDL	set	3938
   214  0000                     _RXB0SIDLbits	set	3938
   215  0000                     _RXERRCNT	set	3957
   216  0000                     _T0CON	set	4053
   217  0000                     _T0CONbits	set	4053
   218  0000                     _T1CON	set	4045
   219  0000                     _T1CONbits	set	4045
   220  0000                     _T3CON	set	4017
   221  0000                     _T3CONbits	set	4017
   222  0000                     _TMR0H	set	4055
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR1H	set	4047
   225  0000                     _TMR1L	set	4046
   226  0000                     _TMR3H	set	4019
   227  0000                     _TMR3L	set	4018
   228  0000                     _TRISA	set	3986
   229  0000                     _TRISB	set	3987
   230  0000                     _TRISC	set	3988
   231  0000                     _TRISD	set	3989
   232  0000                     _TRISE	set	3990
   233  0000                     _TXERRCNT	set	3958
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  0029C6                     __pcinit:
   239                           	opt stack 0
   240  0029C6                     start_initialization:
   241                           	opt stack 0
   242  0029C6                     __initialization:
   243                           	opt stack 0
   244                           
   245                           ; Clear objects allocated to BANK0 (63 bytes)
   246  0029C6  EE00  F060         	lfsr	0,__pbssBANK0
   247  0029CA  0E3F               	movlw	63
   248  0029CC                     clear_0:
   249  0029CC  6AEE               	clrf	postinc0,c
   250  0029CE  06E8               	decf	wreg,f,c
   251  0029D0  E1FD               	bnz	clear_0
   252                           
   253                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   254  0029D2  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   255  0029D4  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   256                           
   257                           ; Clear objects allocated to COMRAM (39 bytes)
   258  0029D6  EE00  F001         	lfsr	0,__pbssCOMRAM
   259  0029DA  0E27               	movlw	39
   260  0029DC                     clear_1:
   261  0029DC  6AEE               	clrf	postinc0,c
   262  0029DE  06E8               	decf	wreg,f,c
   263  0029E0  E1FD               	bnz	clear_1
   264                           
   265                           ; Initialize objects allocated to BANK0 (8 bytes)
   266                           ; load TBLPTR registers with __pidataBANK0
   267  0029E2  0E58               	movlw	low __pidataBANK0
   268  0029E4  6EF6               	movwf	tblptrl,c
   269  0029E6  0E2B               	movlw	high __pidataBANK0
   270  0029E8  6EF7               	movwf	tblptrh,c
   271  0029EA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   272  0029EC  6EF8               	movwf	tblptru,c
   273  0029EE  EE00  F0D4         	lfsr	0,__pdataBANK0
   274  0029F2  EE10 F008          	lfsr	1,8
   275  0029F6                     copy_data0:
   276  0029F6  0009               	tblrd		*+
   277  0029F8  CFF5 FFEE          	movff	tablat,postinc0
   278  0029FC  50E5               	movf	postdec1,w,c
   279  0029FE  50E1               	movf	fsr1l,w,c
   280  002A00  E1FA               	bnz	copy_data0
   281                           
   282                           ; Initialize objects allocated to COMRAM (1 bytes)
   283                           ; load TBLPTR registers with __pidataCOMRAM
   284  002A02  0E60               	movlw	low __pidataCOMRAM
   285  002A04  6EF6               	movwf	tblptrl,c
   286  002A06  0E2B               	movlw	high __pidataCOMRAM
   287  002A08  6EF7               	movwf	tblptrh,c
   288  002A0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   289  002A0C  6EF8               	movwf	tblptru,c
   290  002A0E  0009               	tblrd		*+	;fetch initializer
   291  002A10  CFF5 F048          	movff	tablat,__pdataCOMRAM
   292  002A14                     end_of_initialization:
   293                           	opt stack 0
   294  002A14                     __end_of__initialization:
   295                           	opt stack 0
   296  002A14  0E00               	movlw	low (__Lmediumconst shr (0+16))
   297  002A16  6EF8               	movwf	tblptru,c
   298  002A18  0100               	movlb	0
   299  002A1A  EF1A  F010         	goto	_main	;jump to C main() function
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           postinc0	equ	0xFEE
   305                           wreg	equ	0xFE8
   306                           postdec1	equ	0xFE5
   307                           fsr1l	equ	0xFE1
   308                           
   309                           	psect	bitbssCOMRAM
   310  000230                     __pbitbssCOMRAM:
   311                           	opt stack 0
   312  000230                     _ENC1_measure:
   313                           	opt stack 0
   314  000230                     	ds	1
   315  000231                     _ENC2_measure:
   316                           	opt stack 0
   317  000231                     	ds	1
   318  000232                     _TMR1_overflow:
   319                           	opt stack 0
   320  000232                     	ds	1
   321  000233                     _TMR3_overflow:
   322                           	opt stack 0
   323  000233                     	ds	1
   324  000234                     _Tx_retry:
   325                           	opt stack 0
   326  000234                     	ds	1
   327  000235                     _count_flag:
   328                           	opt stack 0
   329  000235                     	ds	1
   330  000236                     _distance_reached_flag:
   331                           	opt stack 0
   332  000236                     	ds	1
   333  000237                     _distance_set_flag:
   334                           	opt stack 0
   335  000237                     	ds	1
   336  000238                     _remote_frame:
   337                           	opt stack 0
   338  000238                     	ds	1
   339  000239                     _steering_dir:
   340                           	opt stack 0
   341  000239                     	ds	1
   342  00023A                     _x:
   343                           	opt stack 0
   344  00023A                     	ds	1
   345  00023B                     _y:
   346                           	opt stack 0
   347  00023B                     	ds	1
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           postdec1	equ	0xFE5
   355                           fsr1l	equ	0xFE1
   356                           
   357                           	psect	bssCOMRAM
   358  000001                     __pbssCOMRAM:
   359                           	opt stack 0
   360  000001                     _remote_frame_id:
   361                           	opt stack 0
   362  000001                     	ds	4
   363  000005                     _timer_on:
   364                           	opt stack 0
   365  000005                     	ds	4
   366  000009                     _wheel_speed_1:
   367                           	opt stack 0
   368  000009                     	ds	4
   369  00000D                     _wheel_speed_2:
   370                           	opt stack 0
   371  00000D                     	ds	4
   372  000011                     _clock_counter_reference:
   373                           	opt stack 0
   374  000011                     	ds	2
   375  000013                     _distance_1:
   376                           	opt stack 0
   377  000013                     	ds	2
   378  000015                     _distance_2:
   379                           	opt stack 0
   380  000015                     	ds	2
   381  000017                     _distance_set_counter_1:
   382                           	opt stack 0
   383  000017                     	ds	2
   384  000019                     _distance_set_counter_2:
   385                           	opt stack 0
   386  000019                     	ds	2
   387  00001B                     _distance_set_value:
   388                           	opt stack 0
   389  00001B                     	ds	2
   390  00001D                     _gap_time_1:
   391                           	opt stack 0
   392  00001D                     	ds	2
   393  00001F                     _gap_time_2:
   394                           	opt stack 0
   395  00001F                     	ds	2
   396  000021                     _Analogic_Mode:
   397                           	opt stack 0
   398  000021                     	ds	1
   399  000022                     _brake_signal_CAN:
   400                           	opt stack 0
   401  000022                     	ds	1
   402  000023                     _brake_value_inc:
   403                           	opt stack 0
   404  000023                     	ds	1
   405  000024                     _home_position:
   406                           	opt stack 0
   407  000024                     	ds	1
   408  000025                     _step:
   409                           	opt stack 0
   410  000025                     	ds	1
   411  000026                     _brake_value:
   412                           	opt stack 0
   413  000026                     	ds	1
   414  000027                     _brake_value_degree:
   415                           	opt stack 0
   416  000027                     	ds	1
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	dataCOMRAM
   427  000048                     __pdataCOMRAM:
   428                           	opt stack 0
   429  000048                     _delay_quartz_frequency_value:
   430                           	opt stack 0
   431  000048                     	ds	1
   432                           tblptru	equ	0xFF8
   433                           tblptrh	equ	0xFF7
   434                           tblptrl	equ	0xFF6
   435                           tablat	equ	0xFF5
   436                           postinc0	equ	0xFEE
   437                           wreg	equ	0xFE8
   438                           postdec1	equ	0xFE5
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	bssBANK0
   442  000060                     __pbssBANK0:
   443                           	opt stack 0
   444  000060                     _data_debug1:
   445                           	opt stack 0
   446  000060                     	ds	8
   447  000068                     _distance_actual_value:
   448                           	opt stack 0
   449  000068                     	ds	4
   450  00006C                     _int_counter_1:
   451                           	opt stack 0
   452  00006C                     	ds	4
   453  000070                     _int_counter_2:
   454                           	opt stack 0
   455  000070                     	ds	4
   456  000074                     _timer_off:
   457                           	opt stack 0
   458  000074                     	ds	4
   459  000078                     _msg:
   460                           	opt stack 0
   461  000078                     	ds	15
   462  000087                     _distance_array:
   463                           	opt stack 0
   464  000087                     	ds	8
   465  00008F                     _speed_array:
   466                           	opt stack 0
   467  00008F                     	ds	8
   468  000097                     _status_array:
   469                           	opt stack 0
   470  000097                     	ds	8
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	dataBANK0
   481  0000D4                     __pdataBANK0:
   482                           	opt stack 0
   483  0000D4                     _remote_frame_array:
   484                           	opt stack 0
   485  0000D4                     	ds	8
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           postdec1	equ	0xFE5
   493                           fsr1l	equ	0xFE1
   494                           
   495                           	psect	cstackBANK1
   496  000100                     __pcstackBANK1:
   497                           	opt stack 0
   498  000100                     ?___aldiv:
   499                           	opt stack 0
   500  000100                     CANInitialize@phaseSeg1:
   501                           	opt stack 0
   502  000100                     ___aldiv@dividend:
   503                           	opt stack 0
   504                           
   505                           ; 4 bytes @ 0x0
   506  000100                     	ds	1
   507  000101                     CANInitialize@phaseSeg2:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1
   511  000101                     	ds	1
   512  000102                     CANInitialize@SJW:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x2
   516  000102                     	ds	1
   517  000103                     CANInitialize@BRP:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521  000103                     	ds	1
   522  000104                     CANInitialize@flags:
   523                           	opt stack 0
   524  000104                     ___aldiv@divisor:
   525                           	opt stack 0
   526                           
   527                           ; 4 bytes @ 0x4
   528  000104                     	ds	1
   529  000105                     ??_CANInitialize:
   530                           
   531                           ; 0 bytes @ 0x5
   532  000105                     	ds	3
   533  000108                     ___aldiv@counter:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x8
   537  000108                     	ds	1
   538  000109                     ___aldiv@sign:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x9
   542  000109                     	ds	1
   543  00010A                     ___aldiv@quotient:
   544                           	opt stack 0
   545                           
   546                           ; 4 bytes @ 0xA
   547  00010A                     	ds	4
   548  00010E                     ??_main:
   549                           
   550                           ; 0 bytes @ 0xE
   551  00010E                     	ds	2
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	cstackBANK0
   562  00009F                     __pcstackBANK0:
   563                           	opt stack 0
   564  00009F                     ?___lwdiv:
   565                           	opt stack 0
   566  00009F                     ?i2___wmul:
   567                           	opt stack 0
   568  00009F                     WriteTimer0@timer0:
   569                           	opt stack 0
   570  00009F                     ___lwdiv@dividend:
   571                           	opt stack 0
   572  00009F                     i2___wmul@multiplier:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x0
   576  00009F                     	ds	2
   577  0000A1                     WriteTimer0@timer:
   578                           	opt stack 0
   579  0000A1                     ___lwdiv@divisor:
   580                           	opt stack 0
   581  0000A1                     i2___wmul@multiplicand:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585  0000A1                     	ds	2
   586  0000A3                     ___lwdiv@counter:
   587                           	opt stack 0
   588  0000A3                     i2___wmul@product:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x4
   592  0000A3                     	ds	1
   593  0000A4                     ___lwdiv@quotient:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x5
   597  0000A4                     	ds	1
   598  0000A5                     ?i2___awdiv:
   599                           	opt stack 0
   600  0000A5                     i2___awdiv@dividend:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x6
   604  0000A5                     	ds	2
   605  0000A7                     i2___awdiv@divisor:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x8
   609  0000A7                     	ds	2
   610  0000A9                     i2___awdiv@counter:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xA
   614  0000A9                     	ds	1
   615  0000AA                     i2___awdiv@sign:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0xB
   619  0000AA                     	ds	1
   620  0000AB                     i2___awdiv@quotient:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0xC
   624  0000AB                     	ds	2
   625  0000AD                     ??_ISR_Alta:
   626                           
   627                           ; 0 bytes @ 0xE
   628  0000AD                     	ds	22
   629  0000C3                     ?___wmul:
   630                           	opt stack 0
   631  0000C3                     ?___awdiv:
   632                           	opt stack 0
   633  0000C3                     ?___lmul:
   634                           	opt stack 0
   635  0000C3                     CANOperationMode@mode:
   636                           	opt stack 0
   637  0000C3                     _CANisTxReady$3173:
   638                           	opt stack 0
   639  0000C3                     ___wmul@multiplier:
   640                           	opt stack 0
   641  0000C3                     ___awdiv@dividend:
   642                           	opt stack 0
   643  0000C3                     CANsendMessage@identifier:
   644                           	opt stack 0
   645  0000C3                     CANSetMask@mask:
   646                           	opt stack 0
   647  0000C3                     CANSetFilter@filter:
   648                           	opt stack 0
   649  0000C3                     ___lmul@multiplier:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0x24
   653  0000C3                     	ds	2
   654  0000C5                     ___wmul@multiplicand:
   655                           	opt stack 0
   656  0000C5                     ___awdiv@divisor:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x26
   660  0000C5                     	ds	2
   661  0000C7                     CANSetMask@type:
   662                           	opt stack 0
   663  0000C7                     CANSetFilter@type:
   664                           	opt stack 0
   665  0000C7                     ___awdiv@counter:
   666                           	opt stack 0
   667  0000C7                     CANsendMessage@data:
   668                           	opt stack 0
   669  0000C7                     ___wmul@product:
   670                           	opt stack 0
   671  0000C7                     ___lmul@multiplicand:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x28
   675  0000C7                     	ds	1
   676  0000C8                     ??_CANSetMask:
   677  0000C8                     ??_CANSetFilter:
   678  0000C8                     ___awdiv@sign:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x29
   682  0000C8                     	ds	1
   683  0000C9                     CANsendMessage@dataLength:
   684                           	opt stack 0
   685  0000C9                     ___awdiv@quotient:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x2A
   689  0000C9                     	ds	1
   690  0000CA                     CANsendMessage@flags:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x2B
   694  0000CA                     	ds	1
   695  0000CB                     ??_CANsendMessage:
   696  0000CB                     ___lmul@product:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x2C
   700  0000CB                     	ds	1
   701  0000CC                     CANSetMask@numBuffer:
   702                           	opt stack 0
   703  0000CC                     CANSetFilter@numBuffer:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x2D
   707  0000CC                     	ds	1
   708  0000CD                     CANSetMask@tamp:
   709                           	opt stack 0
   710  0000CD                     CANSetFilter@tamp:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x2E
   714  0000CD                     	ds	2
   715  0000CF                     CANsendMessage@tamp:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x30
   719  0000CF                     	ds	2
   720  0000D1                     CANInitialize@propSeg:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x32
   724  0000D1                     	ds	1
   725  0000D2                     CANInitialize@FilterConfig1:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x33
   729  0000D2                     	ds	1
   730  0000D3                     CANInitialize@FilterConfig2:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x34
   734  0000D3                     	ds	1
   735  0000D4                     tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           wreg	equ	0xFE8
   741                           postdec1	equ	0xFE5
   742                           fsr1l	equ	0xFE1
   743                           
   744                           ; 0 bytes @ 0x35
   745                           
   746                           	psect	cstackCOMRAM
   747  000028                     __pcstackCOMRAM:
   748                           	opt stack 0
   749  000028                     _CANisRxReady$3175:
   750                           	opt stack 0
   751  000028                     ___lbdiv@divisor:
   752                           	opt stack 0
   753  000028                     CANreceiveMessage@msg:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x0
   757  000028                     	ds	1
   758  000029                     ___lbdiv@dividend:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x1
   762  000029                     	ds	1
   763  00002A                     ??_CANreceiveMessage:
   764  00002A                     ___lbdiv@counter:
   765                           	opt stack 0
   766                           
   767                           ; 1 bytes @ 0x2
   768  00002A                     	ds	1
   769  00002B                     ___lbdiv@quotient:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x3
   773  00002B                     	ds	7
   774  000032                     CANreceiveMessage@error:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0xA
   778  000032                     	ds	1
   779  000033                     CANreceiveMessage@tamp:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0xB
   783  000033                     	ds	1
   784  000034                     ??_ISR_Bassa:
   785                           
   786                           ; 0 bytes @ 0xC
   787  000034                     	ds	18
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1l	equ	0xFE1
   796                           
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 285 in file "ABS_Code.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2  708[None  ] int 
   809 ;; Registers used:
   810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   816 ;;      Params:         0       0       0       0
   817 ;;      Locals:         0       0       0       0
   818 ;;      Temps:          0       0       2       0
   819 ;;      Totals:         0       0       2       0
   820 ;;Total ram usage:        2 bytes
   821 ;; Hardware stack levels required when called:    7
   822 ;; This function calls:
   823 ;;		_CANisRXwarningON
   824 ;;		_CANisTXwarningON
   825 ;;		_CANsendMessage
   826 ;;		___aldiv
   827 ;;		___awdiv
   828 ;;		___lmul
   829 ;;		_board_initialization
   830 ;;		_remote_frame_handler
   831 ;; This function is called by:
   832 ;;		Startup code after reset
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text0
   837  002034                     __ptext0:
   838                           	opt stack 0
   839  002034                     _main:
   840                           	opt stack 24
   841                           
   842                           ;ABS_Code.c: 286: board_initialization();
   843                           
   844                           ;incstack = 0
   845  002034  EC19  F014         	call	_board_initialization	;wreg free
   846                           
   847                           ;ABS_Code.c: 287: step = 2;
   848  002038  0E02               	movlw	2
   849  00203A  6E25               	movwf	_step,c	;volatile
   850                           
   851                           ;ABS_Code.c: 288: home_position = 28;
   852  00203C  0E1C               	movlw	28
   853  00203E  6E24               	movwf	_home_position,c	;volatile
   854  002040  D000               	goto	l5384
   855  002042                     l5384:
   856                           
   857                           ;ABS_Code.c: 299: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
   858  002042  EC9E  F015         	call	_CANisTXwarningON	;wreg free
   859  002046  06E8               	decf	wreg,f,c
   860  002048  B4D8               	btfsc	status,2,c
   861  00204A  D005               	goto	l712
   862  00204C  ECA5  F015         	call	_CANisRXwarningON	;wreg free
   863  002050  06E8               	decf	wreg,f,c
   864  002052  A4D8               	btfss	status,2,c
   865  002054  D004               	goto	l713
   866  002056                     l712:
   867                           
   868                           ;ABS_Code.c: 300: PORTAbits.RA1 = 1;
   869  002056  8280               	bsf	3968,1,c	;volatile
   870                           
   871                           ;ABS_Code.c: 301: COMSTATbits.TXWARN = 0;
   872  002058  9474               	bcf	3956,2,c	;volatile
   873                           
   874                           ;ABS_Code.c: 302: COMSTATbits.RXWARN = 0;
   875  00205A  9274               	bcf	3956,1,c	;volatile
   876                           
   877                           ;ABS_Code.c: 303: } else {
   878  00205C  D000               	goto	l713
   879  00205E                     l713:
   880                           
   881                           ;ABS_Code.c: 305: }
   882                           ;ABS_Code.c: 308: if (distance_reached_flag == 1) {
   883  00205E  AC46               	btfss	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   884  002060  D019               	goto	l5392
   885                           
   886                           ;ABS_Code.c: 309: CANsendMessage(0b00000001111, remote_frame_array, 8, CAN_CONFIG_STD_MS
      +                          G & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   887  002062  0E0F               	movlw	15
   888  002064  0100               	movlb	0	; () banked
   889  002066  6FC3               	movwf	CANsendMessage@identifier& (0+255),b
   890  002068  0E00               	movlw	0
   891  00206A  6FC4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   892  00206C  0E00               	movlw	0
   893  00206E  6FC5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   894  002070  0E00               	movlw	0
   895  002072  6FC6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   896  002074  0ED4               	movlw	low _remote_frame_array
   897  002076  0100               	movlb	0	; () banked
   898  002078  6FC7               	movwf	CANsendMessage@data& (0+255),b
   899  00207A  0E00               	movlw	high _remote_frame_array
   900  00207C  0100               	movlb	0	; () banked
   901  00207E  6FC8               	movwf	(CANsendMessage@data+1)& (0+255),b
   902  002080  0E08               	movlw	8
   903  002082  0100               	movlb	0	; () banked
   904  002084  6FC9               	movwf	CANsendMessage@dataLength& (0+255),b
   905  002086  0EFC               	movlw	252
   906  002088  0100               	movlb	0	; () banked
   907  00208A  6FCA               	movwf	CANsendMessage@flags& (0+255),b
   908  00208C  EC5E  F006         	call	_CANsendMessage	;wreg free
   909                           
   910                           ;ABS_Code.c: 310: distance_reached_flag = 0;
   911  002090  9C46               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
   912  002092  D000               	goto	l5392
   913  002094                     l5392:
   914                           
   915                           ;ABS_Code.c: 311: }
   916                           ;ABS_Code.c: 314: if ((remote_frame == 1) || (Tx_retry == 1)) {
   917  002094  B047               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   918  002096  D002               	goto	l717
   919  002098  A846               	btfss	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
   920  00209A  D004               	goto	l5398
   921  00209C                     l717:
   922                           
   923                           ;ABS_Code.c: 315: remote_frame = 0;
   924  00209C  9047               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   925                           
   926                           ;ABS_Code.c: 316: remote_frame_handler();
   927  00209E  EC02  F012         	call	_remote_frame_handler	;wreg free
   928  0020A2  D000               	goto	l5398
   929  0020A4                     l5398:
   930                           
   931                           ;ABS_Code.c: 317: }
   932                           ;ABS_Code.c: 320: if (Analogic_Mode == 0b00000000) {
   933  0020A4  5021               	movf	_Analogic_Mode,w,c	;volatile
   934  0020A6  A4D8               	btfss	status,2,c
   935  0020A8  D019               	goto	l718
   936                           
   937                           ;ABS_Code.c: 321: if (brake_signal_CAN == 0b00000000) {
   938  0020AA  5022               	movf	_brake_signal_CAN,w,c	;volatile
   939  0020AC  A4D8               	btfss	status,2,c
   940  0020AE  D003               	goto	l5404
   941                           
   942                           ;ABS_Code.c: 322: brake_value_inc = 0;
   943  0020B0  0E00               	movlw	0
   944  0020B2  6E23               	movwf	_brake_value_inc,c	;volatile
   945  0020B4  D000               	goto	l5404
   946  0020B6                     l5404:
   947                           
   948                           ;ABS_Code.c: 323: }
   949                           ;ABS_Code.c: 324: if (brake_signal_CAN == 0b00000001) {
   950  0020B6  0422               	decf	_brake_signal_CAN,w,c	;volatile
   951  0020B8  A4D8               	btfss	status,2,c
   952  0020BA  D003               	goto	l5408
   953                           
   954                           ;ABS_Code.c: 325: brake_value_inc = 150;
   955  0020BC  0E96               	movlw	150
   956  0020BE  6E23               	movwf	_brake_value_inc,c	;volatile
   957  0020C0  D000               	goto	l5408
   958  0020C2                     l5408:
   959                           
   960                           ;ABS_Code.c: 326: }
   961                           ;ABS_Code.c: 327: if (brake_signal_CAN == 0b00000010) {
   962  0020C2  0E02               	movlw	2
   963  0020C4  1822               	xorwf	_brake_signal_CAN,w,c	;volatile
   964  0020C6  A4D8               	btfss	status,2,c
   965  0020C8  D003               	goto	l5412
   966                           
   967                           ;ABS_Code.c: 328: brake_value_inc = 200;
   968  0020CA  0EC8               	movlw	200
   969  0020CC  6E23               	movwf	_brake_value_inc,c	;volatile
   970  0020CE  D000               	goto	l5412
   971  0020D0                     l5412:
   972                           
   973                           ;ABS_Code.c: 329: }
   974                           ;ABS_Code.c: 330: if (brake_signal_CAN == 0b00000011) {
   975  0020D0  0E03               	movlw	3
   976  0020D2  1822               	xorwf	_brake_signal_CAN,w,c	;volatile
   977  0020D4  A4D8               	btfss	status,2,c
   978  0020D6  D005               	goto	l5416
   979                           
   980                           ;ABS_Code.c: 331: brake_value_inc = 255;
   981  0020D8  6823               	setf	_brake_value_inc,c	;volatile
   982                           
   983                           ;ABS_Code.c: 332: }
   984                           ;ABS_Code.c: 333: } else {
   985  0020DA  D003               	goto	l5416
   986  0020DC                     l718:
   987                           
   988                           ;ABS_Code.c: 334: brake_value_inc = brake_signal_CAN;
   989  0020DC  C022  F023         	movff	_brake_signal_CAN,_brake_value_inc	;volatile
   990  0020E0  D000               	goto	l5416
   991  0020E2                     l5416:
   992                           
   993                           ;ABS_Code.c: 335: }
   994                           ;ABS_Code.c: 338: if (((brake_value_inc / 1) + home_position) > 255) {
   995  0020E2  5024               	movf	_home_position,w,c	;volatile
   996  0020E4  C023  F10E         	movff	_brake_value_inc,??_main	;volatile
   997  0020E8  0101               	movlb	1	; () banked
   998  0020EA  6B0F               	clrf	(??_main+1)& (0+255),b
   999  0020EC  0101               	movlb	1	; () banked
  1000  0020EE  270E               	addwf	??_main& (0+255),f,b
  1001  0020F0  0E00               	movlw	0
  1002  0020F2  230F               	addwfc	(??_main+1)& (0+255),f,b
  1003  0020F4  0101               	movlb	1	; () banked
  1004  0020F6  BF0F               	btfsc	(??_main+1)& (0+255),7,b
  1005  0020F8  D007               	goto	l5422
  1006  0020FA  0101               	movlb	1	; () banked
  1007  0020FC  050F               	decf	(??_main+1)& (0+255),w,b
  1008  0020FE  A0D8               	btfss	status,0,c
  1009  002100  D003               	goto	l5422
  1010                           
  1011                           ; BSR set to: 1
  1012                           ;ABS_Code.c: 339: brake_value = 255;
  1013  002102  6826               	setf	_brake_value,c	;volatile
  1014                           
  1015                           ; BSR set to: 1
  1016                           ;ABS_Code.c: 340: brake_value_degree = 180;
  1017  002104  0EB4               	movlw	180
  1018  002106  D011               	goto	L1
  1019  002108                     l5422:
  1020                           
  1021                           ; BSR set to: 1
  1022                           ;ABS_Code.c: 342: brake_value = (brake_value_inc / 1) + home_position;
  1023  002108  5023               	movf	_brake_value_inc,w,c	;volatile
  1024  00210A  2424               	addwf	_home_position,w,c	;volatile
  1025  00210C  6E26               	movwf	_brake_value,c	;volatile
  1026                           
  1027                           ; BSR set to: 1
  1028                           ;ABS_Code.c: 343: brake_value_degree = (180 * brake_value) / 255;
  1029  00210E  5026               	movf	_brake_value,w,c	;volatile
  1030  002110  0DB4               	mullw	180
  1031  002112  CFF3 F0C3          	movff	prodl,___awdiv@dividend
  1032  002116  CFF4 F0C4          	movff	prodh,___awdiv@dividend+1
  1033  00211A  0E00               	movlw	0
  1034  00211C  0100               	movlb	0	; () banked
  1035  00211E  6FC6               	movwf	(___awdiv@divisor+1)& (0+255),b
  1036  002120  69C5               	setf	___awdiv@divisor& (0+255),b
  1037  002122  EC49  F013         	call	___awdiv	;wreg free
  1038  002126  0100               	movlb	0	; () banked
  1039  002128  51C3               	movf	?___awdiv& (0+255),w,b
  1040  00212A                     L1:
  1041  00212A  6E27               	movwf	_brake_value_degree,c	;volatile
  1042  00212C  D000               	goto	l5426
  1043  00212E                     l5426:
  1044                           
  1045                           ;ABS_Code.c: 344: }
  1046                           ;ABS_Code.c: 347: if ((ENC1_measure == 1) || (TMR1_overflow == 1)) {
  1047  00212E  B046               	btfsc	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1048  002130  D002               	goto	l728
  1049  002132  A446               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1050  002134  D03D               	goto	l5442
  1051  002136                     l728:
  1052                           
  1053                           ;ABS_Code.c: 348: if (TMR1_overflow == 1) {
  1054  002136  A446               	btfss	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1055  002138  D00A               	goto	l5434
  1056                           
  1057                           ;ABS_Code.c: 349: wheel_speed_1 = 0;
  1058  00213A  0E00               	movlw	0
  1059  00213C  6E09               	movwf	_wheel_speed_1,c	;volatile
  1060  00213E  0E00               	movlw	0
  1061  002140  6E0A               	movwf	_wheel_speed_1+1,c	;volatile
  1062  002142  0E00               	movlw	0
  1063  002144  6E0B               	movwf	_wheel_speed_1+2,c	;volatile
  1064  002146  0E00               	movlw	0
  1065  002148  6E0C               	movwf	_wheel_speed_1+3,c	;volatile
  1066                           
  1067                           ;ABS_Code.c: 350: TMR1_overflow = 0;
  1068  00214A  9446               	bcf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  1069                           
  1070                           ;ABS_Code.c: 351: } else {
  1071  00214C  D02B               	goto	l5436
  1072  00214E                     l5434:
  1073                           
  1074                           ;ABS_Code.c: 352: wheel_speed_1 = (step * 100000) / gap_time_1;
  1075  00214E  5025               	movf	_step,w,c	;volatile
  1076  002150  0100               	movlb	0	; () banked
  1077  002152  6FC3               	movwf	___lmul@multiplier& (0+255),b
  1078  002154  6BC4               	clrf	(___lmul@multiplier+1)& (0+255),b
  1079  002156  6BC5               	clrf	(___lmul@multiplier+2)& (0+255),b
  1080  002158  6BC6               	clrf	(___lmul@multiplier+3)& (0+255),b
  1081  00215A  0EA0               	movlw	160
  1082  00215C  0100               	movlb	0	; () banked
  1083  00215E  6FC7               	movwf	___lmul@multiplicand& (0+255),b
  1084  002160  0E86               	movlw	134
  1085  002162  6FC8               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1086  002164  0E01               	movlw	1
  1087  002166  6FC9               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1088  002168  0E00               	movlw	0
  1089  00216A  6FCA               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1090  00216C  ECA6  F014         	call	___lmul	;wreg free
  1091  002170  C0C3  F100         	movff	?___lmul,___aldiv@dividend
  1092  002174  C0C4  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1093  002178  C0C5  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1094  00217C  C0C6  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1095  002180  C01D  F104         	movff	_gap_time_1,___aldiv@divisor	;volatile
  1096  002184  C01E  F105         	movff	_gap_time_1+1,___aldiv@divisor+1	;volatile
  1097  002188  0101               	movlb	1	; () banked
  1098  00218A  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1099  00218C  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1100  00218E  ECB3  F012         	call	___aldiv	;wreg free
  1101  002192  C100  F009         	movff	?___aldiv,_wheel_speed_1	;volatile
  1102  002196  C101  F00A         	movff	?___aldiv+1,_wheel_speed_1+1	;volatile
  1103  00219A  C102  F00B         	movff	?___aldiv+2,_wheel_speed_1+2	;volatile
  1104  00219E  C103  F00C         	movff	?___aldiv+3,_wheel_speed_1+3	;volatile
  1105  0021A2  D000               	goto	l5436
  1106  0021A4                     l5436:
  1107                           
  1108                           ;ABS_Code.c: 353: }
  1109                           ;ABS_Code.c: 354: speed_array[3] = wheel_speed_1 >> 8;
  1110  0021A4  C00A  F092         	movff	_wheel_speed_1+1,_speed_array+3	;volatile
  1111                           
  1112                           ;ABS_Code.c: 355: speed_array[2] = wheel_speed_1;
  1113  0021A8  C009  F091         	movff	_wheel_speed_1,_speed_array+2	;volatile
  1114                           
  1115                           ;ABS_Code.c: 356: ENC1_measure = 0;
  1116  0021AC  9046               	bcf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  1117  0021AE  D000               	goto	l5442
  1118  0021B0                     l5442:
  1119                           
  1120                           ;ABS_Code.c: 357: }
  1121                           ;ABS_Code.c: 360: if ((ENC2_measure == 1) || (TMR3_overflow == 1)) {
  1122  0021B0  B246               	btfsc	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1123  0021B2  D002               	goto	l733
  1124  0021B4  A646               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1125  0021B6  D745               	goto	l5384
  1126  0021B8                     l733:
  1127                           
  1128                           ;ABS_Code.c: 361: if (TMR3_overflow == 1) {
  1129  0021B8  A646               	btfss	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1130  0021BA  D00A               	goto	l5450
  1131                           
  1132                           ;ABS_Code.c: 362: wheel_speed_2 = 0;
  1133  0021BC  0E00               	movlw	0
  1134  0021BE  6E0D               	movwf	_wheel_speed_2,c	;volatile
  1135  0021C0  0E00               	movlw	0
  1136  0021C2  6E0E               	movwf	_wheel_speed_2+1,c	;volatile
  1137  0021C4  0E00               	movlw	0
  1138  0021C6  6E0F               	movwf	_wheel_speed_2+2,c	;volatile
  1139  0021C8  0E00               	movlw	0
  1140  0021CA  6E10               	movwf	_wheel_speed_2+3,c	;volatile
  1141                           
  1142                           ;ABS_Code.c: 363: TMR3_overflow = 0;
  1143  0021CC  9646               	bcf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  1144                           
  1145                           ;ABS_Code.c: 364: } else {
  1146  0021CE  D02B               	goto	l5452
  1147  0021D0                     l5450:
  1148                           
  1149                           ;ABS_Code.c: 365: wheel_speed_2 = (step * 100000) / gap_time_2;
  1150  0021D0  5025               	movf	_step,w,c	;volatile
  1151  0021D2  0100               	movlb	0	; () banked
  1152  0021D4  6FC3               	movwf	___lmul@multiplier& (0+255),b
  1153  0021D6  6BC4               	clrf	(___lmul@multiplier+1)& (0+255),b
  1154  0021D8  6BC5               	clrf	(___lmul@multiplier+2)& (0+255),b
  1155  0021DA  6BC6               	clrf	(___lmul@multiplier+3)& (0+255),b
  1156  0021DC  0EA0               	movlw	160
  1157  0021DE  0100               	movlb	0	; () banked
  1158  0021E0  6FC7               	movwf	___lmul@multiplicand& (0+255),b
  1159  0021E2  0E86               	movlw	134
  1160  0021E4  6FC8               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1161  0021E6  0E01               	movlw	1
  1162  0021E8  6FC9               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1163  0021EA  0E00               	movlw	0
  1164  0021EC  6FCA               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1165  0021EE  ECA6  F014         	call	___lmul	;wreg free
  1166  0021F2  C0C3  F100         	movff	?___lmul,___aldiv@dividend
  1167  0021F6  C0C4  F101         	movff	?___lmul+1,___aldiv@dividend+1
  1168  0021FA  C0C5  F102         	movff	?___lmul+2,___aldiv@dividend+2
  1169  0021FE  C0C6  F103         	movff	?___lmul+3,___aldiv@dividend+3
  1170  002202  C01F  F104         	movff	_gap_time_2,___aldiv@divisor	;volatile
  1171  002206  C020  F105         	movff	_gap_time_2+1,___aldiv@divisor+1	;volatile
  1172  00220A  0101               	movlb	1	; () banked
  1173  00220C  6B06               	clrf	(___aldiv@divisor+2)& (0+255),b
  1174  00220E  6B07               	clrf	(___aldiv@divisor+3)& (0+255),b
  1175  002210  ECB3  F012         	call	___aldiv	;wreg free
  1176  002214  C100  F00D         	movff	?___aldiv,_wheel_speed_2	;volatile
  1177  002218  C101  F00E         	movff	?___aldiv+1,_wheel_speed_2+1	;volatile
  1178  00221C  C102  F00F         	movff	?___aldiv+2,_wheel_speed_2+2	;volatile
  1179  002220  C103  F010         	movff	?___aldiv+3,_wheel_speed_2+3	;volatile
  1180  002224  D000               	goto	l5452
  1181  002226                     l5452:
  1182                           
  1183                           ;ABS_Code.c: 366: }
  1184                           ;ABS_Code.c: 367: speed_array[1] = wheel_speed_2 >> 8;
  1185  002226  C00E  F090         	movff	_wheel_speed_2+1,_speed_array+1	;volatile
  1186                           
  1187                           ;ABS_Code.c: 368: speed_array[0] = wheel_speed_2;
  1188  00222A  C00D  F08F         	movff	_wheel_speed_2,_speed_array	;volatile
  1189                           
  1190                           ;ABS_Code.c: 369: ENC2_measure = 0;
  1191  00222E  9246               	bcf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  1192  002230  D708               	goto	l5384
  1193  002232  EFC7  F000         	goto	start
  1194  002236                     __end_of_main:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           prodh	equ	0xFF4
  1201                           prodl	equ	0xFF3
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           postdec1	equ	0xFE5
  1205                           fsr1l	equ	0xFE1
  1206                           status	equ	0xFD8
  1207                           
  1208 ;; *************** function _remote_frame_handler *****************
  1209 ;; Defined at:
  1210 ;;		line 379 in file "ABS_Code.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;		None               void
  1217 ;; Registers used:
  1218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1224 ;;      Params:         0       0       0       0
  1225 ;;      Locals:         0       0       0       0
  1226 ;;      Temps:          0       0       0       0
  1227 ;;      Totals:         0       0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    5
  1231 ;; This function calls:
  1232 ;;		_CANisTxReady
  1233 ;;		_CANsendMessage
  1234 ;;		___wmul
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text1
  1241  002404                     __ptext1:
  1242                           	opt stack 0
  1243  002404                     _remote_frame_handler:
  1244                           	opt stack 25
  1245                           
  1246                           ;ABS_Code.c: 380: if (CANisTxReady() == 1) {
  1247                           
  1248                           ;incstack = 0
  1249  002404  EC6A  F015         	call	_CANisTxReady	;wreg free
  1250  002408  06E8               	decf	wreg,f,c
  1251  00240A  A4D8               	btfss	status,2,c
  1252  00240C  D0A9               	goto	l741
  1253                           
  1254                           ;ABS_Code.c: 381: if (remote_frame_id == 0b00000000010) {
  1255  00240E  0E02               	movlw	2
  1256  002410  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1257  002412  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1258  002414  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1259  002416  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1260  002418  A4D8               	btfss	status,2,c
  1261  00241A  D01C               	goto	l5084
  1262                           
  1263                           ;ABS_Code.c: 382: status_array[0] = 0x01;
  1264  00241C  0E01               	movlw	1
  1265  00241E  0100               	movlb	0	; () banked
  1266  002420  6F97               	movwf	_status_array& (0+255),b	;volatile
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;ABS_Code.c: 383: CANsendMessage(0b00000000010, status_array, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1270  002422  0E02               	movlw	2
  1271  002424  0100               	movlb	0	; () banked
  1272  002426  6FC3               	movwf	CANsendMessage@identifier& (0+255),b
  1273  002428  0E00               	movlw	0
  1274  00242A  6FC4               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1275  00242C  0E00               	movlw	0
  1276  00242E  6FC5               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1277  002430  0E00               	movlw	0
  1278  002432  6FC6               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1279  002434  0E97               	movlw	low _status_array
  1280  002436  0100               	movlb	0	; () banked
  1281  002438  6FC7               	movwf	CANsendMessage@data& (0+255),b
  1282  00243A  0E00               	movlw	high _status_array
  1283  00243C  0100               	movlb	0	; () banked
  1284  00243E  6FC8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1285  002440  0E08               	movlw	8
  1286  002442  0100               	movlb	0	; () banked
  1287  002444  6FC9               	movwf	CANsendMessage@dataLength& (0+255),b
  1288  002446  0EBC               	movlw	188
  1289  002448  0100               	movlb	0	; () banked
  1290  00244A  6FCA               	movwf	CANsendMessage@flags& (0+255),b
  1291  00244C  EC5E  F006         	call	_CANsendMessage	;wreg free
  1292                           
  1293                           ;ABS_Code.c: 384: PORTCbits.RC1 = ~PORTCbits.RC1;
  1294  002450  7282               	btg	3970,1,c	;volatile
  1295  002452  D000               	goto	l5084
  1296  002454                     l5084:
  1297                           
  1298                           ;ABS_Code.c: 385: }
  1299                           ;ABS_Code.c: 387: if (remote_frame_id == 0b00000001000) {
  1300  002454  0E08               	movlw	8
  1301  002456  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1302  002458  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1303  00245A  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1304  00245C  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1305  00245E  A4D8               	btfss	status,2,c
  1306  002460  D017               	goto	l5088
  1307                           
  1308                           ;ABS_Code.c: 388: CANsendMessage(remote_frame_id, speed_array, 8, CAN_CONFIG_STD_MSG & C
      +                          AN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1309  002462  C001  F0C3         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1310  002466  C002  F0C4         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1311  00246A  C003  F0C5         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1312  00246E  C004  F0C6         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1313  002472  0E8F               	movlw	low _speed_array
  1314  002474  0100               	movlb	0	; () banked
  1315  002476  6FC7               	movwf	CANsendMessage@data& (0+255),b
  1316  002478  0E00               	movlw	high _speed_array
  1317  00247A  0100               	movlb	0	; () banked
  1318  00247C  6FC8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1319  00247E  0E08               	movlw	8
  1320  002480  0100               	movlb	0	; () banked
  1321  002482  6FC9               	movwf	CANsendMessage@dataLength& (0+255),b
  1322  002484  0EBC               	movlw	188
  1323  002486  0100               	movlb	0	; () banked
  1324  002488  6FCA               	movwf	CANsendMessage@flags& (0+255),b
  1325  00248A  EC5E  F006         	call	_CANsendMessage	;wreg free
  1326  00248E  D000               	goto	l5088
  1327  002490                     l5088:
  1328                           
  1329                           ;ABS_Code.c: 389: }
  1330                           ;ABS_Code.c: 390: if (remote_frame_id == 0b00000001010) {
  1331  002490  0E0A               	movlw	10
  1332  002492  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1333  002494  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1334  002496  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1335  002498  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1336  00249A  A4D8               	btfss	status,2,c
  1337  00249C  D014               	goto	l5094
  1338                           
  1339                           ;ABS_Code.c: 391: int_counter_1 = 0;
  1340  00249E  0E00               	movlw	0
  1341  0024A0  0100               	movlb	0	; () banked
  1342  0024A2  6F6C               	movwf	_int_counter_1& (0+255),b	;volatile
  1343  0024A4  0E00               	movlw	0
  1344  0024A6  6F6D               	movwf	(_int_counter_1+1)& (0+255),b	;volatile
  1345  0024A8  0E00               	movlw	0
  1346  0024AA  6F6E               	movwf	(_int_counter_1+2)& (0+255),b	;volatile
  1347  0024AC  0E00               	movlw	0
  1348  0024AE  6F6F               	movwf	(_int_counter_1+3)& (0+255),b	;volatile
  1349                           
  1350                           ;ABS_Code.c: 392: int_counter_2 = 0;
  1351  0024B0  0E00               	movlw	0
  1352  0024B2  0100               	movlb	0	; () banked
  1353  0024B4  6F70               	movwf	_int_counter_2& (0+255),b	;volatile
  1354  0024B6  0E00               	movlw	0
  1355  0024B8  6F71               	movwf	(_int_counter_2+1)& (0+255),b	;volatile
  1356  0024BA  0E00               	movlw	0
  1357  0024BC  6F72               	movwf	(_int_counter_2+2)& (0+255),b	;volatile
  1358  0024BE  0E00               	movlw	0
  1359  0024C0  6F73               	movwf	(_int_counter_2+3)& (0+255),b	;volatile
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;ABS_Code.c: 393: count_flag = 1;
  1363  0024C2  8A46               	bsf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1364  0024C4  D000               	goto	l5094
  1365  0024C6                     l5094:
  1366                           
  1367                           ;ABS_Code.c: 394: }
  1368                           ;ABS_Code.c: 395: if (remote_frame_id == 0b00000001001) {
  1369  0024C6  0E09               	movlw	9
  1370  0024C8  1801               	xorwf	_remote_frame_id,w,c	;volatile
  1371  0024CA  1002               	iorwf	_remote_frame_id+1,w,c	;volatile
  1372  0024CC  1003               	iorwf	_remote_frame_id+2,w,c	;volatile
  1373  0024CE  1004               	iorwf	_remote_frame_id+3,w,c	;volatile
  1374  0024D0  A4D8               	btfss	status,2,c
  1375  0024D2  D03E               	goto	l5110
  1376                           
  1377                           ;ABS_Code.c: 396: distance_1 = step * (int_counter_1);
  1378  0024D4  C025  F0C3         	movff	_step,___wmul@multiplier	;volatile
  1379  0024D8  0100               	movlb	0	; () banked
  1380  0024DA  6BC4               	clrf	(___wmul@multiplier+1)& (0+255),b
  1381  0024DC  C06C  F0C5         	movff	_int_counter_1,___wmul@multiplicand	;volatile
  1382  0024E0  C06D  F0C6         	movff	_int_counter_1+1,___wmul@multiplicand+1	;volatile
  1383  0024E4  EC32  F015         	call	___wmul	;wreg free
  1384  0024E8  C0C3  F013         	movff	?___wmul,_distance_1	;volatile
  1385  0024EC  C0C4  F014         	movff	?___wmul+1,_distance_1+1	;volatile
  1386                           
  1387                           ;ABS_Code.c: 397: distance_2 = step * (int_counter_2);
  1388  0024F0  C025  F0C3         	movff	_step,___wmul@multiplier	;volatile
  1389  0024F4  0100               	movlb	0	; () banked
  1390  0024F6  6BC4               	clrf	(___wmul@multiplier+1)& (0+255),b
  1391  0024F8  C070  F0C5         	movff	_int_counter_2,___wmul@multiplicand	;volatile
  1392  0024FC  C071  F0C6         	movff	_int_counter_2+1,___wmul@multiplicand+1	;volatile
  1393  002500  EC32  F015         	call	___wmul	;wreg free
  1394  002504  C0C3  F015         	movff	?___wmul,_distance_2	;volatile
  1395  002508  C0C4  F016         	movff	?___wmul+1,_distance_2+1	;volatile
  1396                           
  1397                           ;ABS_Code.c: 398: count_flag = 0;
  1398  00250C  9A46               	bcf	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  1399                           
  1400                           ;ABS_Code.c: 399: distance_array[0] = distance_1;
  1401  00250E  C013  F087         	movff	_distance_1,_distance_array	;volatile
  1402                           
  1403                           ;ABS_Code.c: 400: distance_array[1] = distance_1 >> 8;
  1404  002512  5014               	movf	_distance_1+1,w,c	;volatile
  1405  002514  0100               	movlb	0	; () banked
  1406  002516  6F88               	movwf	(_distance_array+1)& (0+255),b	;volatile
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;ABS_Code.c: 401: distance_array[2] = distance_2;
  1410  002518  C015  F089         	movff	_distance_2,_distance_array+2	;volatile
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;ABS_Code.c: 402: distance_array[3] = distance_2 >> 8;
  1414  00251C  5016               	movf	_distance_2+1,w,c	;volatile
  1415  00251E  0100               	movlb	0	; () banked
  1416  002520  6F8A               	movwf	(_distance_array+3)& (0+255),b	;volatile
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;ABS_Code.c: 403: CANsendMessage(remote_frame_id, distance_array, 8, CAN_CONFIG_STD_MSG 
      +                          & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1420  002522  C001  F0C3         	movff	_remote_frame_id,CANsendMessage@identifier	;volatile
  1421  002526  C002  F0C4         	movff	_remote_frame_id+1,CANsendMessage@identifier+1	;volatile
  1422  00252A  C003  F0C5         	movff	_remote_frame_id+2,CANsendMessage@identifier+2	;volatile
  1423  00252E  C004  F0C6         	movff	_remote_frame_id+3,CANsendMessage@identifier+3	;volatile
  1424  002532  0E87               	movlw	low _distance_array
  1425  002534  0100               	movlb	0	; () banked
  1426  002536  6FC7               	movwf	CANsendMessage@data& (0+255),b
  1427  002538  0E00               	movlw	high _distance_array
  1428  00253A  0100               	movlb	0	; () banked
  1429  00253C  6FC8               	movwf	(CANsendMessage@data+1)& (0+255),b
  1430  00253E  0E08               	movlw	8
  1431  002540  0100               	movlb	0	; () banked
  1432  002542  6FC9               	movwf	CANsendMessage@dataLength& (0+255),b
  1433  002544  0EBC               	movlw	188
  1434  002546  0100               	movlb	0	; () banked
  1435  002548  6FCA               	movwf	CANsendMessage@flags& (0+255),b
  1436  00254A  EC5E  F006         	call	_CANsendMessage	;wreg free
  1437  00254E  D000               	goto	l5110
  1438  002550                     l5110:
  1439                           
  1440                           ;ABS_Code.c: 404: }
  1441                           ;ABS_Code.c: 406: if (TXB0CONbits.TXABT == 1 || TXB1CONbits.TXABT == 1) {
  1442  002550  010F               	movlb	15	; () banked
  1443  002552  BD40               	btfsc	64,6,b	;volatile
  1444  002554  D005               	goto	l741
  1445                           
  1446                           ; BSR set to: 15
  1447  002556  010F               	movlb	15	; () banked
  1448  002558  BD30               	btfsc	48,6,b	;volatile
  1449  00255A  D002               	goto	l741
  1450                           
  1451                           ; BSR set to: 15
  1452                           ;ABS_Code.c: 409: Tx_retry = 0;
  1453                           
  1454                           ;ABS_Code.c: 408: } else {
  1455                           
  1456                           ; BSR set to: 15
  1457                           ;ABS_Code.c: 407: Tx_retry = 1;
  1458  00255C  9846               	bcf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1459                           
  1460                           ; BSR set to: 15
  1461                           ;ABS_Code.c: 410: }
  1462                           ;ABS_Code.c: 411: } else {
  1463  00255E  D002               	goto	l751
  1464  002560                     l741:
  1465                           
  1466                           ;ABS_Code.c: 412: Tx_retry = 1;
  1467  002560  8846               	bsf	_Tx_retry/(0+8),_Tx_retry& (0+7),c	;volatile
  1468  002562  D000               	goto	l751
  1469  002564                     l751:
  1470  002564  0012               	return		;funcret
  1471  002566                     __end_of_remote_frame_handler:
  1472                           	opt stack 0
  1473                           tblptru	equ	0xFF8
  1474                           tblptrh	equ	0xFF7
  1475                           tblptrl	equ	0xFF6
  1476                           tablat	equ	0xFF5
  1477                           prodh	equ	0xFF4
  1478                           prodl	equ	0xFF3
  1479                           postinc0	equ	0xFEE
  1480                           wreg	equ	0xFE8
  1481                           postdec1	equ	0xFE5
  1482                           fsr1l	equ	0xFE1
  1483                           status	equ	0xFD8
  1484                           
  1485 ;; *************** function ___wmul *****************
  1486 ;; Defined at:
  1487 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  multiplier      2   36[BANK0 ] unsigned int 
  1490 ;;  multiplicand    2   38[BANK0 ] unsigned int 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  product         2   40[BANK0 ] unsigned int 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2   36[BANK0 ] unsigned int 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, prodl, prodh
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1502 ;;      Params:         0       4       0       0
  1503 ;;      Locals:         0       2       0       0
  1504 ;;      Temps:          0       0       0       0
  1505 ;;      Totals:         0       6       0       0
  1506 ;;Total ram usage:        6 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    4
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_remote_frame_handler
  1513 ;;		_delay_ms
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text2
  1518  002A64                     __ptext2:
  1519                           	opt stack 0
  1520  002A64                     ___wmul:
  1521                           	opt stack 25
  1522                           
  1523                           ;incstack = 0
  1524  002A64  0100               	movlb	0	; () banked
  1525  002A66  51C3               	movf	___wmul@multiplier& (0+255),w,b
  1526  002A68  0100               	movlb	0	; () banked
  1527  002A6A  03C5               	mulwf	___wmul@multiplicand& (0+255),b
  1528  002A6C  CFF3 F0C7          	movff	prodl,___wmul@product
  1529  002A70  CFF4 F0C8          	movff	prodh,___wmul@product+1
  1530  002A74  0100               	movlb	0	; () banked
  1531  002A76  51C3               	movf	___wmul@multiplier& (0+255),w,b
  1532  002A78  0100               	movlb	0	; () banked
  1533  002A7A  03C6               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1534  002A7C  50F3               	movf	prodl,w,c
  1535  002A7E  0100               	movlb	0	; () banked
  1536  002A80  27C8               	addwf	(___wmul@product+1)& (0+255),f,b
  1537  002A82  0100               	movlb	0	; () banked
  1538  002A84  51C4               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1539  002A86  0100               	movlb	0	; () banked
  1540  002A88  03C5               	mulwf	___wmul@multiplicand& (0+255),b
  1541  002A8A  50F3               	movf	prodl,w,c
  1542  002A8C  0100               	movlb	0	; () banked
  1543  002A8E  27C8               	addwf	(___wmul@product+1)& (0+255),f,b
  1544                           
  1545                           ; BSR set to: 0
  1546  002A90  C0C7  F0C3         	movff	___wmul@product,?___wmul
  1547  002A94  C0C8  F0C4         	movff	___wmul@product+1,?___wmul+1
  1548  002A98  D000               	goto	l767
  1549  002A9A                     l767:
  1550                           
  1551                           ; BSR set to: 0
  1552  002A9A  0012               	return		;funcret
  1553  002A9C                     __end_of___wmul:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1l	equ	0xFE1
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _CANsendMessage *****************
  1568 ;; Defined at:
  1569 ;;		line 294 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  identifier      4   36[BANK0 ] unsigned long 
  1572 ;;  data            2   40[BANK0 ] PTR unsigned char 
  1573 ;;		 -> distance_array(8), status_array(8), speed_array(8), remote_frame_array(8), 
  1574 ;;  dataLength      1   42[BANK0 ] unsigned char 
  1575 ;;  flags           1   43[BANK0 ] enum E16907
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  tamp            4   48[BANK0 ] unsigned long 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;		None               void
  1580 ;; Registers used:
  1581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1587 ;;      Params:         0       8       0       0
  1588 ;;      Locals:         0       4       0       0
  1589 ;;      Temps:          0       4       0       0
  1590 ;;      Totals:         0      16       0       0
  1591 ;;Total ram usage:       16 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    4
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;;		_remote_frame_handler
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text3
  1603  000CBC                     __ptext3:
  1604                           	opt stack 0
  1605  000CBC                     _CANsendMessage:
  1606                           	opt stack 25
  1607                           
  1608                           ;inc\CANlib.h: 296: unsigned long tamp;
  1609                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;incstack = 0
  1613  000CBC  010F               	movlb	15	; () banked
  1614  000CBE  B740               	btfsc	64,3,b	;volatile
  1615  000CC0  D142               	goto	l373
  1616                           
  1617                           ; BSR set to: 15
  1618                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1619  000CC2  C0C9  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1620                           
  1621                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1622  000CC6  0100               	movlb	0	; () banked
  1623  000CC8  ADCA               	btfss	CANsendMessage@flags& (0+255),6,b
  1624  000CCA  D003               	goto	l374
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1628  000CCC  010F               	movlb	15	; () banked
  1629  000CCE  8D45               	bsf	69,6,b	;volatile
  1630  000CD0  D002               	goto	l375
  1631  000CD2                     l374:
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;inc\CANlib.h: 302: else
  1635                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1636  000CD2  010F               	movlb	15	; () banked
  1637  000CD4  9D45               	bcf	69,6,b	;volatile
  1638  000CD6                     l375:
  1639                           
  1640                           ; BSR set to: 15
  1641                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1642  000CD6  0100               	movlb	0	; () banked
  1643  000CD8  A7CA               	btfss	CANsendMessage@flags& (0+255),3,b
  1644  000CDA  D07A               	goto	l376
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;inc\CANlib.h: 306: {
  1648                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1649  000CDC  0100               	movlb	0	; () banked
  1650  000CDE  51C3               	movf	CANsendMessage@identifier& (0+255),w,b
  1651  000CE0  0100               	movlb	0	; () banked
  1652  000CE2  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  1653  000CE4  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1654  000CE6  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1655  000CE8  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1659  000CEA  C0CF  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1663  000CEE  0E00               	movlw	0
  1664  000CF0  0100               	movlb	0	; () banked
  1665  000CF2  15C3               	andwf	CANsendMessage@identifier& (0+255),w,b
  1666  000CF4  0100               	movlb	0	; () banked
  1667  000CF6  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  1668  000CF8  0EFF               	movlw	255
  1669  000CFA  0100               	movlb	0	; () banked
  1670  000CFC  15C4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1671  000CFE  0100               	movlb	0	; () banked
  1672  000D00  6FD0               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1673  000D02  0E00               	movlw	0
  1674  000D04  0100               	movlb	0	; () banked
  1675  000D06  15C5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1676  000D08  0100               	movlb	0	; () banked
  1677  000D0A  6FD1               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1678  000D0C  0E00               	movlw	0
  1679  000D0E  0100               	movlb	0	; () banked
  1680  000D10  15C6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1681  000D12  0100               	movlb	0	; () banked
  1682  000D14  6FD2               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1686  000D16  C0CF  F0CB         	movff	CANsendMessage@tamp,??_CANsendMessage
  1687  000D1A  C0D0  F0CC         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1688  000D1E  C0D1  F0CD         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1689  000D22  C0D2  F0CE         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1690  000D26  C0CC  F0CB         	movff	??_CANsendMessage+1,??_CANsendMessage
  1691  000D2A  C0CD  F0CC         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1692  000D2E  C0CE  F0CD         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1693  000D32  0100               	movlb	0	; () banked
  1694  000D34  6BCE               	clrf	(??_CANsendMessage+3)& (0+255),b
  1695  000D36  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  1696  000D3A  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1697  000D3E  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1698  000D42  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1702  000D46  C0CF  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1706  000D4A  0E00               	movlw	0
  1707  000D4C  010F               	movlb	15	; () banked
  1708  000D4E  6F42               	movwf	66,b	;volatile
  1709                           
  1710                           ; BSR set to: 15
  1711                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1712  000D50  010F               	movlb	15	; () banked
  1713  000D52  8742               	bsf	66,3,b	;volatile
  1714                           
  1715                           ; BSR set to: 15
  1716                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1717  000D54  0100               	movlb	0	; () banked
  1718  000D56  A1C5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1719  000D58  D002               	goto	l377
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1723  000D5A  010F               	movlb	15	; () banked
  1724  000D5C  8142               	bsf	66,0,b	;volatile
  1725  000D5E                     l377:
  1726                           
  1727                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1728  000D5E  0100               	movlb	0	; () banked
  1729  000D60  A3C5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1730  000D62  D002               	goto	l378
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1734  000D64  010F               	movlb	15	; () banked
  1735  000D66  8342               	bsf	66,1,b	;volatile
  1736  000D68                     l378:
  1737                           
  1738                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1739  000D68  0100               	movlb	0	; () banked
  1740  000D6A  A5C5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1741  000D6C  D002               	goto	l379
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1745  000D6E  010F               	movlb	15	; () banked
  1746  000D70  8B42               	bsf	66,5,b	;volatile
  1747  000D72                     l379:
  1748                           
  1749                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1750  000D72  0100               	movlb	0	; () banked
  1751  000D74  A7C5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1752  000D76  D002               	goto	l380
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1756  000D78  010F               	movlb	15	; () banked
  1757  000D7A  8D42               	bsf	66,6,b	;volatile
  1758  000D7C                     l380:
  1759                           
  1760                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1761  000D7C  0100               	movlb	0	; () banked
  1762  000D7E  A9C5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1763  000D80  D003               	goto	l4762
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1767  000D82  010F               	movlb	15	; () banked
  1768  000D84  8F42               	bsf	66,7,b	;volatile
  1769  000D86  D000               	goto	l4762
  1770  000D88                     l4762:
  1771                           
  1772                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1773  000D88  C0C3  F0CB         	movff	CANsendMessage@identifier,??_CANsendMessage
  1774  000D8C  C0C4  F0CC         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1775  000D90  C0C5  F0CD         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1776  000D94  C0C6  F0CE         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1777  000D98  0E16               	movlw	22
  1778  000D9A  D006               	goto	u6120
  1779  000D9C                     u6125:
  1780  000D9C  0100               	movlb	0	; () banked
  1781  000D9E  90D8               	bcf	status,0,c
  1782  000DA0  33CE               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1783  000DA2  33CD               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1784  000DA4  33CC               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1785  000DA6  33CB               	rrcf	??_CANsendMessage& (0+255),f,b
  1786  000DA8                     u6120:
  1787  000DA8  2EE8               	decfsz	wreg,f,c
  1788  000DAA  D7F8               	goto	u6125
  1789  000DAC  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  1790  000DB0  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1791  000DB4  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1792  000DB8  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  1796  000DBC  0100               	movlb	0	; () banked
  1797  000DBE  51CF               	movf	CANsendMessage@tamp& (0+255),w,b
  1798  000DC0  0100               	movlb	0	; () banked
  1799  000DC2  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  1800  000DC4  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1801  000DC6  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1802  000DC8  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  1806  000DCA  C0CF  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1807                           
  1808                           ;inc\CANlib.h: 332: }
  1809  000DCE  D05A               	goto	l4782
  1810  000DD0                     l376:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;inc\CANlib.h: 334: else
  1814                           ;inc\CANlib.h: 336: {
  1815                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  1816  000DD0  010F               	movlb	15	; () banked
  1817  000DD2  9742               	bcf	66,3,b	;volatile
  1818                           
  1819                           ; BSR set to: 15
  1820                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  1821  000DD4  C0C3  F0CB         	movff	CANsendMessage@identifier,??_CANsendMessage
  1822  000DD8  C0C4  F0CC         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1823  000DDC  C0C5  F0CD         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1824  000DE0  C0C6  F0CE         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1825  000DE4  0E04               	movlw	4
  1826  000DE6  D006               	goto	u6130
  1827  000DE8                     u6135:
  1828  000DE8  0100               	movlb	0	; () banked
  1829  000DEA  90D8               	bcf	status,0,c
  1830  000DEC  33CE               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1831  000DEE  33CD               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1832  000DF0  33CC               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1833  000DF2  33CB               	rrcf	??_CANsendMessage& (0+255),f,b
  1834  000DF4                     u6130:
  1835  000DF4  2EE8               	decfsz	wreg,f,c
  1836  000DF6  D7F8               	goto	u6135
  1837  000DF8  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  1838  000DFC  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1839  000E00  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1840  000E04  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  1844  000E08  0100               	movlb	0	; () banked
  1845  000E0A  51CF               	movf	CANsendMessage@tamp& (0+255),w,b
  1846  000E0C  0100               	movlb	0	; () banked
  1847  000E0E  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  1848  000E10  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1849  000E12  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1850  000E14  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  1854  000E16  C0CF  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  1858  000E1A  0E07               	movlw	7
  1859  000E1C  0100               	movlb	0	; () banked
  1860  000E1E  15C3               	andwf	CANsendMessage@identifier& (0+255),w,b
  1861  000E20  0100               	movlb	0	; () banked
  1862  000E22  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  1863  000E24  0E00               	movlw	0
  1864  000E26  0100               	movlb	0	; () banked
  1865  000E28  15C4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1866  000E2A  0100               	movlb	0	; () banked
  1867  000E2C  6FD0               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1868  000E2E  0E00               	movlw	0
  1869  000E30  0100               	movlb	0	; () banked
  1870  000E32  15C5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1871  000E34  0100               	movlb	0	; () banked
  1872  000E36  6FD1               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1873  000E38  0E00               	movlw	0
  1874  000E3A  0100               	movlb	0	; () banked
  1875  000E3C  15C6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1876  000E3E  0100               	movlb	0	; () banked
  1877  000E40  6FD2               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  1881  000E42  C0CF  F0CB         	movff	CANsendMessage@tamp,??_CANsendMessage
  1882  000E46  C0D0  F0CC         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1883  000E4A  C0D1  F0CD         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1884  000E4E  C0D2  F0CE         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1885  000E52  0E05               	movlw	5
  1886  000E54                     u6145:
  1887  000E54  90D8               	bcf	status,0,c
  1888  000E56  0100               	movlb	0	; () banked
  1889  000E58  37CB               	rlcf	??_CANsendMessage& (0+255),f,b
  1890  000E5A  37CC               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  1891  000E5C  37CD               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  1892  000E5E  37CE               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  1893  000E60  2EE8               	decfsz	wreg,f,c
  1894  000E62  D7F8               	goto	u6145
  1895  000E64  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  1896  000E68  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1897  000E6C  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1898  000E70  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  1902  000E74  010F               	movlb	15	; () banked
  1903  000E76  5142               	movf	66,w,b	;volatile
  1904  000E78  0B1F               	andlw	31
  1905  000E7A  010F               	movlb	15	; () banked
  1906  000E7C  6F42               	movwf	66,b	;volatile
  1907                           
  1908                           ; BSR set to: 15
  1909                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  1910  000E7E  C0CF  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  1911  000E82  D000               	goto	l4782
  1912  000E84                     l4782:
  1913                           
  1914                           ;inc\CANlib.h: 347: }
  1915                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  1916  000E84  0100               	movlb	0	; () banked
  1917  000E86  A1CA               	btfss	CANsendMessage@flags& (0+255),0,b
  1918  000E88  D003               	goto	l383
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  1922  000E8A  010F               	movlb	15	; () banked
  1923  000E8C  8140               	bsf	64,0,b	;volatile
  1924  000E8E  D002               	goto	l384
  1925  000E90                     l383:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;inc\CANlib.h: 351: else
  1929                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  1930  000E90  010F               	movlb	15	; () banked
  1931  000E92  9140               	bcf	64,0,b	;volatile
  1932  000E94                     l384:
  1933                           
  1934                           ; BSR set to: 15
  1935                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  1936  000E94  0100               	movlb	0	; () banked
  1937  000E96  A3CA               	btfss	CANsendMessage@flags& (0+255),1,b
  1938  000E98  D003               	goto	l385
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  1942  000E9A  010F               	movlb	15	; () banked
  1943  000E9C  8340               	bsf	64,1,b	;volatile
  1944  000E9E  D003               	goto	l4788
  1945  000EA0                     l385:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;inc\CANlib.h: 355: else
  1949                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  1950  000EA0  010F               	movlb	15	; () banked
  1951  000EA2  9340               	bcf	64,1,b	;volatile
  1952  000EA4  D000               	goto	l4788
  1953  000EA6                     l4788:
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  1957  000EA6  C0C7  FFD9         	movff	CANsendMessage@data,fsr2l
  1958  000EAA  C0C8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  1959  000EAE  50DF               	movf	indf2,w,c
  1960  000EB0  010F               	movlb	15	; () banked
  1961  000EB2  6F46               	movwf	70,b	;volatile
  1962                           
  1963                           ; BSR set to: 15
  1964                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  1965  000EB4  0100               	movlb	0	; () banked
  1966  000EB6  EE20 F001          	lfsr	2,1
  1967  000EBA  51C7               	movf	CANsendMessage@data& (0+255),w,b
  1968  000EBC  26D9               	addwf	fsr2l,f,c
  1969  000EBE  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1970  000EC0  22DA               	addwfc	fsr2h,f,c
  1971  000EC2  50DF               	movf	indf2,w,c
  1972  000EC4  010F               	movlb	15	; () banked
  1973  000EC6  6F47               	movwf	71,b	;volatile
  1974                           
  1975                           ; BSR set to: 15
  1976                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  1977  000EC8  0100               	movlb	0	; () banked
  1978  000ECA  EE20 F002          	lfsr	2,2
  1979  000ECE  51C7               	movf	CANsendMessage@data& (0+255),w,b
  1980  000ED0  26D9               	addwf	fsr2l,f,c
  1981  000ED2  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1982  000ED4  22DA               	addwfc	fsr2h,f,c
  1983  000ED6  50DF               	movf	indf2,w,c
  1984  000ED8  010F               	movlb	15	; () banked
  1985  000EDA  6F48               	movwf	72,b	;volatile
  1986                           
  1987                           ; BSR set to: 15
  1988                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  1989  000EDC  0100               	movlb	0	; () banked
  1990  000EDE  EE20 F003          	lfsr	2,3
  1991  000EE2  51C7               	movf	CANsendMessage@data& (0+255),w,b
  1992  000EE4  26D9               	addwf	fsr2l,f,c
  1993  000EE6  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  1994  000EE8  22DA               	addwfc	fsr2h,f,c
  1995  000EEA  50DF               	movf	indf2,w,c
  1996  000EEC  010F               	movlb	15	; () banked
  1997  000EEE  6F49               	movwf	73,b	;volatile
  1998                           
  1999                           ; BSR set to: 15
  2000                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2001  000EF0  0100               	movlb	0	; () banked
  2002  000EF2  EE20 F004          	lfsr	2,4
  2003  000EF6  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2004  000EF8  26D9               	addwf	fsr2l,f,c
  2005  000EFA  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2006  000EFC  22DA               	addwfc	fsr2h,f,c
  2007  000EFE  50DF               	movf	indf2,w,c
  2008  000F00  010F               	movlb	15	; () banked
  2009  000F02  6F4A               	movwf	74,b	;volatile
  2010                           
  2011                           ; BSR set to: 15
  2012                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2013  000F04  0100               	movlb	0	; () banked
  2014  000F06  EE20 F005          	lfsr	2,5
  2015  000F0A  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2016  000F0C  26D9               	addwf	fsr2l,f,c
  2017  000F0E  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2018  000F10  22DA               	addwfc	fsr2h,f,c
  2019  000F12  50DF               	movf	indf2,w,c
  2020  000F14  010F               	movlb	15	; () banked
  2021  000F16  6F4B               	movwf	75,b	;volatile
  2022                           
  2023                           ; BSR set to: 15
  2024                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2025  000F18  0100               	movlb	0	; () banked
  2026  000F1A  EE20 F006          	lfsr	2,6
  2027  000F1E  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2028  000F20  26D9               	addwf	fsr2l,f,c
  2029  000F22  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2030  000F24  22DA               	addwfc	fsr2h,f,c
  2031  000F26  50DF               	movf	indf2,w,c
  2032  000F28  010F               	movlb	15	; () banked
  2033  000F2A  6F4C               	movwf	76,b	;volatile
  2034                           
  2035                           ; BSR set to: 15
  2036                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2037  000F2C  0100               	movlb	0	; () banked
  2038  000F2E  EE20 F007          	lfsr	2,7
  2039  000F32  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2040  000F34  26D9               	addwf	fsr2l,f,c
  2041  000F36  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2042  000F38  22DA               	addwfc	fsr2h,f,c
  2043  000F3A  50DF               	movf	indf2,w,c
  2044  000F3C  010F               	movlb	15	; () banked
  2045  000F3E  6F4D               	movwf	77,b	;volatile
  2046                           
  2047                           ; BSR set to: 15
  2048                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2049  000F40  010F               	movlb	15	; () banked
  2050  000F42  8740               	bsf	64,3,b	;volatile
  2051                           
  2052                           ; BSR set to: 15
  2053                           ;inc\CANlib.h: 368: return;
  2054  000F44  D28A               	goto	l387
  2055  000F46                     l373:
  2056                           
  2057                           ; BSR set to: 15
  2058                           ;inc\CANlib.h: 369: }
  2059                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2060  000F46  010F               	movlb	15	; () banked
  2061  000F48  B730               	btfsc	48,3,b	;volatile
  2062  000F4A  D142               	goto	l388
  2063                           
  2064                           ; BSR set to: 15
  2065                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2066  000F4C  C0C9  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2067                           
  2068                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2069  000F50  0100               	movlb	0	; () banked
  2070  000F52  ADCA               	btfss	CANsendMessage@flags& (0+255),6,b
  2071  000F54  D003               	goto	l389
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2075  000F56  010F               	movlb	15	; () banked
  2076  000F58  8D35               	bsf	53,6,b	;volatile
  2077  000F5A  D002               	goto	l390
  2078  000F5C                     l389:
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;inc\CANlib.h: 378: else
  2082                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2083  000F5C  010F               	movlb	15	; () banked
  2084  000F5E  9D35               	bcf	53,6,b	;volatile
  2085  000F60                     l390:
  2086                           
  2087                           ; BSR set to: 15
  2088                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2089  000F60  0100               	movlb	0	; () banked
  2090  000F62  A7CA               	btfss	CANsendMessage@flags& (0+255),3,b
  2091  000F64  D07A               	goto	l391
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;inc\CANlib.h: 382: {
  2095                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2096  000F66  0100               	movlb	0	; () banked
  2097  000F68  51C3               	movf	CANsendMessage@identifier& (0+255),w,b
  2098  000F6A  0100               	movlb	0	; () banked
  2099  000F6C  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2100  000F6E  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2101  000F70  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2102  000F72  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2106  000F74  C0CF  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2110  000F78  0E00               	movlw	0
  2111  000F7A  0100               	movlb	0	; () banked
  2112  000F7C  15C3               	andwf	CANsendMessage@identifier& (0+255),w,b
  2113  000F7E  0100               	movlb	0	; () banked
  2114  000F80  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2115  000F82  0EFF               	movlw	255
  2116  000F84  0100               	movlb	0	; () banked
  2117  000F86  15C4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2118  000F88  0100               	movlb	0	; () banked
  2119  000F8A  6FD0               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2120  000F8C  0E00               	movlw	0
  2121  000F8E  0100               	movlb	0	; () banked
  2122  000F90  15C5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2123  000F92  0100               	movlb	0	; () banked
  2124  000F94  6FD1               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2125  000F96  0E00               	movlw	0
  2126  000F98  0100               	movlb	0	; () banked
  2127  000F9A  15C6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2128  000F9C  0100               	movlb	0	; () banked
  2129  000F9E  6FD2               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2133  000FA0  C0CF  F0CB         	movff	CANsendMessage@tamp,??_CANsendMessage
  2134  000FA4  C0D0  F0CC         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2135  000FA8  C0D1  F0CD         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2136  000FAC  C0D2  F0CE         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2137  000FB0  C0CC  F0CB         	movff	??_CANsendMessage+1,??_CANsendMessage
  2138  000FB4  C0CD  F0CC         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2139  000FB8  C0CE  F0CD         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2140  000FBC  0100               	movlb	0	; () banked
  2141  000FBE  6BCE               	clrf	(??_CANsendMessage+3)& (0+255),b
  2142  000FC0  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2143  000FC4  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2144  000FC8  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2145  000FCC  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2149  000FD0  C0CF  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2153  000FD4  0E00               	movlw	0
  2154  000FD6  010F               	movlb	15	; () banked
  2155  000FD8  6F32               	movwf	50,b	;volatile
  2156                           
  2157                           ; BSR set to: 15
  2158                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2159  000FDA  010F               	movlb	15	; () banked
  2160  000FDC  8732               	bsf	50,3,b	;volatile
  2161                           
  2162                           ; BSR set to: 15
  2163                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2164  000FDE  0100               	movlb	0	; () banked
  2165  000FE0  A1C5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2166  000FE2  D002               	goto	l392
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2170  000FE4  010F               	movlb	15	; () banked
  2171  000FE6  8132               	bsf	50,0,b	;volatile
  2172  000FE8                     l392:
  2173                           
  2174                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2175  000FE8  0100               	movlb	0	; () banked
  2176  000FEA  A3C5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2177  000FEC  D002               	goto	l393
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2181  000FEE  010F               	movlb	15	; () banked
  2182  000FF0  8332               	bsf	50,1,b	;volatile
  2183  000FF2                     l393:
  2184                           
  2185                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2186  000FF2  0100               	movlb	0	; () banked
  2187  000FF4  A5C5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2188  000FF6  D002               	goto	l394
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2192  000FF8  010F               	movlb	15	; () banked
  2193  000FFA  8B32               	bsf	50,5,b	;volatile
  2194  000FFC                     l394:
  2195                           
  2196                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2197  000FFC  0100               	movlb	0	; () banked
  2198  000FFE  A7C5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2199  001000  D002               	goto	l395
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2203  001002  010F               	movlb	15	; () banked
  2204  001004  8D32               	bsf	50,6,b	;volatile
  2205  001006                     l395:
  2206                           
  2207                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2208  001006  0100               	movlb	0	; () banked
  2209  001008  A9C5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2210  00100A  D003               	goto	l4838
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2214  00100C  010F               	movlb	15	; () banked
  2215  00100E  8F32               	bsf	50,7,b	;volatile
  2216  001010  D000               	goto	l4838
  2217  001012                     l4838:
  2218                           
  2219                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2220  001012  C0C3  F0CB         	movff	CANsendMessage@identifier,??_CANsendMessage
  2221  001016  C0C4  F0CC         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2222  00101A  C0C5  F0CD         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2223  00101E  C0C6  F0CE         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2224  001022  0E16               	movlw	22
  2225  001024  D006               	goto	u6250
  2226  001026                     u6255:
  2227  001026  0100               	movlb	0	; () banked
  2228  001028  90D8               	bcf	status,0,c
  2229  00102A  33CE               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2230  00102C  33CD               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2231  00102E  33CC               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2232  001030  33CB               	rrcf	??_CANsendMessage& (0+255),f,b
  2233  001032                     u6250:
  2234  001032  2EE8               	decfsz	wreg,f,c
  2235  001034  D7F8               	goto	u6255
  2236  001036  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2237  00103A  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2238  00103E  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2239  001042  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2243  001046  0100               	movlb	0	; () banked
  2244  001048  51CF               	movf	CANsendMessage@tamp& (0+255),w,b
  2245  00104A  0100               	movlb	0	; () banked
  2246  00104C  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2247  00104E  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2248  001050  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2249  001052  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2253  001054  C0CF  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2254                           
  2255                           ;inc\CANlib.h: 407: }
  2256  001058  D05A               	goto	l4858
  2257  00105A                     l391:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;inc\CANlib.h: 409: else
  2261                           ;inc\CANlib.h: 411: {
  2262                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2263  00105A  010F               	movlb	15	; () banked
  2264  00105C  9732               	bcf	50,3,b	;volatile
  2265                           
  2266                           ; BSR set to: 15
  2267                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2268  00105E  C0C3  F0CB         	movff	CANsendMessage@identifier,??_CANsendMessage
  2269  001062  C0C4  F0CC         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2270  001066  C0C5  F0CD         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2271  00106A  C0C6  F0CE         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2272  00106E  0E04               	movlw	4
  2273  001070  D006               	goto	u6260
  2274  001072                     u6265:
  2275  001072  0100               	movlb	0	; () banked
  2276  001074  90D8               	bcf	status,0,c
  2277  001076  33CE               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2278  001078  33CD               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2279  00107A  33CC               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2280  00107C  33CB               	rrcf	??_CANsendMessage& (0+255),f,b
  2281  00107E                     u6260:
  2282  00107E  2EE8               	decfsz	wreg,f,c
  2283  001080  D7F8               	goto	u6265
  2284  001082  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2285  001086  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2286  00108A  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2287  00108E  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2291  001092  0100               	movlb	0	; () banked
  2292  001094  51CF               	movf	CANsendMessage@tamp& (0+255),w,b
  2293  001096  0100               	movlb	0	; () banked
  2294  001098  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2295  00109A  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2296  00109C  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2297  00109E  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2301  0010A0  C0CF  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2305  0010A4  0E07               	movlw	7
  2306  0010A6  0100               	movlb	0	; () banked
  2307  0010A8  15C3               	andwf	CANsendMessage@identifier& (0+255),w,b
  2308  0010AA  0100               	movlb	0	; () banked
  2309  0010AC  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2310  0010AE  0E00               	movlw	0
  2311  0010B0  0100               	movlb	0	; () banked
  2312  0010B2  15C4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2313  0010B4  0100               	movlb	0	; () banked
  2314  0010B6  6FD0               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2315  0010B8  0E00               	movlw	0
  2316  0010BA  0100               	movlb	0	; () banked
  2317  0010BC  15C5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2318  0010BE  0100               	movlb	0	; () banked
  2319  0010C0  6FD1               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2320  0010C2  0E00               	movlw	0
  2321  0010C4  0100               	movlb	0	; () banked
  2322  0010C6  15C6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2323  0010C8  0100               	movlb	0	; () banked
  2324  0010CA  6FD2               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2328  0010CC  C0CF  F0CB         	movff	CANsendMessage@tamp,??_CANsendMessage
  2329  0010D0  C0D0  F0CC         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2330  0010D4  C0D1  F0CD         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2331  0010D8  C0D2  F0CE         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2332  0010DC  0E05               	movlw	5
  2333  0010DE                     u6275:
  2334  0010DE  90D8               	bcf	status,0,c
  2335  0010E0  0100               	movlb	0	; () banked
  2336  0010E2  37CB               	rlcf	??_CANsendMessage& (0+255),f,b
  2337  0010E4  37CC               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2338  0010E6  37CD               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2339  0010E8  37CE               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2340  0010EA  2EE8               	decfsz	wreg,f,c
  2341  0010EC  D7F8               	goto	u6275
  2342  0010EE  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2343  0010F2  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2344  0010F6  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2345  0010FA  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2349  0010FE  010F               	movlb	15	; () banked
  2350  001100  5132               	movf	50,w,b	;volatile
  2351  001102  0B1F               	andlw	31
  2352  001104  010F               	movlb	15	; () banked
  2353  001106  6F32               	movwf	50,b	;volatile
  2354                           
  2355                           ; BSR set to: 15
  2356                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2357  001108  C0CF  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2358  00110C  D000               	goto	l4858
  2359  00110E                     l4858:
  2360                           
  2361                           ;inc\CANlib.h: 422: }
  2362                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2363  00110E  0100               	movlb	0	; () banked
  2364  001110  A1CA               	btfss	CANsendMessage@flags& (0+255),0,b
  2365  001112  D003               	goto	l398
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2369  001114  010F               	movlb	15	; () banked
  2370  001116  8130               	bsf	48,0,b	;volatile
  2371  001118  D002               	goto	l399
  2372  00111A                     l398:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;inc\CANlib.h: 426: else
  2376                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2377  00111A  010F               	movlb	15	; () banked
  2378  00111C  9130               	bcf	48,0,b	;volatile
  2379  00111E                     l399:
  2380                           
  2381                           ; BSR set to: 15
  2382                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2383  00111E  0100               	movlb	0	; () banked
  2384  001120  A3CA               	btfss	CANsendMessage@flags& (0+255),1,b
  2385  001122  D003               	goto	l400
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2389  001124  010F               	movlb	15	; () banked
  2390  001126  8330               	bsf	48,1,b	;volatile
  2391  001128  D003               	goto	l4864
  2392  00112A                     l400:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;inc\CANlib.h: 430: else
  2396                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2397  00112A  010F               	movlb	15	; () banked
  2398  00112C  9330               	bcf	48,1,b	;volatile
  2399  00112E  D000               	goto	l4864
  2400  001130                     l4864:
  2401                           
  2402                           ; BSR set to: 15
  2403                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2404  001130  C0C7  FFD9         	movff	CANsendMessage@data,fsr2l
  2405  001134  C0C8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2406  001138  50DF               	movf	indf2,w,c
  2407  00113A  010F               	movlb	15	; () banked
  2408  00113C  6F36               	movwf	54,b	;volatile
  2409                           
  2410                           ; BSR set to: 15
  2411                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2412  00113E  0100               	movlb	0	; () banked
  2413  001140  EE20 F001          	lfsr	2,1
  2414  001144  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2415  001146  26D9               	addwf	fsr2l,f,c
  2416  001148  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2417  00114A  22DA               	addwfc	fsr2h,f,c
  2418  00114C  50DF               	movf	indf2,w,c
  2419  00114E  010F               	movlb	15	; () banked
  2420  001150  6F37               	movwf	55,b	;volatile
  2421                           
  2422                           ; BSR set to: 15
  2423                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2424  001152  0100               	movlb	0	; () banked
  2425  001154  EE20 F002          	lfsr	2,2
  2426  001158  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2427  00115A  26D9               	addwf	fsr2l,f,c
  2428  00115C  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2429  00115E  22DA               	addwfc	fsr2h,f,c
  2430  001160  50DF               	movf	indf2,w,c
  2431  001162  010F               	movlb	15	; () banked
  2432  001164  6F38               	movwf	56,b	;volatile
  2433                           
  2434                           ; BSR set to: 15
  2435                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2436  001166  0100               	movlb	0	; () banked
  2437  001168  EE20 F003          	lfsr	2,3
  2438  00116C  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2439  00116E  26D9               	addwf	fsr2l,f,c
  2440  001170  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2441  001172  22DA               	addwfc	fsr2h,f,c
  2442  001174  50DF               	movf	indf2,w,c
  2443  001176  010F               	movlb	15	; () banked
  2444  001178  6F39               	movwf	57,b	;volatile
  2445                           
  2446                           ; BSR set to: 15
  2447                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2448  00117A  0100               	movlb	0	; () banked
  2449  00117C  EE20 F004          	lfsr	2,4
  2450  001180  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2451  001182  26D9               	addwf	fsr2l,f,c
  2452  001184  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2453  001186  22DA               	addwfc	fsr2h,f,c
  2454  001188  50DF               	movf	indf2,w,c
  2455  00118A  010F               	movlb	15	; () banked
  2456  00118C  6F3A               	movwf	58,b	;volatile
  2457                           
  2458                           ; BSR set to: 15
  2459                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2460  00118E  0100               	movlb	0	; () banked
  2461  001190  EE20 F005          	lfsr	2,5
  2462  001194  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2463  001196  26D9               	addwf	fsr2l,f,c
  2464  001198  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2465  00119A  22DA               	addwfc	fsr2h,f,c
  2466  00119C  50DF               	movf	indf2,w,c
  2467  00119E  010F               	movlb	15	; () banked
  2468  0011A0  6F3B               	movwf	59,b	;volatile
  2469                           
  2470                           ; BSR set to: 15
  2471                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2472  0011A2  0100               	movlb	0	; () banked
  2473  0011A4  EE20 F006          	lfsr	2,6
  2474  0011A8  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2475  0011AA  26D9               	addwf	fsr2l,f,c
  2476  0011AC  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2477  0011AE  22DA               	addwfc	fsr2h,f,c
  2478  0011B0  50DF               	movf	indf2,w,c
  2479  0011B2  010F               	movlb	15	; () banked
  2480  0011B4  6F3C               	movwf	60,b	;volatile
  2481                           
  2482                           ; BSR set to: 15
  2483                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2484  0011B6  0100               	movlb	0	; () banked
  2485  0011B8  EE20 F007          	lfsr	2,7
  2486  0011BC  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2487  0011BE  26D9               	addwf	fsr2l,f,c
  2488  0011C0  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2489  0011C2  22DA               	addwfc	fsr2h,f,c
  2490  0011C4  50DF               	movf	indf2,w,c
  2491  0011C6  010F               	movlb	15	; () banked
  2492  0011C8  6F3D               	movwf	61,b	;volatile
  2493                           
  2494                           ; BSR set to: 15
  2495                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2496  0011CA  010F               	movlb	15	; () banked
  2497  0011CC  8730               	bsf	48,3,b	;volatile
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;inc\CANlib.h: 444: return;
  2501  0011CE  D145               	goto	l387
  2502  0011D0                     l388:
  2503                           
  2504                           ; BSR set to: 15
  2505                           ;inc\CANlib.h: 445: }
  2506                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2507  0011D0  010F               	movlb	15	; () banked
  2508  0011D2  B720               	btfsc	32,3,b	;volatile
  2509  0011D4  D142               	goto	l387
  2510                           
  2511                           ; BSR set to: 15
  2512                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2513  0011D6  C0C9  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2514                           
  2515                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2516  0011DA  0100               	movlb	0	; () banked
  2517  0011DC  ADCA               	btfss	CANsendMessage@flags& (0+255),6,b
  2518  0011DE  D003               	goto	l403
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2522  0011E0  010F               	movlb	15	; () banked
  2523  0011E2  8D25               	bsf	37,6,b	;volatile
  2524  0011E4  D002               	goto	l404
  2525  0011E6                     l403:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;inc\CANlib.h: 454: else
  2529                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2530  0011E6  010F               	movlb	15	; () banked
  2531  0011E8  9D25               	bcf	37,6,b	;volatile
  2532  0011EA                     l404:
  2533                           
  2534                           ; BSR set to: 15
  2535                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2536  0011EA  0100               	movlb	0	; () banked
  2537  0011EC  A7CA               	btfss	CANsendMessage@flags& (0+255),3,b
  2538  0011EE  D07A               	goto	l405
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;inc\CANlib.h: 458: {
  2542                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2543  0011F0  0100               	movlb	0	; () banked
  2544  0011F2  51C3               	movf	CANsendMessage@identifier& (0+255),w,b
  2545  0011F4  0100               	movlb	0	; () banked
  2546  0011F6  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2547  0011F8  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2548  0011FA  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2549  0011FC  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2553  0011FE  C0CF  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2557  001202  0E00               	movlw	0
  2558  001204  0100               	movlb	0	; () banked
  2559  001206  15C3               	andwf	CANsendMessage@identifier& (0+255),w,b
  2560  001208  0100               	movlb	0	; () banked
  2561  00120A  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2562  00120C  0EFF               	movlw	255
  2563  00120E  0100               	movlb	0	; () banked
  2564  001210  15C4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2565  001212  0100               	movlb	0	; () banked
  2566  001214  6FD0               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2567  001216  0E00               	movlw	0
  2568  001218  0100               	movlb	0	; () banked
  2569  00121A  15C5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2570  00121C  0100               	movlb	0	; () banked
  2571  00121E  6FD1               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2572  001220  0E00               	movlw	0
  2573  001222  0100               	movlb	0	; () banked
  2574  001224  15C6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2575  001226  0100               	movlb	0	; () banked
  2576  001228  6FD2               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2580  00122A  C0CF  F0CB         	movff	CANsendMessage@tamp,??_CANsendMessage
  2581  00122E  C0D0  F0CC         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2582  001232  C0D1  F0CD         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2583  001236  C0D2  F0CE         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2584  00123A  C0CC  F0CB         	movff	??_CANsendMessage+1,??_CANsendMessage
  2585  00123E  C0CD  F0CC         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2586  001242  C0CE  F0CD         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2587  001246  0100               	movlb	0	; () banked
  2588  001248  6BCE               	clrf	(??_CANsendMessage+3)& (0+255),b
  2589  00124A  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2590  00124E  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2591  001252  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2592  001256  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2596  00125A  C0CF  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2600  00125E  0E00               	movlw	0
  2601  001260  010F               	movlb	15	; () banked
  2602  001262  6F22               	movwf	34,b	;volatile
  2603                           
  2604                           ; BSR set to: 15
  2605                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2606  001264  010F               	movlb	15	; () banked
  2607  001266  8722               	bsf	34,3,b	;volatile
  2608                           
  2609                           ; BSR set to: 15
  2610                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2611  001268  0100               	movlb	0	; () banked
  2612  00126A  A1C5               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2613  00126C  D002               	goto	l406
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2617  00126E  010F               	movlb	15	; () banked
  2618  001270  8122               	bsf	34,0,b	;volatile
  2619  001272                     l406:
  2620                           
  2621                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2622  001272  0100               	movlb	0	; () banked
  2623  001274  A3C5               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2624  001276  D002               	goto	l407
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2628  001278  010F               	movlb	15	; () banked
  2629  00127A  8322               	bsf	34,1,b	;volatile
  2630  00127C                     l407:
  2631                           
  2632                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2633  00127C  0100               	movlb	0	; () banked
  2634  00127E  A5C5               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2635  001280  D002               	goto	l408
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2639  001282  010F               	movlb	15	; () banked
  2640  001284  8B22               	bsf	34,5,b	;volatile
  2641  001286                     l408:
  2642                           
  2643                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2644  001286  0100               	movlb	0	; () banked
  2645  001288  A7C5               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2646  00128A  D002               	goto	l409
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2650  00128C  010F               	movlb	15	; () banked
  2651  00128E  8D22               	bsf	34,6,b	;volatile
  2652  001290                     l409:
  2653                           
  2654                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2655  001290  0100               	movlb	0	; () banked
  2656  001292  A9C5               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2657  001294  D003               	goto	l4914
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2661  001296  010F               	movlb	15	; () banked
  2662  001298  8F22               	bsf	34,7,b	;volatile
  2663  00129A  D000               	goto	l4914
  2664  00129C                     l4914:
  2665                           
  2666                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2667  00129C  C0C3  F0CB         	movff	CANsendMessage@identifier,??_CANsendMessage
  2668  0012A0  C0C4  F0CC         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2669  0012A4  C0C5  F0CD         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2670  0012A8  C0C6  F0CE         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2671  0012AC  0E16               	movlw	22
  2672  0012AE  D006               	goto	u6380
  2673  0012B0                     u6385:
  2674  0012B0  0100               	movlb	0	; () banked
  2675  0012B2  90D8               	bcf	status,0,c
  2676  0012B4  33CE               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2677  0012B6  33CD               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2678  0012B8  33CC               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2679  0012BA  33CB               	rrcf	??_CANsendMessage& (0+255),f,b
  2680  0012BC                     u6380:
  2681  0012BC  2EE8               	decfsz	wreg,f,c
  2682  0012BE  D7F8               	goto	u6385
  2683  0012C0  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2684  0012C4  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2685  0012C8  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2686  0012CC  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2690  0012D0  0100               	movlb	0	; () banked
  2691  0012D2  51CF               	movf	CANsendMessage@tamp& (0+255),w,b
  2692  0012D4  0100               	movlb	0	; () banked
  2693  0012D6  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2694  0012D8  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2695  0012DA  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2696  0012DC  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2700  0012DE  C0CF  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2701                           
  2702                           ;inc\CANlib.h: 483: }
  2703  0012E2  D05A               	goto	l4934
  2704  0012E4                     l405:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;inc\CANlib.h: 485: else
  2708                           ;inc\CANlib.h: 487: {
  2709                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2710  0012E4  010F               	movlb	15	; () banked
  2711  0012E6  9722               	bcf	34,3,b	;volatile
  2712                           
  2713                           ; BSR set to: 15
  2714                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2715  0012E8  C0C3  F0CB         	movff	CANsendMessage@identifier,??_CANsendMessage
  2716  0012EC  C0C4  F0CC         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2717  0012F0  C0C5  F0CD         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2718  0012F4  C0C6  F0CE         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2719  0012F8  0E04               	movlw	4
  2720  0012FA  D006               	goto	u6390
  2721  0012FC                     u6395:
  2722  0012FC  0100               	movlb	0	; () banked
  2723  0012FE  90D8               	bcf	status,0,c
  2724  001300  33CE               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2725  001302  33CD               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2726  001304  33CC               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2727  001306  33CB               	rrcf	??_CANsendMessage& (0+255),f,b
  2728  001308                     u6390:
  2729  001308  2EE8               	decfsz	wreg,f,c
  2730  00130A  D7F8               	goto	u6395
  2731  00130C  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2732  001310  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2733  001314  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2734  001318  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2738  00131C  0100               	movlb	0	; () banked
  2739  00131E  51CF               	movf	CANsendMessage@tamp& (0+255),w,b
  2740  001320  0100               	movlb	0	; () banked
  2741  001322  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2742  001324  6BD0               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2743  001326  6BD1               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2744  001328  6BD2               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2748  00132A  C0CF  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2752  00132E  0E07               	movlw	7
  2753  001330  0100               	movlb	0	; () banked
  2754  001332  15C3               	andwf	CANsendMessage@identifier& (0+255),w,b
  2755  001334  0100               	movlb	0	; () banked
  2756  001336  6FCF               	movwf	CANsendMessage@tamp& (0+255),b
  2757  001338  0E00               	movlw	0
  2758  00133A  0100               	movlb	0	; () banked
  2759  00133C  15C4               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2760  00133E  0100               	movlb	0	; () banked
  2761  001340  6FD0               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2762  001342  0E00               	movlw	0
  2763  001344  0100               	movlb	0	; () banked
  2764  001346  15C5               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2765  001348  0100               	movlb	0	; () banked
  2766  00134A  6FD1               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2767  00134C  0E00               	movlw	0
  2768  00134E  0100               	movlb	0	; () banked
  2769  001350  15C6               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2770  001352  0100               	movlb	0	; () banked
  2771  001354  6FD2               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2775  001356  C0CF  F0CB         	movff	CANsendMessage@tamp,??_CANsendMessage
  2776  00135A  C0D0  F0CC         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2777  00135E  C0D1  F0CD         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2778  001362  C0D2  F0CE         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2779  001366  0E05               	movlw	5
  2780  001368                     u6405:
  2781  001368  90D8               	bcf	status,0,c
  2782  00136A  0100               	movlb	0	; () banked
  2783  00136C  37CB               	rlcf	??_CANsendMessage& (0+255),f,b
  2784  00136E  37CC               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2785  001370  37CD               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2786  001372  37CE               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2787  001374  2EE8               	decfsz	wreg,f,c
  2788  001376  D7F8               	goto	u6405
  2789  001378  C0CB  F0CF         	movff	??_CANsendMessage,CANsendMessage@tamp
  2790  00137C  C0CC  F0D0         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2791  001380  C0CD  F0D1         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2792  001384  C0CE  F0D2         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  2796  001388  010F               	movlb	15	; () banked
  2797  00138A  5122               	movf	34,w,b	;volatile
  2798  00138C  0B1F               	andlw	31
  2799  00138E  010F               	movlb	15	; () banked
  2800  001390  6F22               	movwf	34,b	;volatile
  2801                           
  2802                           ; BSR set to: 15
  2803                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  2804  001392  C0CF  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  2805  001396  D000               	goto	l4934
  2806  001398                     l4934:
  2807                           
  2808                           ;inc\CANlib.h: 498: }
  2809                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  2810  001398  0100               	movlb	0	; () banked
  2811  00139A  A1CA               	btfss	CANsendMessage@flags& (0+255),0,b
  2812  00139C  D003               	goto	l412
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  2816  00139E  010F               	movlb	15	; () banked
  2817  0013A0  8120               	bsf	32,0,b	;volatile
  2818  0013A2  D002               	goto	l413
  2819  0013A4                     l412:
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;inc\CANlib.h: 502: else
  2823                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  2824  0013A4  010F               	movlb	15	; () banked
  2825  0013A6  9120               	bcf	32,0,b	;volatile
  2826  0013A8                     l413:
  2827                           
  2828                           ; BSR set to: 15
  2829                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  2830  0013A8  0100               	movlb	0	; () banked
  2831  0013AA  A3CA               	btfss	CANsendMessage@flags& (0+255),1,b
  2832  0013AC  D003               	goto	l414
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  2836  0013AE  010F               	movlb	15	; () banked
  2837  0013B0  8320               	bsf	32,1,b	;volatile
  2838  0013B2  D003               	goto	l4940
  2839  0013B4                     l414:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;inc\CANlib.h: 506: else
  2843                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  2844  0013B4  010F               	movlb	15	; () banked
  2845  0013B6  9320               	bcf	32,1,b	;volatile
  2846  0013B8  D000               	goto	l4940
  2847  0013BA                     l4940:
  2848                           
  2849                           ; BSR set to: 15
  2850                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  2851  0013BA  C0C7  FFD9         	movff	CANsendMessage@data,fsr2l
  2852  0013BE  C0C8  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2853  0013C2  50DF               	movf	indf2,w,c
  2854  0013C4  010F               	movlb	15	; () banked
  2855  0013C6  6F26               	movwf	38,b	;volatile
  2856                           
  2857                           ; BSR set to: 15
  2858                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  2859  0013C8  0100               	movlb	0	; () banked
  2860  0013CA  EE20 F001          	lfsr	2,1
  2861  0013CE  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2862  0013D0  26D9               	addwf	fsr2l,f,c
  2863  0013D2  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2864  0013D4  22DA               	addwfc	fsr2h,f,c
  2865  0013D6  50DF               	movf	indf2,w,c
  2866  0013D8  010F               	movlb	15	; () banked
  2867  0013DA  6F27               	movwf	39,b	;volatile
  2868                           
  2869                           ; BSR set to: 15
  2870                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  2871  0013DC  0100               	movlb	0	; () banked
  2872  0013DE  EE20 F002          	lfsr	2,2
  2873  0013E2  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2874  0013E4  26D9               	addwf	fsr2l,f,c
  2875  0013E6  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2876  0013E8  22DA               	addwfc	fsr2h,f,c
  2877  0013EA  50DF               	movf	indf2,w,c
  2878  0013EC  010F               	movlb	15	; () banked
  2879  0013EE  6F28               	movwf	40,b	;volatile
  2880                           
  2881                           ; BSR set to: 15
  2882                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  2883  0013F0  0100               	movlb	0	; () banked
  2884  0013F2  EE20 F003          	lfsr	2,3
  2885  0013F6  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2886  0013F8  26D9               	addwf	fsr2l,f,c
  2887  0013FA  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2888  0013FC  22DA               	addwfc	fsr2h,f,c
  2889  0013FE  50DF               	movf	indf2,w,c
  2890  001400  010F               	movlb	15	; () banked
  2891  001402  6F29               	movwf	41,b	;volatile
  2892                           
  2893                           ; BSR set to: 15
  2894                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  2895  001404  0100               	movlb	0	; () banked
  2896  001406  EE20 F004          	lfsr	2,4
  2897  00140A  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2898  00140C  26D9               	addwf	fsr2l,f,c
  2899  00140E  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2900  001410  22DA               	addwfc	fsr2h,f,c
  2901  001412  50DF               	movf	indf2,w,c
  2902  001414  010F               	movlb	15	; () banked
  2903  001416  6F2A               	movwf	42,b	;volatile
  2904                           
  2905                           ; BSR set to: 15
  2906                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  2907  001418  0100               	movlb	0	; () banked
  2908  00141A  EE20 F005          	lfsr	2,5
  2909  00141E  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2910  001420  26D9               	addwf	fsr2l,f,c
  2911  001422  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2912  001424  22DA               	addwfc	fsr2h,f,c
  2913  001426  50DF               	movf	indf2,w,c
  2914  001428  010F               	movlb	15	; () banked
  2915  00142A  6F2B               	movwf	43,b	;volatile
  2916                           
  2917                           ; BSR set to: 15
  2918                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  2919  00142C  0100               	movlb	0	; () banked
  2920  00142E  EE20 F006          	lfsr	2,6
  2921  001432  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2922  001434  26D9               	addwf	fsr2l,f,c
  2923  001436  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2924  001438  22DA               	addwfc	fsr2h,f,c
  2925  00143A  50DF               	movf	indf2,w,c
  2926  00143C  010F               	movlb	15	; () banked
  2927  00143E  6F2C               	movwf	44,b	;volatile
  2928                           
  2929                           ; BSR set to: 15
  2930                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  2931  001440  0100               	movlb	0	; () banked
  2932  001442  EE20 F007          	lfsr	2,7
  2933  001446  51C7               	movf	CANsendMessage@data& (0+255),w,b
  2934  001448  26D9               	addwf	fsr2l,f,c
  2935  00144A  51C8               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2936  00144C  22DA               	addwfc	fsr2h,f,c
  2937  00144E  50DF               	movf	indf2,w,c
  2938  001450  010F               	movlb	15	; () banked
  2939  001452  6F2D               	movwf	45,b	;volatile
  2940                           
  2941                           ; BSR set to: 15
  2942                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  2943  001454  010F               	movlb	15	; () banked
  2944  001456  8720               	bsf	32,3,b	;volatile
  2945                           
  2946                           ; BSR set to: 15
  2947                           ;inc\CANlib.h: 520: return;
  2948  001458  D000               	goto	l387
  2949  00145A                     l387:
  2950                           
  2951                           ; BSR set to: 15
  2952  00145A  0012               	return		;funcret
  2953  00145C                     __end_of_CANsendMessage:
  2954                           	opt stack 0
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postdec1	equ	0xFE5
  2964                           fsr1l	equ	0xFE1
  2965                           indf2	equ	0xFDF
  2966                           fsr2h	equ	0xFDA
  2967                           fsr2l	equ	0xFD9
  2968                           status	equ	0xFD8
  2969                           
  2970 ;; *************** function _CANisTxReady *****************
  2971 ;; Defined at:
  2972 ;;		line 1154 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      unsigned char 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2986 ;;      Params:         0       0       0       0
  2987 ;;      Locals:         0       1       0       0
  2988 ;;      Temps:          0       0       0       0
  2989 ;;      Totals:         0       1       0       0
  2990 ;;Total ram usage:        1 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    4
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_remote_frame_handler
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text4
  3001  002AD4                     __ptext4:
  3002                           	opt stack 0
  3003  002AD4                     _CANisTxReady:
  3004                           	opt stack 25
  3005                           
  3006                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3007                           
  3008                           ; BSR set to: 15
  3009                           ;incstack = 0
  3010  002AD4  0E01               	movlw	1
  3011  002AD6  0100               	movlb	0	; () banked
  3012  002AD8  6FC3               	movwf	_CANisTxReady$3173& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015  002ADA  010F               	movlb	15	; () banked
  3016  002ADC  A740               	btfss	64,3,b	;volatile
  3017  002ADE  D009               	goto	l566
  3018                           
  3019                           ; BSR set to: 15
  3020  002AE0  010F               	movlb	15	; () banked
  3021  002AE2  A730               	btfss	48,3,b	;volatile
  3022  002AE4  D006               	goto	l566
  3023                           
  3024                           ; BSR set to: 15
  3025  002AE6  010F               	movlb	15	; () banked
  3026  002AE8  A720               	btfss	32,3,b	;volatile
  3027  002AEA  D003               	goto	l566
  3028                           
  3029                           ; BSR set to: 15
  3030  002AEC  0E00               	movlw	0
  3031  002AEE  0100               	movlb	0	; () banked
  3032  002AF0  6FC3               	movwf	_CANisTxReady$3173& (0+255),b
  3033  002AF2                     l566:
  3034  002AF2  0100               	movlb	0	; () banked
  3035  002AF4  51C3               	movf	_CANisTxReady$3173& (0+255),w,b
  3036  002AF6  D000               	goto	l567
  3037  002AF8                     l567:
  3038                           
  3039                           ; BSR set to: 0
  3040  002AF8  0012               	return		;funcret
  3041  002AFA                     __end_of_CANisTxReady:
  3042                           	opt stack 0
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           postdec1	equ	0xFE5
  3052                           fsr1l	equ	0xFE1
  3053                           indf2	equ	0xFDF
  3054                           fsr2h	equ	0xFDA
  3055                           fsr2l	equ	0xFD9
  3056                           status	equ	0xFD8
  3057                           
  3058 ;; *************** function _board_initialization *****************
  3059 ;; Defined at:
  3060 ;;		line 422 in file "ABS_Code.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3074 ;;      Params:         0       0       0       0
  3075 ;;      Locals:         0       0       0       0
  3076 ;;      Temps:          0       0       0       0
  3077 ;;      Totals:         0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    6
  3081 ;; This function calls:
  3082 ;;		_CANInitialize
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text5
  3089  002832                     __ptext5:
  3090                           	opt stack 0
  3091  002832                     _board_initialization:
  3092                           	opt stack 24
  3093                           
  3094                           ;ABS_Code.c: 424: LATA = 0x00;
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;incstack = 0
  3098  002832  0E00               	movlw	0
  3099  002834  6E89               	movwf	3977,c	;volatile
  3100                           
  3101                           ;ABS_Code.c: 425: TRISA = 0b11111101;
  3102  002836  0EFD               	movlw	253
  3103  002838  6E92               	movwf	3986,c	;volatile
  3104                           
  3105                           ;ABS_Code.c: 426: LATB = 0x00;
  3106  00283A  0E00               	movlw	0
  3107  00283C  6E8A               	movwf	3978,c	;volatile
  3108                           
  3109                           ;ABS_Code.c: 427: TRISB = 0b11111111;
  3110  00283E  6893               	setf	3987,c	;volatile
  3111                           
  3112                           ;ABS_Code.c: 428: LATC = 0x00;
  3113  002840  0E00               	movlw	0
  3114  002842  6E8B               	movwf	3979,c	;volatile
  3115                           
  3116                           ;ABS_Code.c: 429: TRISC = 0b11111100;
  3117  002844  0EFC               	movlw	252
  3118  002846  6E94               	movwf	3988,c	;volatile
  3119                           
  3120                           ;ABS_Code.c: 430: LATD = 0x00;
  3121  002848  0E00               	movlw	0
  3122  00284A  6E8C               	movwf	3980,c	;volatile
  3123                           
  3124                           ;ABS_Code.c: 431: TRISD = 0xFF;
  3125  00284C  6895               	setf	3989,c	;volatile
  3126                           
  3127                           ;ABS_Code.c: 432: LATE = 0x00;
  3128  00284E  0E00               	movlw	0
  3129  002850  6E8D               	movwf	3981,c	;volatile
  3130                           
  3131                           ;ABS_Code.c: 433: TRISE = 0xFF;
  3132  002852  6896               	setf	3990,c	;volatile
  3133                           
  3134                           ;ABS_Code.c: 438: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_S
      +                          AMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3135  002854  0E06               	movlw	6
  3136  002856  0101               	movlb	1	; () banked
  3137  002858  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3138  00285A  0E05               	movlw	5
  3139  00285C  0101               	movlb	1	; () banked
  3140  00285E  6F01               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3141  002860  0E01               	movlw	1
  3142  002862  0101               	movlb	1	; () banked
  3143  002864  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3144  002866  0E03               	movlw	3
  3145  002868  0101               	movlb	1	; () banked
  3146  00286A  6F03               	movwf	CANInitialize@BRP& (0+255),b
  3147  00286C  0E9D               	movlw	157
  3148  00286E  0101               	movlb	1	; () banked
  3149  002870  6F04               	movwf	CANInitialize@flags& (0+255),b
  3150  002872  0E04               	movlw	4
  3151  002874  EC1B  F011         	call	_CANInitialize
  3152                           
  3153                           ;ABS_Code.c: 441: PIR3bits.RXB1IF = 0;
  3154  002878  92A4               	bcf	4004,1,c	;volatile
  3155                           
  3156                           ;ABS_Code.c: 442: PIR3bits.RXB0IF = 0;
  3157  00287A  90A4               	bcf	4004,0,c	;volatile
  3158                           
  3159                           ;ABS_Code.c: 443: INTCONbits.TMR0IF = 0;
  3160  00287C  94F2               	bcf	intcon,2,c	;volatile
  3161                           
  3162                           ;ABS_Code.c: 444: PIR1bits.TMR1IF = 0;
  3163  00287E  909E               	bcf	3998,0,c	;volatile
  3164                           
  3165                           ;ABS_Code.c: 445: PIR2bits.TMR3IF = 0;
  3166  002880  92A1               	bcf	4001,1,c	;volatile
  3167                           
  3168                           ;ABS_Code.c: 446: INTCONbits.INT0IF = 0;
  3169  002882  92F2               	bcf	intcon,1,c	;volatile
  3170                           
  3171                           ;ABS_Code.c: 447: INTCON3bits.INT1IF = 0;
  3172  002884  90F0               	bcf	intcon3,0,c	;volatile
  3173                           
  3174                           ;ABS_Code.c: 451: RCONbits.IPEN = 1;
  3175  002886  8ED0               	bsf	4048,7,c	;volatile
  3176                           
  3177                           ;ABS_Code.c: 452: IPR3bits.RXB1IP = 0;
  3178  002888  92A5               	bcf	4005,1,c	;volatile
  3179                           
  3180                           ;ABS_Code.c: 453: IPR3bits.RXB0IP = 0;
  3181  00288A  90A5               	bcf	4005,0,c	;volatile
  3182                           
  3183                           ;ABS_Code.c: 454: INTCON2bits.TMR0IP = 1;
  3184  00288C  84F1               	bsf	intcon2,2,c	;volatile
  3185                           
  3186                           ;ABS_Code.c: 455: INTCON3bits.INT1IP = 1;
  3187  00288E  8CF0               	bsf	intcon3,6,c	;volatile
  3188                           
  3189                           ;ABS_Code.c: 456: IPR1bits.TMR1IP = 0;
  3190  002890  909F               	bcf	3999,0,c	;volatile
  3191                           
  3192                           ;ABS_Code.c: 457: IPR2bits.TMR3IP = 0;
  3193  002892  92A2               	bcf	4002,1,c	;volatile
  3194                           
  3195                           ;ABS_Code.c: 460: T0CON = 0x80;
  3196  002894  0E80               	movlw	128
  3197  002896  6ED5               	movwf	4053,c	;volatile
  3198                           
  3199                           ;ABS_Code.c: 467: TMR0H = 0xFF;
  3200  002898  68D7               	setf	4055,c	;volatile
  3201                           
  3202                           ;ABS_Code.c: 468: TMR0L = 0xFE;
  3203  00289A  0EFE               	movlw	254
  3204  00289C  6ED6               	movwf	4054,c	;volatile
  3205                           
  3206                           ;ABS_Code.c: 469: PORTCbits.RC0 = 0;
  3207  00289E  9082               	bcf	3970,0,c	;volatile
  3208                           
  3209                           ;ABS_Code.c: 470: brake_value_degree = 90;
  3210  0028A0  0E5A               	movlw	90
  3211  0028A2  6E27               	movwf	_brake_value_degree,c	;volatile
  3212                           
  3213                           ;ABS_Code.c: 471: T1CON = 00110000;
  3214  0028A4  0E00               	movlw	0
  3215  0028A6  6ECD               	movwf	4045,c	;volatile
  3216                           
  3217                           ;ABS_Code.c: 472: T3CON = 01110000;
  3218  0028A8  0E00               	movlw	0
  3219  0028AA  6EB1               	movwf	4017,c	;volatile
  3220                           
  3221                           ;ABS_Code.c: 473: INTCON2bits.INTEDG0 = 1;
  3222  0028AC  8CF1               	bsf	intcon2,6,c	;volatile
  3223                           
  3224                           ;ABS_Code.c: 474: INTCON2bits.INTEDG1 = 1;
  3225  0028AE  8AF1               	bsf	intcon2,5,c	;volatile
  3226                           
  3227                           ;ABS_Code.c: 492: PIE3bits.RXB1IE = 1;
  3228  0028B0  82A3               	bsf	4003,1,c	;volatile
  3229                           
  3230                           ;ABS_Code.c: 493: PIE3bits.RXB0IE = 1;
  3231  0028B2  80A3               	bsf	4003,0,c	;volatile
  3232                           
  3233                           ;ABS_Code.c: 494: INTCONbits.TMR0IE = 1;
  3234  0028B4  8AF2               	bsf	intcon,5,c	;volatile
  3235                           
  3236                           ;ABS_Code.c: 495: PIE1bits.TMR1IE = 1;
  3237  0028B6  809D               	bsf	3997,0,c	;volatile
  3238                           
  3239                           ;ABS_Code.c: 496: PIE2bits.TMR3IE = 1;
  3240  0028B8  82A0               	bsf	4000,1,c	;volatile
  3241                           
  3242                           ;ABS_Code.c: 497: INTCONbits.INT0IE = 1;
  3243  0028BA  88F2               	bsf	intcon,4,c	;volatile
  3244                           
  3245                           ;ABS_Code.c: 498: INTCON3bits.INT1IE = 1;
  3246  0028BC  86F0               	bsf	intcon3,3,c	;volatile
  3247                           
  3248                           ;ABS_Code.c: 499: INTCONbits.GIEH = 1;
  3249  0028BE  8EF2               	bsf	intcon,7,c	;volatile
  3250                           
  3251                           ;ABS_Code.c: 500: INTCONbits.GIEL = 1;
  3252  0028C0  8CF2               	bsf	intcon,6,c	;volatile
  3253                           
  3254                           ;ABS_Code.c: 503: T1CONbits.TMR1ON = 1;
  3255  0028C2  80CD               	bsf	4045,0,c	;volatile
  3256                           
  3257                           ;ABS_Code.c: 504: T3CONbits.TMR3ON = 1;
  3258  0028C4  80B1               	bsf	4017,0,c	;volatile
  3259                           
  3260                           ;ABS_Code.c: 505: T0CONbits.TMR0ON = 1;
  3261  0028C6  8ED5               	bsf	4053,7,c	;volatile
  3262  0028C8  0012               	return		;funcret
  3263  0028CA                     __end_of_board_initialization:
  3264                           	opt stack 0
  3265                           tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           intcon	equ	0xFF2
  3272                           intcon2	equ	0xFF1
  3273                           intcon3	equ	0xFF0
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           postdec1	equ	0xFE5
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _CANInitialize *****************
  3284 ;; Defined at:
  3285 ;;		line 218 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  propSeg         1    wreg     unsigned char 
  3288 ;;  phaseSeg1       1    0[BANK1 ] unsigned char 
  3289 ;;  phaseSeg2       1    1[BANK1 ] unsigned char 
  3290 ;;  SJW             1    2[BANK1 ] unsigned char 
  3291 ;;  BRP             1    3[BANK1 ] unsigned char 
  3292 ;;  flags           1    4[BANK1 ] enum E16885
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  propSeg         1   50[BANK0 ] unsigned char 
  3295 ;;  FilterConfig    1   52[BANK0 ] unsigned char 
  3296 ;;  FilterConfig    1   51[BANK0 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3306 ;;      Params:         0       0       5       0
  3307 ;;      Locals:         0       3       0       0
  3308 ;;      Temps:          0       0       4       0
  3309 ;;      Totals:         0       3       9       0
  3310 ;;Total ram usage:       12 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    5
  3313 ;; This function calls:
  3314 ;;		_CANOperationMode
  3315 ;;		_CANSetFilter
  3316 ;;		_CANSetMask
  3317 ;; This function is called by:
  3318 ;;		_board_initialization
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text6
  3323  002236                     __ptext6:
  3324                           	opt stack 0
  3325  002236                     _CANInitialize:
  3326                           	opt stack 24
  3327                           
  3328                           ;incstack = 0
  3329                           ;CANInitialize@propSeg stored from wreg
  3330  002236  0100               	movlb	0	; () banked
  3331  002238  6FD1               	movwf	CANInitialize@propSeg& (0+255),b
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3335                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3336                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3337  00223A  0E80               	movlw	128
  3338  00223C  EC7D  F015         	call	_CANOperationMode
  3339                           
  3340                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3341  002240  0E00               	movlw	0
  3342  002242  6E70               	movwf	3952,c	;volatile
  3343                           
  3344                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3345  002244  0E00               	movlw	0
  3346  002246  6E71               	movwf	3953,c	;volatile
  3347                           
  3348                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3349  002248  0E00               	movlw	0
  3350  00224A  6E72               	movwf	3954,c	;volatile
  3351                           
  3352                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3353  00224C  0101               	movlb	1	; () banked
  3354  00224E  4102               	rrncf	CANInitialize@SJW& (0+255),w,b
  3355  002250  42E8               	rrncf	wreg,f,c
  3356  002252  0BC0               	andlw	192
  3357  002254  0101               	movlb	1	; () banked
  3358  002256  6F02               	movwf	CANInitialize@SJW& (0+255),b
  3359                           
  3360                           ; BSR set to: 1
  3361                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3362  002258  0101               	movlb	1	; () banked
  3363  00225A  5102               	movf	CANInitialize@SJW& (0+255),w,b
  3364  00225C  1270               	iorwf	3952,f,c	;volatile
  3365                           
  3366                           ; BSR set to: 1
  3367                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3368  00225E  0101               	movlb	1	; () banked
  3369  002260  5103               	movf	CANInitialize@BRP& (0+255),w,b
  3370  002262  1270               	iorwf	3952,f,c	;volatile
  3371                           
  3372                           ; BSR set to: 1
  3373                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3374  002264  0100               	movlb	0	; () banked
  3375  002266  51D1               	movf	CANInitialize@propSeg& (0+255),w,b
  3376  002268  1271               	iorwf	3953,f,c	;volatile
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3380  00226A  0101               	movlb	1	; () banked
  3381  00226C  3900               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3382  00226E  42E8               	rrncf	wreg,f,c
  3383  002270  0BF8               	andlw	248
  3384  002272  0101               	movlb	1	; () banked
  3385  002274  6F00               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3386                           
  3387                           ; BSR set to: 1
  3388                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3389  002276  0101               	movlb	1	; () banked
  3390  002278  5100               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3391  00227A  1271               	iorwf	3953,f,c	;volatile
  3392                           
  3393                           ; BSR set to: 1
  3394                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3395  00227C  0101               	movlb	1	; () banked
  3396  00227E  A504               	btfss	CANInitialize@flags& (0+255),2,b
  3397                           
  3398                           ; BSR set to: 1
  3399                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3400  002280  8C71               	bsf	3953,6,c	;volatile
  3401                           
  3402                           ; BSR set to: 1
  3403                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3404  002282  0101               	movlb	1	; () banked
  3405  002284  A104               	btfss	CANInitialize@flags& (0+255),0,b
  3406  002286  D002               	goto	l4704
  3407                           
  3408                           ; BSR set to: 1
  3409                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3410  002288  8E71               	bsf	3953,7,c	;volatile
  3411  00228A  D000               	goto	l4704
  3412  00228C                     l4704:
  3413                           
  3414                           ; BSR set to: 1
  3415                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3416  00228C  0101               	movlb	1	; () banked
  3417  00228E  5101               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3418  002290  1272               	iorwf	3954,f,c	;volatile
  3419                           
  3420                           ; BSR set to: 1
  3421                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3422  002292  0101               	movlb	1	; () banked
  3423  002294  A304               	btfss	CANInitialize@flags& (0+255),1,b
  3424  002296  D002               	goto	l4710
  3425                           
  3426                           ; BSR set to: 1
  3427                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3428  002298  8C72               	bsf	3954,6,c	;volatile
  3429  00229A  D000               	goto	l4710
  3430  00229C                     l4710:
  3431                           
  3432                           ; BSR set to: 1
  3433                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3434  00229C  0101               	movlb	1	; () banked
  3435  00229E  5104               	movf	CANInitialize@flags& (0+255),w,b
  3436  0022A0  0B60               	andlw	96
  3437  0022A2  6E60               	movwf	3936,c	;volatile
  3438                           
  3439                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3440  0022A4  0101               	movlb	1	; () banked
  3441  0022A6  5104               	movf	CANInitialize@flags& (0+255),w,b
  3442  0022A8  0B10               	andlw	16
  3443  0022AA  0AFF               	xorlw	255
  3444  0022AC  B4D8               	btfsc	status,2,c
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3448  0022AE  8460               	bsf	3936,2,c	;volatile
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3452  0022B0  CF60 FF50          	movff	3936,3920	;volatile
  3453                           
  3454                           ; BSR set to: 1
  3455                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3456  0022B4  0E00               	movlw	0
  3457  0022B6  0100               	movlb	0	; () banked
  3458  0022B8  6FC3               	movwf	CANSetMask@mask& (0+255),b
  3459  0022BA  0E00               	movlw	0
  3460  0022BC  6FC4               	movwf	(CANSetMask@mask+1)& (0+255),b
  3461  0022BE  0E00               	movlw	0
  3462  0022C0  6FC5               	movwf	(CANSetMask@mask+2)& (0+255),b
  3463  0022C2  0E00               	movlw	0
  3464  0022C4  6FC6               	movwf	(CANSetMask@mask+3)& (0+255),b
  3465  0022C6  0EF7               	movlw	247
  3466  0022C8  0100               	movlb	0	; () banked
  3467  0022CA  6FC7               	movwf	CANSetMask@type& (0+255),b
  3468  0022CC  0E01               	movlw	1
  3469  0022CE  ECC5  F00C         	call	_CANSetMask
  3470                           
  3471                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3472  0022D2  0E00               	movlw	0
  3473  0022D4  0100               	movlb	0	; () banked
  3474  0022D6  6FC3               	movwf	CANSetMask@mask& (0+255),b
  3475  0022D8  0E00               	movlw	0
  3476  0022DA  6FC4               	movwf	(CANSetMask@mask+1)& (0+255),b
  3477  0022DC  0E00               	movlw	0
  3478  0022DE  6FC5               	movwf	(CANSetMask@mask+2)& (0+255),b
  3479  0022E0  0E00               	movlw	0
  3480  0022E2  6FC6               	movwf	(CANSetMask@mask+3)& (0+255),b
  3481  0022E4  0EF7               	movlw	247
  3482  0022E6  0100               	movlb	0	; () banked
  3483  0022E8  6FC7               	movwf	CANSetMask@type& (0+255),b
  3484  0022EA  0E02               	movlw	2
  3485  0022EC  ECC5  F00C         	call	_CANSetMask
  3486                           
  3487                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3488  0022F0  D00F               	goto	l4722
  3489  0022F2                     l4716:
  3490                           
  3491                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3492  0022F2  0EF7               	movlw	247
  3493  0022F4  0100               	movlb	0	; () banked
  3494  0022F6  6FD2               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3495  0022F8  D007               	goto	l4718
  3496  0022FA                     l368:
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3500  0022FA  0100               	movlb	0	; () banked
  3501  0022FC  69D2               	setf	CANInitialize@FilterConfig1& (0+255),b
  3502                           
  3503                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3504  0022FE  0100               	movlb	0	; () banked
  3505  002300  69D3               	setf	CANInitialize@FilterConfig2& (0+255),b
  3506                           
  3507                           ;inc\CANlib.h: 273: break;
  3508  002302  D028               	goto	l4724
  3509  002304                     l369:
  3510                           
  3511                           ; BSR set to: 1
  3512                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3513  002304  0100               	movlb	0	; () banked
  3514  002306  69D2               	setf	CANInitialize@FilterConfig1& (0+255),b
  3515  002308                     l4718:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3519  002308  0EF7               	movlw	247
  3520  00230A  0100               	movlb	0	; () banked
  3521  00230C  6FD3               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;inc\CANlib.h: 278: }
  3525                           
  3526                           ;inc\CANlib.h: 277: break;
  3527  00230E  D022               	goto	l4724
  3528  002310                     l4722:
  3529  002310  0E9F               	movlw	159
  3530  002312  0101               	movlb	1	; () banked
  3531  002314  6F05               	movwf	??_CANInitialize& (0+255),b
  3532  002316  0EFF               	movlw	255
  3533  002318  0101               	movlb	1	; () banked
  3534  00231A  6F06               	movwf	(??_CANInitialize+1)& (0+255),b
  3535  00231C  0101               	movlb	1	; () banked
  3536  00231E  5104               	movf	CANInitialize@flags& (0+255),w,b
  3537  002320  0B60               	andlw	96
  3538  002322  0101               	movlb	1	; () banked
  3539  002324  6F07               	movwf	(??_CANInitialize+2)& (0+255),b
  3540  002326  6B08               	clrf	(??_CANInitialize+3)& (0+255),b
  3541  002328  0101               	movlb	1	; () banked
  3542  00232A  5105               	movf	??_CANInitialize& (0+255),w,b
  3543  00232C  0101               	movlb	1	; () banked
  3544  00232E  1307               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3545  002330  0101               	movlb	1	; () banked
  3546  002332  5106               	movf	(??_CANInitialize+1)& (0+255),w,b
  3547  002334  0101               	movlb	1	; () banked
  3548  002336  1308               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3549                           
  3550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3551                           ; Switch size 1, requested type "space"
  3552                           ; Number of cases is 1, Range of values is 0 to 0
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte            4     3 (average)
  3556                           ;	Chosen strategy is simple_byte
  3557  002338  0101               	movlb	1	; () banked
  3558  00233A  5108               	movf	(??_CANInitialize+3)& (0+255),w,b
  3559  00233C  0A00               	xorlw	0	; case 0
  3560  00233E  A4D8               	btfss	status,2,c
  3561  002340  D7E1               	goto	l369
  3562                           
  3563                           ; BSR set to: 1
  3564                           ; Switch size 1, requested type "space"
  3565                           ; Number of cases is 2, Range of values is 191 to 223
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte            7     4 (average)
  3569                           ;	Chosen strategy is simple_byte
  3570  002342  0101               	movlb	1	; () banked
  3571  002344  5107               	movf	(??_CANInitialize+2)& (0+255),w,b
  3572  002346  0ABF               	xorlw	191	; case 191
  3573  002348  B4D8               	btfsc	status,2,c
  3574  00234A  D7D7               	goto	l368
  3575  00234C  0A60               	xorlw	96	; case 223
  3576  00234E  B4D8               	btfsc	status,2,c
  3577  002350  D7D0               	goto	l4716
  3578  002352  D7D8               	goto	l369
  3579  002354                     l4724:
  3580                           
  3581                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3582  002354  0E00               	movlw	0
  3583  002356  0100               	movlb	0	; () banked
  3584  002358  6FC3               	movwf	CANSetFilter@filter& (0+255),b
  3585  00235A  0E00               	movlw	0
  3586  00235C  6FC4               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3587  00235E  0E00               	movlw	0
  3588  002360  6FC5               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3589  002362  0E00               	movlw	0
  3590  002364  6FC6               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3591  002366  C0D2  F0C7         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3592  00236A  0E00               	movlw	0
  3593  00236C  ECC9  F000         	call	_CANSetFilter
  3594                           
  3595                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3596  002370  0E00               	movlw	0
  3597  002372  0100               	movlb	0	; () banked
  3598  002374  6FC3               	movwf	CANSetFilter@filter& (0+255),b
  3599  002376  0E00               	movlw	0
  3600  002378  6FC4               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3601  00237A  0E00               	movlw	0
  3602  00237C  6FC5               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3603  00237E  0E00               	movlw	0
  3604  002380  6FC6               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3605  002382  C0D2  F0C7         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3606  002386  0E01               	movlw	1
  3607  002388  ECC9  F000         	call	_CANSetFilter
  3608                           
  3609                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3610  00238C  0E00               	movlw	0
  3611  00238E  0100               	movlb	0	; () banked
  3612  002390  6FC3               	movwf	CANSetFilter@filter& (0+255),b
  3613  002392  0E00               	movlw	0
  3614  002394  6FC4               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3615  002396  0E00               	movlw	0
  3616  002398  6FC5               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3617  00239A  0E00               	movlw	0
  3618  00239C  6FC6               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3619  00239E  C0D3  F0C7         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3620  0023A2  0E02               	movlw	2
  3621  0023A4  ECC9  F000         	call	_CANSetFilter
  3622                           
  3623                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3624  0023A8  0E00               	movlw	0
  3625  0023AA  0100               	movlb	0	; () banked
  3626  0023AC  6FC3               	movwf	CANSetFilter@filter& (0+255),b
  3627  0023AE  0E00               	movlw	0
  3628  0023B0  6FC4               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3629  0023B2  0E00               	movlw	0
  3630  0023B4  6FC5               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3631  0023B6  0E00               	movlw	0
  3632  0023B8  6FC6               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3633  0023BA  C0D3  F0C7         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3634  0023BE  0E03               	movlw	3
  3635  0023C0  ECC9  F000         	call	_CANSetFilter
  3636                           
  3637                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3638  0023C4  0E00               	movlw	0
  3639  0023C6  0100               	movlb	0	; () banked
  3640  0023C8  6FC3               	movwf	CANSetFilter@filter& (0+255),b
  3641  0023CA  0E00               	movlw	0
  3642  0023CC  6FC4               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3643  0023CE  0E00               	movlw	0
  3644  0023D0  6FC5               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3645  0023D2  0E00               	movlw	0
  3646  0023D4  6FC6               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3647  0023D6  C0D3  F0C7         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3648  0023DA  0E04               	movlw	4
  3649  0023DC  ECC9  F000         	call	_CANSetFilter
  3650                           
  3651                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3652  0023E0  0E00               	movlw	0
  3653  0023E2  0100               	movlb	0	; () banked
  3654  0023E4  6FC3               	movwf	CANSetFilter@filter& (0+255),b
  3655  0023E6  0E00               	movlw	0
  3656  0023E8  6FC4               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3657  0023EA  0E00               	movlw	0
  3658  0023EC  6FC5               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3659  0023EE  0E00               	movlw	0
  3660  0023F0  6FC6               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3661  0023F2  C0D3  F0C7         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3662  0023F6  0E05               	movlw	5
  3663  0023F8  ECC9  F000         	call	_CANSetFilter
  3664                           
  3665                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3666  0023FC  0E00               	movlw	0
  3667  0023FE  EC7D  F015         	call	_CANOperationMode
  3668  002402  0012               	return		;funcret
  3669  002404                     __end_of_CANInitialize:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           intcon2	equ	0xFF1
  3679                           intcon3	equ	0xFF0
  3680                           postinc0	equ	0xFEE
  3681                           wreg	equ	0xFE8
  3682                           postdec1	equ	0xFE5
  3683                           fsr1l	equ	0xFE1
  3684                           indf2	equ	0xFDF
  3685                           fsr2h	equ	0xFDA
  3686                           fsr2l	equ	0xFD9
  3687                           status	equ	0xFD8
  3688                           
  3689 ;; *************** function _CANSetMask *****************
  3690 ;; Defined at:
  3691 ;;		line 640 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  numBuffer       1    wreg     enum E16919
  3694 ;;  mask            4   36[BANK0 ] unsigned long 
  3695 ;;  type            1   40[BANK0 ] enum E16885
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  numBuffer       1   45[BANK0 ] enum E16919
  3698 ;;  tamp            4   46[BANK0 ] unsigned long 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;		None               void
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3708 ;;      Params:         0       5       0       0
  3709 ;;      Locals:         0       5       0       0
  3710 ;;      Temps:          0       4       0       0
  3711 ;;      Totals:         0      14       0       0
  3712 ;;Total ram usage:       14 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    4
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_CANInitialize
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text7
  3723  00198A                     __ptext7:
  3724                           	opt stack 0
  3725  00198A                     _CANSetMask:
  3726                           	opt stack 24
  3727                           
  3728                           ;incstack = 0
  3729                           ;CANSetMask@numBuffer stored from wreg
  3730  00198A  0100               	movlb	0	; () banked
  3731  00198C  6FCC               	movwf	CANSetMask@numBuffer& (0+255),b
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3735  00198E  0100               	movlb	0	; () banked
  3736  001990  05CC               	decf	CANSetMask@numBuffer& (0+255),w,b
  3737  001992  A4D8               	btfss	status,2,c
  3738  001994  D057               	goto	l4286
  3739                           
  3740                           ; BSR set to: 0
  3741  001996  0100               	movlb	0	; () banked
  3742  001998  29C7               	incf	CANSetMask@type& (0+255),w,b
  3743  00199A  A4D8               	btfss	status,2,c
  3744  00199C  D053               	goto	l4286
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;inc\CANlib.h: 644: {
  3748                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3749  00199E  C0C3  F0C8         	movff	CANSetMask@mask,??_CANSetMask
  3750  0019A2  C0C4  F0C9         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3751  0019A6  C0C5  F0CA         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3752  0019AA  C0C6  F0CB         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3753  0019AE  0E04               	movlw	4
  3754  0019B0  D006               	goto	u5060
  3755  0019B2                     u5065:
  3756  0019B2  0100               	movlb	0	; () banked
  3757  0019B4  90D8               	bcf	status,0,c
  3758  0019B6  33CB               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3759  0019B8  33CA               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3760  0019BA  33C9               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3761  0019BC  33C8               	rrcf	??_CANSetMask& (0+255),f,b
  3762  0019BE                     u5060:
  3763  0019BE  2EE8               	decfsz	wreg,f,c
  3764  0019C0  D7F8               	goto	u5065
  3765  0019C2  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  3766  0019C6  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3767  0019CA  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3768  0019CE  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3772  0019D2  0100               	movlb	0	; () banked
  3773  0019D4  51CD               	movf	CANSetMask@tamp& (0+255),w,b
  3774  0019D6  0100               	movlb	0	; () banked
  3775  0019D8  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  3776  0019DA  6BCE               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3777  0019DC  6BCF               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3778  0019DE  6BD0               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3782  0019E0  C0CD  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3786  0019E4  0E07               	movlw	7
  3787  0019E6  0100               	movlb	0	; () banked
  3788  0019E8  15C3               	andwf	CANSetMask@mask& (0+255),w,b
  3789  0019EA  0100               	movlb	0	; () banked
  3790  0019EC  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  3791  0019EE  0E00               	movlw	0
  3792  0019F0  0100               	movlb	0	; () banked
  3793  0019F2  15C4               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3794  0019F4  0100               	movlb	0	; () banked
  3795  0019F6  6FCE               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3796  0019F8  0E00               	movlw	0
  3797  0019FA  0100               	movlb	0	; () banked
  3798  0019FC  15C5               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3799  0019FE  0100               	movlb	0	; () banked
  3800  001A00  6FCF               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3801  001A02  0E00               	movlw	0
  3802  001A04  0100               	movlb	0	; () banked
  3803  001A06  15C6               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3804  001A08  0100               	movlb	0	; () banked
  3805  001A0A  6FD0               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3809  001A0C  C0CD  F0C8         	movff	CANSetMask@tamp,??_CANSetMask
  3810  001A10  C0CE  F0C9         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3811  001A14  C0CF  F0CA         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3812  001A18  C0D0  F0CB         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3813  001A1C  0E05               	movlw	5
  3814  001A1E                     u5075:
  3815  001A1E  90D8               	bcf	status,0,c
  3816  001A20  0100               	movlb	0	; () banked
  3817  001A22  37C8               	rlcf	??_CANSetMask& (0+255),f,b
  3818  001A24  37C9               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3819  001A26  37CA               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3820  001A28  37CB               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3821  001A2A  2EE8               	decfsz	wreg,f,c
  3822  001A2C  D7F8               	goto	u5075
  3823  001A2E  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  3824  001A32  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3825  001A36  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3826  001A3A  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3830  001A3E  C0CD  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3831  001A42  D000               	goto	l4286
  3832  001A44                     l4286:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 652: }
  3836                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3837  001A44  0E02               	movlw	2
  3838  001A46  0100               	movlb	0	; () banked
  3839  001A48  19CC               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3840  001A4A  A4D8               	btfss	status,2,c
  3841  001A4C  D057               	goto	l4302
  3842                           
  3843                           ; BSR set to: 0
  3844  001A4E  0100               	movlb	0	; () banked
  3845  001A50  29C7               	incf	CANSetMask@type& (0+255),w,b
  3846  001A52  A4D8               	btfss	status,2,c
  3847  001A54  D053               	goto	l4302
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 655: {
  3851                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3852  001A56  C0C3  F0C8         	movff	CANSetMask@mask,??_CANSetMask
  3853  001A5A  C0C4  F0C9         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3854  001A5E  C0C5  F0CA         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3855  001A62  C0C6  F0CB         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3856  001A66  0E04               	movlw	4
  3857  001A68  D006               	goto	u5100
  3858  001A6A                     u5105:
  3859  001A6A  0100               	movlb	0	; () banked
  3860  001A6C  90D8               	bcf	status,0,c
  3861  001A6E  33CB               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3862  001A70  33CA               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3863  001A72  33C9               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3864  001A74  33C8               	rrcf	??_CANSetMask& (0+255),f,b
  3865  001A76                     u5100:
  3866  001A76  2EE8               	decfsz	wreg,f,c
  3867  001A78  D7F8               	goto	u5105
  3868  001A7A  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  3869  001A7E  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3870  001A82  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3871  001A86  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  3875  001A8A  0100               	movlb	0	; () banked
  3876  001A8C  51CD               	movf	CANSetMask@tamp& (0+255),w,b
  3877  001A8E  0100               	movlb	0	; () banked
  3878  001A90  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  3879  001A92  6BCE               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3880  001A94  6BCF               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3881  001A96  6BD0               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  3885  001A98  C0CD  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  3889  001A9C  0E07               	movlw	7
  3890  001A9E  0100               	movlb	0	; () banked
  3891  001AA0  15C3               	andwf	CANSetMask@mask& (0+255),w,b
  3892  001AA2  0100               	movlb	0	; () banked
  3893  001AA4  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  3894  001AA6  0E00               	movlw	0
  3895  001AA8  0100               	movlb	0	; () banked
  3896  001AAA  15C4               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3897  001AAC  0100               	movlb	0	; () banked
  3898  001AAE  6FCE               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3899  001AB0  0E00               	movlw	0
  3900  001AB2  0100               	movlb	0	; () banked
  3901  001AB4  15C5               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3902  001AB6  0100               	movlb	0	; () banked
  3903  001AB8  6FCF               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3904  001ABA  0E00               	movlw	0
  3905  001ABC  0100               	movlb	0	; () banked
  3906  001ABE  15C6               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3907  001AC0  0100               	movlb	0	; () banked
  3908  001AC2  6FD0               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  3912  001AC4  C0CD  F0C8         	movff	CANSetMask@tamp,??_CANSetMask
  3913  001AC8  C0CE  F0C9         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3914  001ACC  C0CF  F0CA         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3915  001AD0  C0D0  F0CB         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3916  001AD4  0E05               	movlw	5
  3917  001AD6                     u5115:
  3918  001AD6  90D8               	bcf	status,0,c
  3919  001AD8  0100               	movlb	0	; () banked
  3920  001ADA  37C8               	rlcf	??_CANSetMask& (0+255),f,b
  3921  001ADC  37C9               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3922  001ADE  37CA               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3923  001AE0  37CB               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3924  001AE2  2EE8               	decfsz	wreg,f,c
  3925  001AE4  D7F8               	goto	u5115
  3926  001AE6  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  3927  001AEA  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3928  001AEE  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3929  001AF2  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  3933  001AF6  C0CD  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  3934  001AFA  D000               	goto	l4302
  3935  001AFC                     l4302:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;inc\CANlib.h: 663: }
  3939                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  3940  001AFC  0100               	movlb	0	; () banked
  3941  001AFE  05CC               	decf	CANSetMask@numBuffer& (0+255),w,b
  3942  001B00  A4D8               	btfss	status,2,c
  3943  001B02  D089               	goto	l4334
  3944                           
  3945                           ; BSR set to: 0
  3946  001B04  0EF7               	movlw	247
  3947  001B06  0100               	movlb	0	; () banked
  3948  001B08  19C7               	xorwf	CANSetMask@type& (0+255),w,b
  3949  001B0A  A4D8               	btfss	status,2,c
  3950  001B0C  D084               	goto	l4334
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;inc\CANlib.h: 666: {
  3954                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  3955  001B0E  0100               	movlb	0	; () banked
  3956  001B10  51C3               	movf	CANSetMask@mask& (0+255),w,b
  3957  001B12  0100               	movlb	0	; () banked
  3958  001B14  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  3959  001B16  6BCE               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3960  001B18  6BCF               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3961  001B1A  6BD0               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  3965  001B1C  C0CD  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  3969  001B20  0E00               	movlw	0
  3970  001B22  0100               	movlb	0	; () banked
  3971  001B24  15C3               	andwf	CANSetMask@mask& (0+255),w,b
  3972  001B26  0100               	movlb	0	; () banked
  3973  001B28  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  3974  001B2A  0EFF               	movlw	255
  3975  001B2C  0100               	movlb	0	; () banked
  3976  001B2E  15C4               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3977  001B30  0100               	movlb	0	; () banked
  3978  001B32  6FCE               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3979  001B34  0E00               	movlw	0
  3980  001B36  0100               	movlb	0	; () banked
  3981  001B38  15C5               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3982  001B3A  0100               	movlb	0	; () banked
  3983  001B3C  6FCF               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3984  001B3E  0E00               	movlw	0
  3985  001B40  0100               	movlb	0	; () banked
  3986  001B42  15C6               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3987  001B44  0100               	movlb	0	; () banked
  3988  001B46  6FD0               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  3992  001B48  C0CD  F0C8         	movff	CANSetMask@tamp,??_CANSetMask
  3993  001B4C  C0CE  F0C9         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3994  001B50  C0CF  F0CA         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3995  001B54  C0D0  F0CB         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3996  001B58  C0C9  F0C8         	movff	??_CANSetMask+1,??_CANSetMask
  3997  001B5C  C0CA  F0C9         	movff	??_CANSetMask+2,??_CANSetMask+1
  3998  001B60  C0CB  F0CA         	movff	??_CANSetMask+3,??_CANSetMask+2
  3999  001B64  0100               	movlb	0	; () banked
  4000  001B66  6BCB               	clrf	(??_CANSetMask+3)& (0+255),b
  4001  001B68  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  4002  001B6C  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4003  001B70  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4004  001B74  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4008  001B78  C0CD  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4012  001B7C  0100               	movlb	0	; () banked
  4013  001B7E  A1C5               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4014  001B80  D003               	goto	l442
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4018  001B82  010F               	movlb	15	; () banked
  4019  001B84  8119               	bsf	25,0,b	;volatile
  4020  001B86  D002               	goto	l443
  4021  001B88                     l442:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;inc\CANlib.h: 676: else
  4025                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4026  001B88  010F               	movlb	15	; () banked
  4027  001B8A  9119               	bcf	25,0,b	;volatile
  4028  001B8C                     l443:
  4029                           
  4030                           ; BSR set to: 15
  4031                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4032  001B8C  0100               	movlb	0	; () banked
  4033  001B8E  A3C5               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4034  001B90  D003               	goto	l444
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4038  001B92  010F               	movlb	15	; () banked
  4039  001B94  8319               	bsf	25,1,b	;volatile
  4040  001B96  D002               	goto	l445
  4041  001B98                     l444:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;inc\CANlib.h: 681: else
  4045                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4046  001B98  010F               	movlb	15	; () banked
  4047  001B9A  9319               	bcf	25,1,b	;volatile
  4048  001B9C                     l445:
  4049                           
  4050                           ; BSR set to: 15
  4051                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4052  001B9C  0100               	movlb	0	; () banked
  4053  001B9E  A5C5               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4054  001BA0  D003               	goto	l446
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4058  001BA2  010F               	movlb	15	; () banked
  4059  001BA4  8B19               	bsf	25,5,b	;volatile
  4060  001BA6  D002               	goto	l447
  4061  001BA8                     l446:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;inc\CANlib.h: 686: else
  4065                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4066  001BA8  010F               	movlb	15	; () banked
  4067  001BAA  9B19               	bcf	25,5,b	;volatile
  4068  001BAC                     l447:
  4069                           
  4070                           ; BSR set to: 15
  4071                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4072  001BAC  0100               	movlb	0	; () banked
  4073  001BAE  A7C5               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4074  001BB0  D003               	goto	l448
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4078  001BB2  010F               	movlb	15	; () banked
  4079  001BB4  8D19               	bsf	25,6,b	;volatile
  4080  001BB6  D002               	goto	l449
  4081  001BB8                     l448:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;inc\CANlib.h: 691: else
  4085                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4086  001BB8  010F               	movlb	15	; () banked
  4087  001BBA  9D19               	bcf	25,6,b	;volatile
  4088  001BBC                     l449:
  4089                           
  4090                           ; BSR set to: 15
  4091                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4092  001BBC  0100               	movlb	0	; () banked
  4093  001BBE  A9C5               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4094  001BC0  D003               	goto	l450
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4098  001BC2  010F               	movlb	15	; () banked
  4099  001BC4  8F19               	bsf	25,7,b	;volatile
  4100  001BC6  D003               	goto	l4328
  4101  001BC8                     l450:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;inc\CANlib.h: 696: else
  4105                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4106  001BC8  010F               	movlb	15	; () banked
  4107  001BCA  9F19               	bcf	25,7,b	;volatile
  4108  001BCC  D000               	goto	l4328
  4109  001BCE                     l4328:
  4110                           
  4111                           ; BSR set to: 15
  4112                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4113  001BCE  C0C3  F0C8         	movff	CANSetMask@mask,??_CANSetMask
  4114  001BD2  C0C4  F0C9         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4115  001BD6  C0C5  F0CA         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4116  001BDA  C0C6  F0CB         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4117  001BDE  0E16               	movlw	22
  4118  001BE0  D006               	goto	u5190
  4119  001BE2                     u5195:
  4120  001BE2  0100               	movlb	0	; () banked
  4121  001BE4  90D8               	bcf	status,0,c
  4122  001BE6  33CB               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4123  001BE8  33CA               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4124  001BEA  33C9               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4125  001BEC  33C8               	rrcf	??_CANSetMask& (0+255),f,b
  4126  001BEE                     u5190:
  4127  001BEE  2EE8               	decfsz	wreg,f,c
  4128  001BF0  D7F8               	goto	u5195
  4129  001BF2  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  4130  001BF6  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4131  001BFA  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4132  001BFE  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4136  001C02  0100               	movlb	0	; () banked
  4137  001C04  51CD               	movf	CANSetMask@tamp& (0+255),w,b
  4138  001C06  0100               	movlb	0	; () banked
  4139  001C08  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  4140  001C0A  6BCE               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4141  001C0C  6BCF               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4142  001C0E  6BD0               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4146  001C10  C0CD  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4147  001C14  D000               	goto	l4334
  4148  001C16                     l4334:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;inc\CANlib.h: 702: }
  4152                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4153  001C16  0E02               	movlw	2
  4154  001C18  0100               	movlb	0	; () banked
  4155  001C1A  19CC               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4156  001C1C  A4D8               	btfss	status,2,c
  4157  001C1E  D089               	goto	l463
  4158                           
  4159                           ; BSR set to: 0
  4160  001C20  0EF7               	movlw	247
  4161  001C22  0100               	movlb	0	; () banked
  4162  001C24  19C7               	xorwf	CANSetMask@type& (0+255),w,b
  4163  001C26  A4D8               	btfss	status,2,c
  4164  001C28  D084               	goto	l463
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 705: {
  4168                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4169  001C2A  0100               	movlb	0	; () banked
  4170  001C2C  51C3               	movf	CANSetMask@mask& (0+255),w,b
  4171  001C2E  0100               	movlb	0	; () banked
  4172  001C30  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  4173  001C32  6BCE               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4174  001C34  6BCF               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4175  001C36  6BD0               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4179  001C38  C0CD  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4183  001C3C  0E00               	movlw	0
  4184  001C3E  0100               	movlb	0	; () banked
  4185  001C40  15C3               	andwf	CANSetMask@mask& (0+255),w,b
  4186  001C42  0100               	movlb	0	; () banked
  4187  001C44  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  4188  001C46  0EFF               	movlw	255
  4189  001C48  0100               	movlb	0	; () banked
  4190  001C4A  15C4               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4191  001C4C  0100               	movlb	0	; () banked
  4192  001C4E  6FCE               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4193  001C50  0E00               	movlw	0
  4194  001C52  0100               	movlb	0	; () banked
  4195  001C54  15C5               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4196  001C56  0100               	movlb	0	; () banked
  4197  001C58  6FCF               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4198  001C5A  0E00               	movlw	0
  4199  001C5C  0100               	movlb	0	; () banked
  4200  001C5E  15C6               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4201  001C60  0100               	movlb	0	; () banked
  4202  001C62  6FD0               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4206  001C64  C0CD  F0C8         	movff	CANSetMask@tamp,??_CANSetMask
  4207  001C68  C0CE  F0C9         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4208  001C6C  C0CF  F0CA         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4209  001C70  C0D0  F0CB         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4210  001C74  C0C9  F0C8         	movff	??_CANSetMask+1,??_CANSetMask
  4211  001C78  C0CA  F0C9         	movff	??_CANSetMask+2,??_CANSetMask+1
  4212  001C7C  C0CB  F0CA         	movff	??_CANSetMask+3,??_CANSetMask+2
  4213  001C80  0100               	movlb	0	; () banked
  4214  001C82  6BCB               	clrf	(??_CANSetMask+3)& (0+255),b
  4215  001C84  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  4216  001C88  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4217  001C8C  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4218  001C90  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4222  001C94  C0CD  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4226  001C98  0100               	movlb	0	; () banked
  4227  001C9A  A1C5               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4228  001C9C  D003               	goto	l453
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4232  001C9E  010F               	movlb	15	; () banked
  4233  001CA0  811D               	bsf	29,0,b	;volatile
  4234  001CA2  D002               	goto	l454
  4235  001CA4                     l453:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;inc\CANlib.h: 715: else
  4239                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4240  001CA4  010F               	movlb	15	; () banked
  4241  001CA6  911D               	bcf	29,0,b	;volatile
  4242  001CA8                     l454:
  4243                           
  4244                           ; BSR set to: 15
  4245                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4246  001CA8  0100               	movlb	0	; () banked
  4247  001CAA  A3C5               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4248  001CAC  D003               	goto	l455
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4252  001CAE  010F               	movlb	15	; () banked
  4253  001CB0  831D               	bsf	29,1,b	;volatile
  4254  001CB2  D002               	goto	l456
  4255  001CB4                     l455:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;inc\CANlib.h: 720: else
  4259                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4260  001CB4  010F               	movlb	15	; () banked
  4261  001CB6  931D               	bcf	29,1,b	;volatile
  4262  001CB8                     l456:
  4263                           
  4264                           ; BSR set to: 15
  4265                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4266  001CB8  0100               	movlb	0	; () banked
  4267  001CBA  A5C5               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4268  001CBC  D003               	goto	l457
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4272  001CBE  010F               	movlb	15	; () banked
  4273  001CC0  8B1D               	bsf	29,5,b	;volatile
  4274  001CC2  D002               	goto	l458
  4275  001CC4                     l457:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 725: else
  4279                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4280  001CC4  010F               	movlb	15	; () banked
  4281  001CC6  9B1D               	bcf	29,5,b	;volatile
  4282  001CC8                     l458:
  4283                           
  4284                           ; BSR set to: 15
  4285                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4286  001CC8  0100               	movlb	0	; () banked
  4287  001CCA  A7C5               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4288  001CCC  D003               	goto	l459
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4292  001CCE  010F               	movlb	15	; () banked
  4293  001CD0  8D1D               	bsf	29,6,b	;volatile
  4294  001CD2  D002               	goto	l460
  4295  001CD4                     l459:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;inc\CANlib.h: 730: else
  4299                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4300  001CD4  010F               	movlb	15	; () banked
  4301  001CD6  9D1D               	bcf	29,6,b	;volatile
  4302  001CD8                     l460:
  4303                           
  4304                           ; BSR set to: 15
  4305                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4306  001CD8  0100               	movlb	0	; () banked
  4307  001CDA  A9C5               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4308  001CDC  D003               	goto	l461
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4312  001CDE  010F               	movlb	15	; () banked
  4313  001CE0  8F1D               	bsf	29,7,b	;volatile
  4314  001CE2  D003               	goto	l4360
  4315  001CE4                     l461:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;inc\CANlib.h: 735: else
  4319                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4320  001CE4  010F               	movlb	15	; () banked
  4321  001CE6  9F1D               	bcf	29,7,b	;volatile
  4322  001CE8  D000               	goto	l4360
  4323  001CEA                     l4360:
  4324                           
  4325                           ; BSR set to: 15
  4326                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4327  001CEA  C0C3  F0C8         	movff	CANSetMask@mask,??_CANSetMask
  4328  001CEE  C0C4  F0C9         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4329  001CF2  C0C5  F0CA         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4330  001CF6  C0C6  F0CB         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4331  001CFA  0E16               	movlw	22
  4332  001CFC  D006               	goto	u5270
  4333  001CFE                     u5275:
  4334  001CFE  0100               	movlb	0	; () banked
  4335  001D00  90D8               	bcf	status,0,c
  4336  001D02  33CB               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4337  001D04  33CA               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4338  001D06  33C9               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4339  001D08  33C8               	rrcf	??_CANSetMask& (0+255),f,b
  4340  001D0A                     u5270:
  4341  001D0A  2EE8               	decfsz	wreg,f,c
  4342  001D0C  D7F8               	goto	u5275
  4343  001D0E  C0C8  F0CD         	movff	??_CANSetMask,CANSetMask@tamp
  4344  001D12  C0C9  F0CE         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4345  001D16  C0CA  F0CF         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4346  001D1A  C0CB  F0D0         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4350  001D1E  0100               	movlb	0	; () banked
  4351  001D20  51CD               	movf	CANSetMask@tamp& (0+255),w,b
  4352  001D22  0100               	movlb	0	; () banked
  4353  001D24  6FCD               	movwf	CANSetMask@tamp& (0+255),b
  4354  001D26  6BCE               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4355  001D28  6BCF               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4356  001D2A  6BD0               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4360  001D2C  C0CD  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4361  001D30  D000               	goto	l463
  4362  001D32                     l463:
  4363                           
  4364                           ; BSR set to: 0
  4365  001D32  0012               	return		;funcret
  4366  001D34                     __end_of_CANSetMask:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           prodh	equ	0xFF4
  4373                           prodl	equ	0xFF3
  4374                           intcon	equ	0xFF2
  4375                           intcon2	equ	0xFF1
  4376                           intcon3	equ	0xFF0
  4377                           postinc0	equ	0xFEE
  4378                           wreg	equ	0xFE8
  4379                           postdec1	equ	0xFE5
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _CANSetFilter *****************
  4387 ;; Defined at:
  4388 ;;		line 748 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  numBuffer       1    wreg     enum E16922
  4391 ;;  filter          4   36[BANK0 ] unsigned long 
  4392 ;;  type            1   40[BANK0 ] enum E16885
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  numBuffer       1   45[BANK0 ] enum E16922
  4395 ;;  tamp            4   46[BANK0 ] unsigned long 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4405 ;;      Params:         0       5       0       0
  4406 ;;      Locals:         0       5       0       0
  4407 ;;      Temps:          0       4       0       0
  4408 ;;      Totals:         0      14       0       0
  4409 ;;Total ram usage:       14 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    4
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_CANInitialize
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text8
  4420  000192                     __ptext8:
  4421                           	opt stack 0
  4422  000192                     _CANSetFilter:
  4423                           	opt stack 24
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;incstack = 0
  4427                           ;CANSetFilter@numBuffer stored from wreg
  4428  000192  0100               	movlb	0	; () banked
  4429  000194  6FCC               	movwf	CANSetFilter@numBuffer& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;inc\CANlib.h: 750: unsigned long tamp;
  4433                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4434  000196  0100               	movlb	0	; () banked
  4435  000198  51CC               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4436  00019A  0100               	movlb	0	; () banked
  4437  00019C  A4D8               	btfss	status,2,c
  4438  00019E  D059               	goto	l4384
  4439                           
  4440                           ; BSR set to: 0
  4441  0001A0  0100               	movlb	0	; () banked
  4442  0001A2  29C7               	incf	CANSetFilter@type& (0+255),w,b
  4443  0001A4  A4D8               	btfss	status,2,c
  4444  0001A6  D055               	goto	l4384
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;inc\CANlib.h: 753: {
  4448                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4449  0001A8  010F               	movlb	15	; () banked
  4450  0001AA  9701               	bcf	1,3,b	;volatile
  4451                           
  4452                           ; BSR set to: 15
  4453                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4454  0001AC  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  4455  0001B0  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4456  0001B4  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4457  0001B8  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4458  0001BC  0E04               	movlw	4
  4459  0001BE  D006               	goto	u5300
  4460  0001C0                     u5305:
  4461  0001C0  0100               	movlb	0	; () banked
  4462  0001C2  90D8               	bcf	status,0,c
  4463  0001C4  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4464  0001C6  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4465  0001C8  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4466  0001CA  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  4467  0001CC                     u5300:
  4468  0001CC  2EE8               	decfsz	wreg,f,c
  4469  0001CE  D7F8               	goto	u5305
  4470  0001D0  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4471  0001D4  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4472  0001D8  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4473  0001DC  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4477  0001E0  0100               	movlb	0	; () banked
  4478  0001E2  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  4479  0001E4  0100               	movlb	0	; () banked
  4480  0001E6  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4481  0001E8  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4482  0001EA  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4483  0001EC  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4487  0001EE  C0CD  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4491  0001F2  0E07               	movlw	7
  4492  0001F4  0100               	movlb	0	; () banked
  4493  0001F6  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  4494  0001F8  0100               	movlb	0	; () banked
  4495  0001FA  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4496  0001FC  0E00               	movlw	0
  4497  0001FE  0100               	movlb	0	; () banked
  4498  000200  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4499  000202  0100               	movlb	0	; () banked
  4500  000204  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4501  000206  0E00               	movlw	0
  4502  000208  0100               	movlb	0	; () banked
  4503  00020A  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4504  00020C  0100               	movlb	0	; () banked
  4505  00020E  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4506  000210  0E00               	movlw	0
  4507  000212  0100               	movlb	0	; () banked
  4508  000214  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4509  000216  0100               	movlb	0	; () banked
  4510  000218  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4514  00021A  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  4515  00021E  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4516  000222  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4517  000226  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4518  00022A  0E05               	movlw	5
  4519  00022C                     u5315:
  4520  00022C  90D8               	bcf	status,0,c
  4521  00022E  0100               	movlb	0	; () banked
  4522  000230  37C8               	rlcf	??_CANSetFilter& (0+255),f,b
  4523  000232  37C9               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4524  000234  37CA               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4525  000236  37CB               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4526  000238  2EE8               	decfsz	wreg,f,c
  4527  00023A  D7F8               	goto	u5315
  4528  00023C  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4529  000240  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4530  000244  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4531  000248  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4535  00024C  C0CD  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4536  000250  D000               	goto	l4384
  4537  000252                     l4384:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;inc\CANlib.h: 763: }
  4541                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4542  000252  0100               	movlb	0	; () banked
  4543  000254  05CC               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4544  000256  A4D8               	btfss	status,2,c
  4545  000258  D059               	goto	l4402
  4546                           
  4547                           ; BSR set to: 0
  4548  00025A  0100               	movlb	0	; () banked
  4549  00025C  29C7               	incf	CANSetFilter@type& (0+255),w,b
  4550  00025E  A4D8               	btfss	status,2,c
  4551  000260  D055               	goto	l4402
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;inc\CANlib.h: 766: {
  4555                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4556  000262  010F               	movlb	15	; () banked
  4557  000264  9705               	bcf	5,3,b	;volatile
  4558                           
  4559                           ; BSR set to: 15
  4560                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4561  000266  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  4562  00026A  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4563  00026E  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4564  000272  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4565  000276  0E04               	movlw	4
  4566  000278  D006               	goto	u5340
  4567  00027A                     u5345:
  4568  00027A  0100               	movlb	0	; () banked
  4569  00027C  90D8               	bcf	status,0,c
  4570  00027E  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4571  000280  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4572  000282  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4573  000284  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  4574  000286                     u5340:
  4575  000286  2EE8               	decfsz	wreg,f,c
  4576  000288  D7F8               	goto	u5345
  4577  00028A  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4578  00028E  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4579  000292  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4580  000296  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4584  00029A  0100               	movlb	0	; () banked
  4585  00029C  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  4586  00029E  0100               	movlb	0	; () banked
  4587  0002A0  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4588  0002A2  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4589  0002A4  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4590  0002A6  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4594  0002A8  C0CD  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4598  0002AC  0E07               	movlw	7
  4599  0002AE  0100               	movlb	0	; () banked
  4600  0002B0  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  4601  0002B2  0100               	movlb	0	; () banked
  4602  0002B4  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4603  0002B6  0E00               	movlw	0
  4604  0002B8  0100               	movlb	0	; () banked
  4605  0002BA  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4606  0002BC  0100               	movlb	0	; () banked
  4607  0002BE  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4608  0002C0  0E00               	movlw	0
  4609  0002C2  0100               	movlb	0	; () banked
  4610  0002C4  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4611  0002C6  0100               	movlb	0	; () banked
  4612  0002C8  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4613  0002CA  0E00               	movlw	0
  4614  0002CC  0100               	movlb	0	; () banked
  4615  0002CE  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4616  0002D0  0100               	movlb	0	; () banked
  4617  0002D2  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4621  0002D4  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  4622  0002D8  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4623  0002DC  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4624  0002E0  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4625  0002E4  0E05               	movlw	5
  4626  0002E6                     u5355:
  4627  0002E6  90D8               	bcf	status,0,c
  4628  0002E8  0100               	movlb	0	; () banked
  4629  0002EA  37C8               	rlcf	??_CANSetFilter& (0+255),f,b
  4630  0002EC  37C9               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4631  0002EE  37CA               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4632  0002F0  37CB               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4633  0002F2  2EE8               	decfsz	wreg,f,c
  4634  0002F4  D7F8               	goto	u5355
  4635  0002F6  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4636  0002FA  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4637  0002FE  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4638  000302  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4642  000306  C0CD  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4643  00030A  D000               	goto	l4402
  4644  00030C                     l4402:
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;inc\CANlib.h: 776: }
  4648                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4649  00030C  0E02               	movlw	2
  4650  00030E  0100               	movlb	0	; () banked
  4651  000310  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4652  000312  A4D8               	btfss	status,2,c
  4653  000314  D059               	goto	l4420
  4654                           
  4655                           ; BSR set to: 0
  4656  000316  0100               	movlb	0	; () banked
  4657  000318  29C7               	incf	CANSetFilter@type& (0+255),w,b
  4658  00031A  A4D8               	btfss	status,2,c
  4659  00031C  D055               	goto	l4420
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;inc\CANlib.h: 779: {
  4663                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4664  00031E  010F               	movlb	15	; () banked
  4665  000320  9709               	bcf	9,3,b	;volatile
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4669  000322  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  4670  000326  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4671  00032A  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4672  00032E  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4673  000332  0E04               	movlw	4
  4674  000334  D006               	goto	u5380
  4675  000336                     u5385:
  4676  000336  0100               	movlb	0	; () banked
  4677  000338  90D8               	bcf	status,0,c
  4678  00033A  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4679  00033C  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4680  00033E  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4681  000340  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  4682  000342                     u5380:
  4683  000342  2EE8               	decfsz	wreg,f,c
  4684  000344  D7F8               	goto	u5385
  4685  000346  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4686  00034A  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4687  00034E  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4688  000352  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4692  000356  0100               	movlb	0	; () banked
  4693  000358  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  4694  00035A  0100               	movlb	0	; () banked
  4695  00035C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4696  00035E  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4697  000360  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4698  000362  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4702  000364  C0CD  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4706  000368  0E07               	movlw	7
  4707  00036A  0100               	movlb	0	; () banked
  4708  00036C  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  4709  00036E  0100               	movlb	0	; () banked
  4710  000370  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4711  000372  0E00               	movlw	0
  4712  000374  0100               	movlb	0	; () banked
  4713  000376  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4714  000378  0100               	movlb	0	; () banked
  4715  00037A  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4716  00037C  0E00               	movlw	0
  4717  00037E  0100               	movlb	0	; () banked
  4718  000380  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4719  000382  0100               	movlb	0	; () banked
  4720  000384  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4721  000386  0E00               	movlw	0
  4722  000388  0100               	movlb	0	; () banked
  4723  00038A  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4724  00038C  0100               	movlb	0	; () banked
  4725  00038E  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4729  000390  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  4730  000394  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4731  000398  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4732  00039C  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4733  0003A0  0E05               	movlw	5
  4734  0003A2                     u5395:
  4735  0003A2  90D8               	bcf	status,0,c
  4736  0003A4  0100               	movlb	0	; () banked
  4737  0003A6  37C8               	rlcf	??_CANSetFilter& (0+255),f,b
  4738  0003A8  37C9               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4739  0003AA  37CA               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4740  0003AC  37CB               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4741  0003AE  2EE8               	decfsz	wreg,f,c
  4742  0003B0  D7F8               	goto	u5395
  4743  0003B2  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4744  0003B6  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4745  0003BA  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4746  0003BE  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4750  0003C2  C0CD  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4751  0003C6  D000               	goto	l4420
  4752  0003C8                     l4420:
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;inc\CANlib.h: 789: }
  4756                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4757  0003C8  0E03               	movlw	3
  4758  0003CA  0100               	movlb	0	; () banked
  4759  0003CC  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4760  0003CE  A4D8               	btfss	status,2,c
  4761  0003D0  D059               	goto	l4438
  4762                           
  4763                           ; BSR set to: 0
  4764  0003D2  0100               	movlb	0	; () banked
  4765  0003D4  29C7               	incf	CANSetFilter@type& (0+255),w,b
  4766  0003D6  A4D8               	btfss	status,2,c
  4767  0003D8  D055               	goto	l4438
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;inc\CANlib.h: 792: {
  4771                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4772  0003DA  010F               	movlb	15	; () banked
  4773  0003DC  970D               	bcf	13,3,b	;volatile
  4774                           
  4775                           ; BSR set to: 15
  4776                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4777  0003DE  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  4778  0003E2  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4779  0003E6  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4780  0003EA  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4781  0003EE  0E04               	movlw	4
  4782  0003F0  D006               	goto	u5420
  4783  0003F2                     u5425:
  4784  0003F2  0100               	movlb	0	; () banked
  4785  0003F4  90D8               	bcf	status,0,c
  4786  0003F6  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4787  0003F8  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4788  0003FA  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4789  0003FC  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  4790  0003FE                     u5420:
  4791  0003FE  2EE8               	decfsz	wreg,f,c
  4792  000400  D7F8               	goto	u5425
  4793  000402  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4794  000406  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4795  00040A  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4796  00040E  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4800  000412  0100               	movlb	0	; () banked
  4801  000414  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  4802  000416  0100               	movlb	0	; () banked
  4803  000418  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4804  00041A  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4805  00041C  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4806  00041E  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4810  000420  C0CD  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4814  000424  0E07               	movlw	7
  4815  000426  0100               	movlb	0	; () banked
  4816  000428  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  4817  00042A  0100               	movlb	0	; () banked
  4818  00042C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4819  00042E  0E00               	movlw	0
  4820  000430  0100               	movlb	0	; () banked
  4821  000432  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4822  000434  0100               	movlb	0	; () banked
  4823  000436  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4824  000438  0E00               	movlw	0
  4825  00043A  0100               	movlb	0	; () banked
  4826  00043C  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4827  00043E  0100               	movlb	0	; () banked
  4828  000440  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4829  000442  0E00               	movlw	0
  4830  000444  0100               	movlb	0	; () banked
  4831  000446  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4832  000448  0100               	movlb	0	; () banked
  4833  00044A  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4837  00044C  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  4838  000450  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4839  000454  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4840  000458  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4841  00045C  0E05               	movlw	5
  4842  00045E                     u5435:
  4843  00045E  90D8               	bcf	status,0,c
  4844  000460  0100               	movlb	0	; () banked
  4845  000462  37C8               	rlcf	??_CANSetFilter& (0+255),f,b
  4846  000464  37C9               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4847  000466  37CA               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4848  000468  37CB               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4849  00046A  2EE8               	decfsz	wreg,f,c
  4850  00046C  D7F8               	goto	u5435
  4851  00046E  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4852  000472  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4853  000476  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4854  00047A  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4858  00047E  C0CD  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4859  000482  D000               	goto	l4438
  4860  000484                     l4438:
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;inc\CANlib.h: 802: }
  4864                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4865  000484  0E04               	movlw	4
  4866  000486  0100               	movlb	0	; () banked
  4867  000488  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4868  00048A  A4D8               	btfss	status,2,c
  4869  00048C  D059               	goto	l4456
  4870                           
  4871                           ; BSR set to: 0
  4872  00048E  0100               	movlb	0	; () banked
  4873  000490  29C7               	incf	CANSetFilter@type& (0+255),w,b
  4874  000492  A4D8               	btfss	status,2,c
  4875  000494  D055               	goto	l4456
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;inc\CANlib.h: 805: {
  4879                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  4880  000496  010F               	movlb	15	; () banked
  4881  000498  9711               	bcf	17,3,b	;volatile
  4882                           
  4883                           ; BSR set to: 15
  4884                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  4885  00049A  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  4886  00049E  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4887  0004A2  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4888  0004A6  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4889  0004AA  0E04               	movlw	4
  4890  0004AC  D006               	goto	u5460
  4891  0004AE                     u5465:
  4892  0004AE  0100               	movlb	0	; () banked
  4893  0004B0  90D8               	bcf	status,0,c
  4894  0004B2  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4895  0004B4  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4896  0004B6  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4897  0004B8  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  4898  0004BA                     u5460:
  4899  0004BA  2EE8               	decfsz	wreg,f,c
  4900  0004BC  D7F8               	goto	u5465
  4901  0004BE  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4902  0004C2  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4903  0004C6  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4904  0004CA  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  4908  0004CE  0100               	movlb	0	; () banked
  4909  0004D0  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  4910  0004D2  0100               	movlb	0	; () banked
  4911  0004D4  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4912  0004D6  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4913  0004D8  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4914  0004DA  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  4918  0004DC  C0CD  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  4922  0004E0  0E07               	movlw	7
  4923  0004E2  0100               	movlb	0	; () banked
  4924  0004E4  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  4925  0004E6  0100               	movlb	0	; () banked
  4926  0004E8  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  4927  0004EA  0E00               	movlw	0
  4928  0004EC  0100               	movlb	0	; () banked
  4929  0004EE  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4930  0004F0  0100               	movlb	0	; () banked
  4931  0004F2  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4932  0004F4  0E00               	movlw	0
  4933  0004F6  0100               	movlb	0	; () banked
  4934  0004F8  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4935  0004FA  0100               	movlb	0	; () banked
  4936  0004FC  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4937  0004FE  0E00               	movlw	0
  4938  000500  0100               	movlb	0	; () banked
  4939  000502  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4940  000504  0100               	movlb	0	; () banked
  4941  000506  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  4945  000508  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  4946  00050C  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4947  000510  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4948  000514  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4949  000518  0E05               	movlw	5
  4950  00051A                     u5475:
  4951  00051A  90D8               	bcf	status,0,c
  4952  00051C  0100               	movlb	0	; () banked
  4953  00051E  37C8               	rlcf	??_CANSetFilter& (0+255),f,b
  4954  000520  37C9               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4955  000522  37CA               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4956  000524  37CB               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4957  000526  2EE8               	decfsz	wreg,f,c
  4958  000528  D7F8               	goto	u5475
  4959  00052A  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  4960  00052E  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4961  000532  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4962  000536  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  4966  00053A  C0CD  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  4967  00053E  D000               	goto	l4456
  4968  000540                     l4456:
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;inc\CANlib.h: 815: }
  4972                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  4973  000540  0E05               	movlw	5
  4974  000542  0100               	movlb	0	; () banked
  4975  000544  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4976  000546  A4D8               	btfss	status,2,c
  4977  000548  D059               	goto	l4474
  4978                           
  4979                           ; BSR set to: 0
  4980  00054A  0100               	movlb	0	; () banked
  4981  00054C  29C7               	incf	CANSetFilter@type& (0+255),w,b
  4982  00054E  A4D8               	btfss	status,2,c
  4983  000550  D055               	goto	l4474
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;inc\CANlib.h: 818: {
  4987                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4988  000552  010F               	movlb	15	; () banked
  4989  000554  9715               	bcf	21,3,b	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  4993  000556  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  4994  00055A  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4995  00055E  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4996  000562  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4997  000566  0E04               	movlw	4
  4998  000568  D006               	goto	u5500
  4999  00056A                     u5505:
  5000  00056A  0100               	movlb	0	; () banked
  5001  00056C  90D8               	bcf	status,0,c
  5002  00056E  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5003  000570  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5004  000572  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5005  000574  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  5006  000576                     u5500:
  5007  000576  2EE8               	decfsz	wreg,f,c
  5008  000578  D7F8               	goto	u5505
  5009  00057A  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5010  00057E  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5011  000582  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5012  000586  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5016  00058A  0100               	movlb	0	; () banked
  5017  00058C  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  5018  00058E  0100               	movlb	0	; () banked
  5019  000590  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5020  000592  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5021  000594  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5022  000596  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5026  000598  C0CD  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5030  00059C  0E07               	movlw	7
  5031  00059E  0100               	movlb	0	; () banked
  5032  0005A0  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  5033  0005A2  0100               	movlb	0	; () banked
  5034  0005A4  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5035  0005A6  0E00               	movlw	0
  5036  0005A8  0100               	movlb	0	; () banked
  5037  0005AA  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5038  0005AC  0100               	movlb	0	; () banked
  5039  0005AE  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5040  0005B0  0E00               	movlw	0
  5041  0005B2  0100               	movlb	0	; () banked
  5042  0005B4  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5043  0005B6  0100               	movlb	0	; () banked
  5044  0005B8  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5045  0005BA  0E00               	movlw	0
  5046  0005BC  0100               	movlb	0	; () banked
  5047  0005BE  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5048  0005C0  0100               	movlb	0	; () banked
  5049  0005C2  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5053  0005C4  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  5054  0005C8  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5055  0005CC  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5056  0005D0  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5057  0005D4  0E05               	movlw	5
  5058  0005D6                     u5515:
  5059  0005D6  90D8               	bcf	status,0,c
  5060  0005D8  0100               	movlb	0	; () banked
  5061  0005DA  37C8               	rlcf	??_CANSetFilter& (0+255),f,b
  5062  0005DC  37C9               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5063  0005DE  37CA               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5064  0005E0  37CB               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5065  0005E2  2EE8               	decfsz	wreg,f,c
  5066  0005E4  D7F8               	goto	u5515
  5067  0005E6  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5068  0005EA  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5069  0005EE  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5070  0005F2  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5074  0005F6  C0CD  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5075  0005FA  D000               	goto	l4474
  5076  0005FC                     l4474:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;inc\CANlib.h: 828: }
  5080                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5081  0005FC  0100               	movlb	0	; () banked
  5082  0005FE  51CC               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5083  000600  0100               	movlb	0	; () banked
  5084  000602  A4D8               	btfss	status,2,c
  5085  000604  D08B               	goto	l4508
  5086                           
  5087                           ; BSR set to: 0
  5088  000606  0EF7               	movlw	247
  5089  000608  0100               	movlb	0	; () banked
  5090  00060A  19C7               	xorwf	CANSetFilter@type& (0+255),w,b
  5091  00060C  A4D8               	btfss	status,2,c
  5092  00060E  D086               	goto	l4508
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;inc\CANlib.h: 832: {
  5096                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5097  000610  010F               	movlb	15	; () banked
  5098  000612  8701               	bsf	1,3,b	;volatile
  5099                           
  5100                           ; BSR set to: 15
  5101                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5102  000614  0100               	movlb	0	; () banked
  5103  000616  51C3               	movf	CANSetFilter@filter& (0+255),w,b
  5104  000618  0100               	movlb	0	; () banked
  5105  00061A  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5106  00061C  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5107  00061E  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5108  000620  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5112  000622  C0CD  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5116  000626  0E00               	movlw	0
  5117  000628  0100               	movlb	0	; () banked
  5118  00062A  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  5119  00062C  0100               	movlb	0	; () banked
  5120  00062E  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5121  000630  0EFF               	movlw	255
  5122  000632  0100               	movlb	0	; () banked
  5123  000634  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5124  000636  0100               	movlb	0	; () banked
  5125  000638  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5126  00063A  0E00               	movlw	0
  5127  00063C  0100               	movlb	0	; () banked
  5128  00063E  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5129  000640  0100               	movlb	0	; () banked
  5130  000642  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5131  000644  0E00               	movlw	0
  5132  000646  0100               	movlb	0	; () banked
  5133  000648  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5134  00064A  0100               	movlb	0	; () banked
  5135  00064C  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5139  00064E  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  5140  000652  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5141  000656  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5142  00065A  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5143  00065E  C0C9  F0C8         	movff	??_CANSetFilter+1,??_CANSetFilter
  5144  000662  C0CA  F0C9         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5145  000666  C0CB  F0CA         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5146  00066A  0100               	movlb	0	; () banked
  5147  00066C  6BCB               	clrf	(??_CANSetFilter+3)& (0+255),b
  5148  00066E  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5149  000672  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5150  000676  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5151  00067A  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5152                           
  5153                           ; BSR set to: 0
  5154                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5155  00067E  C0CD  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5159  000682  0100               	movlb	0	; () banked
  5160  000684  A1C5               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5161  000686  D003               	goto	l473
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5165  000688  010F               	movlb	15	; () banked
  5166  00068A  8101               	bsf	1,0,b	;volatile
  5167  00068C  D002               	goto	l474
  5168  00068E                     l473:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;inc\CANlib.h: 844: else
  5172                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5173  00068E  010F               	movlb	15	; () banked
  5174  000690  9101               	bcf	1,0,b	;volatile
  5175  000692                     l474:
  5176                           
  5177                           ; BSR set to: 15
  5178                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5179  000692  0100               	movlb	0	; () banked
  5180  000694  A3C5               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5181  000696  D003               	goto	l475
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5185  000698  010F               	movlb	15	; () banked
  5186  00069A  8301               	bsf	1,1,b	;volatile
  5187  00069C  D002               	goto	l476
  5188  00069E                     l475:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;inc\CANlib.h: 849: else
  5192                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5193  00069E  010F               	movlb	15	; () banked
  5194  0006A0  9301               	bcf	1,1,b	;volatile
  5195  0006A2                     l476:
  5196                           
  5197                           ; BSR set to: 15
  5198                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5199  0006A2  0100               	movlb	0	; () banked
  5200  0006A4  A5C5               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5201  0006A6  D003               	goto	l477
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5205  0006A8  010F               	movlb	15	; () banked
  5206  0006AA  8B01               	bsf	1,5,b	;volatile
  5207  0006AC  D002               	goto	l478
  5208  0006AE                     l477:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;inc\CANlib.h: 854: else
  5212                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5213  0006AE  010F               	movlb	15	; () banked
  5214  0006B0  9B01               	bcf	1,5,b	;volatile
  5215  0006B2                     l478:
  5216                           
  5217                           ; BSR set to: 15
  5218                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5219  0006B2  0100               	movlb	0	; () banked
  5220  0006B4  A7C5               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5221  0006B6  D003               	goto	l479
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5225  0006B8  010F               	movlb	15	; () banked
  5226  0006BA  8D01               	bsf	1,6,b	;volatile
  5227  0006BC  D002               	goto	l480
  5228  0006BE                     l479:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;inc\CANlib.h: 859: else
  5232                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5233  0006BE  010F               	movlb	15	; () banked
  5234  0006C0  9D01               	bcf	1,6,b	;volatile
  5235  0006C2                     l480:
  5236                           
  5237                           ; BSR set to: 15
  5238                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5239  0006C2  0100               	movlb	0	; () banked
  5240  0006C4  A9C5               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5241  0006C6  D003               	goto	l481
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5245  0006C8  010F               	movlb	15	; () banked
  5246  0006CA  8F01               	bsf	1,7,b	;volatile
  5247  0006CC  D003               	goto	l4502
  5248  0006CE                     l481:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;inc\CANlib.h: 864: else
  5252                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5253  0006CE  010F               	movlb	15	; () banked
  5254  0006D0  9F01               	bcf	1,7,b	;volatile
  5255  0006D2  D000               	goto	l4502
  5256  0006D4                     l4502:
  5257                           
  5258                           ; BSR set to: 15
  5259                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5260  0006D4  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  5261  0006D8  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5262  0006DC  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5263  0006E0  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5264  0006E4  0E16               	movlw	22
  5265  0006E6  D006               	goto	u5590
  5266  0006E8                     u5595:
  5267  0006E8  0100               	movlb	0	; () banked
  5268  0006EA  90D8               	bcf	status,0,c
  5269  0006EC  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5270  0006EE  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5271  0006F0  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5272  0006F2  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  5273  0006F4                     u5590:
  5274  0006F4  2EE8               	decfsz	wreg,f,c
  5275  0006F6  D7F8               	goto	u5595
  5276  0006F8  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5277  0006FC  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5278  000700  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5279  000704  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5283  000708  0100               	movlb	0	; () banked
  5284  00070A  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  5285  00070C  0100               	movlb	0	; () banked
  5286  00070E  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5287  000710  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5288  000712  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5289  000714  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5293  000716  C0CD  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5294  00071A  D000               	goto	l4508
  5295  00071C                     l4508:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;inc\CANlib.h: 870: }
  5299                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5300  00071C  0100               	movlb	0	; () banked
  5301  00071E  05CC               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5302  000720  A4D8               	btfss	status,2,c
  5303  000722  D08B               	goto	l4542
  5304                           
  5305                           ; BSR set to: 0
  5306  000724  0EF7               	movlw	247
  5307  000726  0100               	movlb	0	; () banked
  5308  000728  19C7               	xorwf	CANSetFilter@type& (0+255),w,b
  5309  00072A  A4D8               	btfss	status,2,c
  5310  00072C  D086               	goto	l4542
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;inc\CANlib.h: 873: {
  5314                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5315  00072E  010F               	movlb	15	; () banked
  5316  000730  8705               	bsf	5,3,b	;volatile
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5320  000732  0100               	movlb	0	; () banked
  5321  000734  51C3               	movf	CANSetFilter@filter& (0+255),w,b
  5322  000736  0100               	movlb	0	; () banked
  5323  000738  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5324  00073A  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5325  00073C  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5326  00073E  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5330  000740  C0CD  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5334  000744  0E00               	movlw	0
  5335  000746  0100               	movlb	0	; () banked
  5336  000748  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  5337  00074A  0100               	movlb	0	; () banked
  5338  00074C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5339  00074E  0EFF               	movlw	255
  5340  000750  0100               	movlb	0	; () banked
  5341  000752  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5342  000754  0100               	movlb	0	; () banked
  5343  000756  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5344  000758  0E00               	movlw	0
  5345  00075A  0100               	movlb	0	; () banked
  5346  00075C  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5347  00075E  0100               	movlb	0	; () banked
  5348  000760  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5349  000762  0E00               	movlw	0
  5350  000764  0100               	movlb	0	; () banked
  5351  000766  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5352  000768  0100               	movlb	0	; () banked
  5353  00076A  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5357  00076C  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  5358  000770  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5359  000774  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5360  000778  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5361  00077C  C0C9  F0C8         	movff	??_CANSetFilter+1,??_CANSetFilter
  5362  000780  C0CA  F0C9         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5363  000784  C0CB  F0CA         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5364  000788  0100               	movlb	0	; () banked
  5365  00078A  6BCB               	clrf	(??_CANSetFilter+3)& (0+255),b
  5366  00078C  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5367  000790  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5368  000794  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5369  000798  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5373  00079C  C0CD  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5377  0007A0  0100               	movlb	0	; () banked
  5378  0007A2  A1C5               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5379  0007A4  D003               	goto	l484
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5383  0007A6  010F               	movlb	15	; () banked
  5384  0007A8  8105               	bsf	5,0,b	;volatile
  5385  0007AA  D002               	goto	l485
  5386  0007AC                     l484:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;inc\CANlib.h: 885: else
  5390                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5391  0007AC  010F               	movlb	15	; () banked
  5392  0007AE  9105               	bcf	5,0,b	;volatile
  5393  0007B0                     l485:
  5394                           
  5395                           ; BSR set to: 15
  5396                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5397  0007B0  0100               	movlb	0	; () banked
  5398  0007B2  A3C5               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5399  0007B4  D003               	goto	l486
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5403  0007B6  010F               	movlb	15	; () banked
  5404  0007B8  8305               	bsf	5,1,b	;volatile
  5405  0007BA  D002               	goto	l487
  5406  0007BC                     l486:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;inc\CANlib.h: 890: else
  5410                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5411  0007BC  010F               	movlb	15	; () banked
  5412  0007BE  9305               	bcf	5,1,b	;volatile
  5413  0007C0                     l487:
  5414                           
  5415                           ; BSR set to: 15
  5416                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5417  0007C0  0100               	movlb	0	; () banked
  5418  0007C2  A5C5               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5419  0007C4  D003               	goto	l488
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5423  0007C6  010F               	movlb	15	; () banked
  5424  0007C8  8B05               	bsf	5,5,b	;volatile
  5425  0007CA  D002               	goto	l489
  5426  0007CC                     l488:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;inc\CANlib.h: 895: else
  5430                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5431  0007CC  010F               	movlb	15	; () banked
  5432  0007CE  9B05               	bcf	5,5,b	;volatile
  5433  0007D0                     l489:
  5434                           
  5435                           ; BSR set to: 15
  5436                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5437  0007D0  0100               	movlb	0	; () banked
  5438  0007D2  A7C5               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5439  0007D4  D003               	goto	l490
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5443  0007D6  010F               	movlb	15	; () banked
  5444  0007D8  8D05               	bsf	5,6,b	;volatile
  5445  0007DA  D002               	goto	l491
  5446  0007DC                     l490:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;inc\CANlib.h: 900: else
  5450                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5451  0007DC  010F               	movlb	15	; () banked
  5452  0007DE  9D05               	bcf	5,6,b	;volatile
  5453  0007E0                     l491:
  5454                           
  5455                           ; BSR set to: 15
  5456                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5457  0007E0  0100               	movlb	0	; () banked
  5458  0007E2  A9C5               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5459  0007E4  D003               	goto	l492
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5463  0007E6  010F               	movlb	15	; () banked
  5464  0007E8  8F05               	bsf	5,7,b	;volatile
  5465  0007EA  D003               	goto	l4536
  5466  0007EC                     l492:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;inc\CANlib.h: 905: else
  5470                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5471  0007EC  010F               	movlb	15	; () banked
  5472  0007EE  9F05               	bcf	5,7,b	;volatile
  5473  0007F0  D000               	goto	l4536
  5474  0007F2                     l4536:
  5475                           
  5476                           ; BSR set to: 15
  5477                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5478  0007F2  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  5479  0007F6  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5480  0007FA  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5481  0007FE  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5482  000802  0E16               	movlw	22
  5483  000804  D006               	goto	u5670
  5484  000806                     u5675:
  5485  000806  0100               	movlb	0	; () banked
  5486  000808  90D8               	bcf	status,0,c
  5487  00080A  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5488  00080C  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5489  00080E  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5490  000810  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  5491  000812                     u5670:
  5492  000812  2EE8               	decfsz	wreg,f,c
  5493  000814  D7F8               	goto	u5675
  5494  000816  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5495  00081A  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5496  00081E  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5497  000822  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5501  000826  0100               	movlb	0	; () banked
  5502  000828  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  5503  00082A  0100               	movlb	0	; () banked
  5504  00082C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5505  00082E  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5506  000830  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5507  000832  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5511  000834  C0CD  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5512  000838  D000               	goto	l4542
  5513  00083A                     l4542:
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;inc\CANlib.h: 911: }
  5517                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5518  00083A  0E02               	movlw	2
  5519  00083C  0100               	movlb	0	; () banked
  5520  00083E  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5521  000840  A4D8               	btfss	status,2,c
  5522  000842  D08B               	goto	l4576
  5523                           
  5524                           ; BSR set to: 0
  5525  000844  0EF7               	movlw	247
  5526  000846  0100               	movlb	0	; () banked
  5527  000848  19C7               	xorwf	CANSetFilter@type& (0+255),w,b
  5528  00084A  A4D8               	btfss	status,2,c
  5529  00084C  D086               	goto	l4576
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;inc\CANlib.h: 915: {
  5533                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5534  00084E  010F               	movlb	15	; () banked
  5535  000850  8709               	bsf	9,3,b	;volatile
  5536                           
  5537                           ; BSR set to: 15
  5538                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5539  000852  0100               	movlb	0	; () banked
  5540  000854  51C3               	movf	CANSetFilter@filter& (0+255),w,b
  5541  000856  0100               	movlb	0	; () banked
  5542  000858  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5543  00085A  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5544  00085C  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5545  00085E  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5549  000860  C0CD  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5553  000864  0E00               	movlw	0
  5554  000866  0100               	movlb	0	; () banked
  5555  000868  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  5556  00086A  0100               	movlb	0	; () banked
  5557  00086C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5558  00086E  0EFF               	movlw	255
  5559  000870  0100               	movlb	0	; () banked
  5560  000872  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5561  000874  0100               	movlb	0	; () banked
  5562  000876  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5563  000878  0E00               	movlw	0
  5564  00087A  0100               	movlb	0	; () banked
  5565  00087C  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5566  00087E  0100               	movlb	0	; () banked
  5567  000880  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5568  000882  0E00               	movlw	0
  5569  000884  0100               	movlb	0	; () banked
  5570  000886  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5571  000888  0100               	movlb	0	; () banked
  5572  00088A  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5576  00088C  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  5577  000890  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5578  000894  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5579  000898  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5580  00089C  C0C9  F0C8         	movff	??_CANSetFilter+1,??_CANSetFilter
  5581  0008A0  C0CA  F0C9         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5582  0008A4  C0CB  F0CA         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5583  0008A8  0100               	movlb	0	; () banked
  5584  0008AA  6BCB               	clrf	(??_CANSetFilter+3)& (0+255),b
  5585  0008AC  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5586  0008B0  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5587  0008B4  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5588  0008B8  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5592  0008BC  C0CD  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5596  0008C0  0100               	movlb	0	; () banked
  5597  0008C2  A1C5               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5598  0008C4  D003               	goto	l495
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5602  0008C6  010F               	movlb	15	; () banked
  5603  0008C8  8109               	bsf	9,0,b	;volatile
  5604  0008CA  D002               	goto	l496
  5605  0008CC                     l495:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;inc\CANlib.h: 927: else
  5609                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5610  0008CC  010F               	movlb	15	; () banked
  5611  0008CE  9109               	bcf	9,0,b	;volatile
  5612  0008D0                     l496:
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5616  0008D0  0100               	movlb	0	; () banked
  5617  0008D2  A3C5               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5618  0008D4  D003               	goto	l497
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5622  0008D6  010F               	movlb	15	; () banked
  5623  0008D8  8309               	bsf	9,1,b	;volatile
  5624  0008DA  D002               	goto	l498
  5625  0008DC                     l497:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;inc\CANlib.h: 932: else
  5629                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5630  0008DC  010F               	movlb	15	; () banked
  5631  0008DE  9309               	bcf	9,1,b	;volatile
  5632  0008E0                     l498:
  5633                           
  5634                           ; BSR set to: 15
  5635                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5636  0008E0  0100               	movlb	0	; () banked
  5637  0008E2  A5C5               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5638  0008E4  D003               	goto	l499
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5642  0008E6  010F               	movlb	15	; () banked
  5643  0008E8  8B09               	bsf	9,5,b	;volatile
  5644  0008EA  D002               	goto	l500
  5645  0008EC                     l499:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;inc\CANlib.h: 937: else
  5649                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5650  0008EC  010F               	movlb	15	; () banked
  5651  0008EE  9B09               	bcf	9,5,b	;volatile
  5652  0008F0                     l500:
  5653                           
  5654                           ; BSR set to: 15
  5655                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5656  0008F0  0100               	movlb	0	; () banked
  5657  0008F2  A7C5               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5658  0008F4  D003               	goto	l501
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5662  0008F6  010F               	movlb	15	; () banked
  5663  0008F8  8D09               	bsf	9,6,b	;volatile
  5664  0008FA  D002               	goto	l502
  5665  0008FC                     l501:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;inc\CANlib.h: 942: else
  5669                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5670  0008FC  010F               	movlb	15	; () banked
  5671  0008FE  9D09               	bcf	9,6,b	;volatile
  5672  000900                     l502:
  5673                           
  5674                           ; BSR set to: 15
  5675                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5676  000900  0100               	movlb	0	; () banked
  5677  000902  A9C5               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5678  000904  D003               	goto	l503
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5682  000906  010F               	movlb	15	; () banked
  5683  000908  8F09               	bsf	9,7,b	;volatile
  5684  00090A  D003               	goto	l4570
  5685  00090C                     l503:
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;inc\CANlib.h: 947: else
  5689                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5690  00090C  010F               	movlb	15	; () banked
  5691  00090E  9F09               	bcf	9,7,b	;volatile
  5692  000910  D000               	goto	l4570
  5693  000912                     l4570:
  5694                           
  5695                           ; BSR set to: 15
  5696                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5697  000912  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  5698  000916  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5699  00091A  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5700  00091E  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5701  000922  0E16               	movlw	22
  5702  000924  D006               	goto	u5750
  5703  000926                     u5755:
  5704  000926  0100               	movlb	0	; () banked
  5705  000928  90D8               	bcf	status,0,c
  5706  00092A  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5707  00092C  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5708  00092E  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5709  000930  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  5710  000932                     u5750:
  5711  000932  2EE8               	decfsz	wreg,f,c
  5712  000934  D7F8               	goto	u5755
  5713  000936  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5714  00093A  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5715  00093E  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5716  000942  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5720  000946  0100               	movlb	0	; () banked
  5721  000948  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  5722  00094A  0100               	movlb	0	; () banked
  5723  00094C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5724  00094E  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5725  000950  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5726  000952  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5730  000954  C0CD  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5731  000958  D000               	goto	l4576
  5732  00095A                     l4576:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 953: }
  5736                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5737  00095A  0E03               	movlw	3
  5738  00095C  0100               	movlb	0	; () banked
  5739  00095E  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5740  000960  A4D8               	btfss	status,2,c
  5741  000962  D08B               	goto	l4610
  5742                           
  5743                           ; BSR set to: 0
  5744  000964  0EF7               	movlw	247
  5745  000966  0100               	movlb	0	; () banked
  5746  000968  19C7               	xorwf	CANSetFilter@type& (0+255),w,b
  5747  00096A  A4D8               	btfss	status,2,c
  5748  00096C  D086               	goto	l4610
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;inc\CANlib.h: 956: {
  5752                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5753  00096E  010F               	movlb	15	; () banked
  5754  000970  870D               	bsf	13,3,b	;volatile
  5755                           
  5756                           ; BSR set to: 15
  5757                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5758  000972  0100               	movlb	0	; () banked
  5759  000974  51C3               	movf	CANSetFilter@filter& (0+255),w,b
  5760  000976  0100               	movlb	0	; () banked
  5761  000978  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5762  00097A  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5763  00097C  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5764  00097E  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5768  000980  C0CD  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5772  000984  0E00               	movlw	0
  5773  000986  0100               	movlb	0	; () banked
  5774  000988  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  5775  00098A  0100               	movlb	0	; () banked
  5776  00098C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5777  00098E  0EFF               	movlw	255
  5778  000990  0100               	movlb	0	; () banked
  5779  000992  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5780  000994  0100               	movlb	0	; () banked
  5781  000996  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5782  000998  0E00               	movlw	0
  5783  00099A  0100               	movlb	0	; () banked
  5784  00099C  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5785  00099E  0100               	movlb	0	; () banked
  5786  0009A0  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5787  0009A2  0E00               	movlw	0
  5788  0009A4  0100               	movlb	0	; () banked
  5789  0009A6  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5790  0009A8  0100               	movlb	0	; () banked
  5791  0009AA  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5792                           
  5793                           ; BSR set to: 0
  5794                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5795  0009AC  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  5796  0009B0  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5797  0009B4  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5798  0009B8  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5799  0009BC  C0C9  F0C8         	movff	??_CANSetFilter+1,??_CANSetFilter
  5800  0009C0  C0CA  F0C9         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5801  0009C4  C0CB  F0CA         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5802  0009C8  0100               	movlb	0	; () banked
  5803  0009CA  6BCB               	clrf	(??_CANSetFilter+3)& (0+255),b
  5804  0009CC  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5805  0009D0  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5806  0009D4  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5807  0009D8  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5811  0009DC  C0CD  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5815  0009E0  0100               	movlb	0	; () banked
  5816  0009E2  A1C5               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5817  0009E4  D003               	goto	l506
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5821  0009E6  010F               	movlb	15	; () banked
  5822  0009E8  810D               	bsf	13,0,b	;volatile
  5823  0009EA  D002               	goto	l507
  5824  0009EC                     l506:
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;inc\CANlib.h: 968: else
  5828                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5829  0009EC  010F               	movlb	15	; () banked
  5830  0009EE  910D               	bcf	13,0,b	;volatile
  5831  0009F0                     l507:
  5832                           
  5833                           ; BSR set to: 15
  5834                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5835  0009F0  0100               	movlb	0	; () banked
  5836  0009F2  A3C5               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5837  0009F4  D003               	goto	l508
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5841  0009F6  010F               	movlb	15	; () banked
  5842  0009F8  830D               	bsf	13,1,b	;volatile
  5843  0009FA  D002               	goto	l509
  5844  0009FC                     l508:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;inc\CANlib.h: 973: else
  5848                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5849  0009FC  010F               	movlb	15	; () banked
  5850  0009FE  930D               	bcf	13,1,b	;volatile
  5851  000A00                     l509:
  5852                           
  5853                           ; BSR set to: 15
  5854                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5855  000A00  0100               	movlb	0	; () banked
  5856  000A02  A5C5               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5857  000A04  D003               	goto	l510
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5861  000A06  010F               	movlb	15	; () banked
  5862  000A08  8B0D               	bsf	13,5,b	;volatile
  5863  000A0A  D002               	goto	l511
  5864  000A0C                     l510:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;inc\CANlib.h: 978: else
  5868                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5869  000A0C  010F               	movlb	15	; () banked
  5870  000A0E  9B0D               	bcf	13,5,b	;volatile
  5871  000A10                     l511:
  5872                           
  5873                           ; BSR set to: 15
  5874                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5875  000A10  0100               	movlb	0	; () banked
  5876  000A12  A7C5               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5877  000A14  D003               	goto	l512
  5878                           
  5879                           ; BSR set to: 0
  5880                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5881  000A16  010F               	movlb	15	; () banked
  5882  000A18  8D0D               	bsf	13,6,b	;volatile
  5883  000A1A  D002               	goto	l513
  5884  000A1C                     l512:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;inc\CANlib.h: 983: else
  5888                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  5889  000A1C  010F               	movlb	15	; () banked
  5890  000A1E  9D0D               	bcf	13,6,b	;volatile
  5891  000A20                     l513:
  5892                           
  5893                           ; BSR set to: 15
  5894                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  5895  000A20  0100               	movlb	0	; () banked
  5896  000A22  A9C5               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5897  000A24  D003               	goto	l514
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  5901  000A26  010F               	movlb	15	; () banked
  5902  000A28  8F0D               	bsf	13,7,b	;volatile
  5903  000A2A  D003               	goto	l4604
  5904  000A2C                     l514:
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;inc\CANlib.h: 988: else
  5908                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  5909  000A2C  010F               	movlb	15	; () banked
  5910  000A2E  9F0D               	bcf	13,7,b	;volatile
  5911  000A30  D000               	goto	l4604
  5912  000A32                     l4604:
  5913                           
  5914                           ; BSR set to: 15
  5915                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  5916  000A32  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  5917  000A36  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5918  000A3A  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5919  000A3E  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5920  000A42  0E16               	movlw	22
  5921  000A44  D006               	goto	u5830
  5922  000A46                     u5835:
  5923  000A46  0100               	movlb	0	; () banked
  5924  000A48  90D8               	bcf	status,0,c
  5925  000A4A  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5926  000A4C  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5927  000A4E  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5928  000A50  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  5929  000A52                     u5830:
  5930  000A52  2EE8               	decfsz	wreg,f,c
  5931  000A54  D7F8               	goto	u5835
  5932  000A56  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  5933  000A5A  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5934  000A5E  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5935  000A62  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  5939  000A66  0100               	movlb	0	; () banked
  5940  000A68  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  5941  000A6A  0100               	movlb	0	; () banked
  5942  000A6C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5943  000A6E  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5944  000A70  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5945  000A72  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5946                           
  5947                           ; BSR set to: 0
  5948                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  5949  000A74  C0CD  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5950  000A78  D000               	goto	l4610
  5951  000A7A                     l4610:
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;inc\CANlib.h: 994: }
  5955                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  5956  000A7A  0E04               	movlw	4
  5957  000A7C  0100               	movlb	0	; () banked
  5958  000A7E  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5959  000A80  A4D8               	btfss	status,2,c
  5960  000A82  D08B               	goto	l4644
  5961                           
  5962                           ; BSR set to: 0
  5963  000A84  0EF7               	movlw	247
  5964  000A86  0100               	movlb	0	; () banked
  5965  000A88  19C7               	xorwf	CANSetFilter@type& (0+255),w,b
  5966  000A8A  A4D8               	btfss	status,2,c
  5967  000A8C  D086               	goto	l4644
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;inc\CANlib.h: 997: {
  5971                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  5972  000A8E  010F               	movlb	15	; () banked
  5973  000A90  8711               	bsf	17,3,b	;volatile
  5974                           
  5975                           ; BSR set to: 15
  5976                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  5977  000A92  0100               	movlb	0	; () banked
  5978  000A94  51C3               	movf	CANSetFilter@filter& (0+255),w,b
  5979  000A96  0100               	movlb	0	; () banked
  5980  000A98  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5981  000A9A  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5982  000A9C  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5983  000A9E  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  5987  000AA0  C0CD  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  5988                           
  5989                           ; BSR set to: 0
  5990                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5991  000AA4  0E00               	movlw	0
  5992  000AA6  0100               	movlb	0	; () banked
  5993  000AA8  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  5994  000AAA  0100               	movlb	0	; () banked
  5995  000AAC  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  5996  000AAE  0EFF               	movlw	255
  5997  000AB0  0100               	movlb	0	; () banked
  5998  000AB2  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5999  000AB4  0100               	movlb	0	; () banked
  6000  000AB6  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6001  000AB8  0E00               	movlw	0
  6002  000ABA  0100               	movlb	0	; () banked
  6003  000ABC  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6004  000ABE  0100               	movlb	0	; () banked
  6005  000AC0  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6006  000AC2  0E00               	movlw	0
  6007  000AC4  0100               	movlb	0	; () banked
  6008  000AC6  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6009  000AC8  0100               	movlb	0	; () banked
  6010  000ACA  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6014  000ACC  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  6015  000AD0  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6016  000AD4  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6017  000AD8  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6018  000ADC  C0C9  F0C8         	movff	??_CANSetFilter+1,??_CANSetFilter
  6019  000AE0  C0CA  F0C9         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6020  000AE4  C0CB  F0CA         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6021  000AE8  0100               	movlb	0	; () banked
  6022  000AEA  6BCB               	clrf	(??_CANSetFilter+3)& (0+255),b
  6023  000AEC  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  6024  000AF0  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6025  000AF4  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6026  000AF8  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6030  000AFC  C0CD  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6031                           
  6032                           ; BSR set to: 0
  6033                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6034  000B00  0100               	movlb	0	; () banked
  6035  000B02  A1C5               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6036  000B04  D003               	goto	l517
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6040  000B06  010F               	movlb	15	; () banked
  6041  000B08  8111               	bsf	17,0,b	;volatile
  6042  000B0A  D002               	goto	l518
  6043  000B0C                     l517:
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;inc\CANlib.h: 1009: else
  6047                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6048  000B0C  010F               	movlb	15	; () banked
  6049  000B0E  9111               	bcf	17,0,b	;volatile
  6050  000B10                     l518:
  6051                           
  6052                           ; BSR set to: 15
  6053                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6054  000B10  0100               	movlb	0	; () banked
  6055  000B12  A3C5               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6056  000B14  D003               	goto	l519
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6060  000B16  010F               	movlb	15	; () banked
  6061  000B18  8311               	bsf	17,1,b	;volatile
  6062  000B1A  D002               	goto	l520
  6063  000B1C                     l519:
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;inc\CANlib.h: 1014: else
  6067                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6068  000B1C  010F               	movlb	15	; () banked
  6069  000B1E  9311               	bcf	17,1,b	;volatile
  6070  000B20                     l520:
  6071                           
  6072                           ; BSR set to: 15
  6073                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6074  000B20  0100               	movlb	0	; () banked
  6075  000B22  A5C5               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6076  000B24  D003               	goto	l521
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6080  000B26  010F               	movlb	15	; () banked
  6081  000B28  8B11               	bsf	17,5,b	;volatile
  6082  000B2A  D002               	goto	l522
  6083  000B2C                     l521:
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;inc\CANlib.h: 1019: else
  6087                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6088  000B2C  010F               	movlb	15	; () banked
  6089  000B2E  9B11               	bcf	17,5,b	;volatile
  6090  000B30                     l522:
  6091                           
  6092                           ; BSR set to: 15
  6093                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6094  000B30  0100               	movlb	0	; () banked
  6095  000B32  A7C5               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6096  000B34  D003               	goto	l523
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6100  000B36  010F               	movlb	15	; () banked
  6101  000B38  8D11               	bsf	17,6,b	;volatile
  6102  000B3A  D002               	goto	l524
  6103  000B3C                     l523:
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;inc\CANlib.h: 1024: else
  6107                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6108  000B3C  010F               	movlb	15	; () banked
  6109  000B3E  9D11               	bcf	17,6,b	;volatile
  6110  000B40                     l524:
  6111                           
  6112                           ; BSR set to: 15
  6113                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6114  000B40  0100               	movlb	0	; () banked
  6115  000B42  A9C5               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6116  000B44  D003               	goto	l525
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6120  000B46  010F               	movlb	15	; () banked
  6121  000B48  8F11               	bsf	17,7,b	;volatile
  6122  000B4A  D003               	goto	l4638
  6123  000B4C                     l525:
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;inc\CANlib.h: 1029: else
  6127                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6128  000B4C  010F               	movlb	15	; () banked
  6129  000B4E  9F11               	bcf	17,7,b	;volatile
  6130  000B50  D000               	goto	l4638
  6131  000B52                     l4638:
  6132                           
  6133                           ; BSR set to: 15
  6134                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6135  000B52  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  6136  000B56  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6137  000B5A  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6138  000B5E  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6139  000B62  0E16               	movlw	22
  6140  000B64  D006               	goto	u5910
  6141  000B66                     u5915:
  6142  000B66  0100               	movlb	0	; () banked
  6143  000B68  90D8               	bcf	status,0,c
  6144  000B6A  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6145  000B6C  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6146  000B6E  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6147  000B70  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  6148  000B72                     u5910:
  6149  000B72  2EE8               	decfsz	wreg,f,c
  6150  000B74  D7F8               	goto	u5915
  6151  000B76  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  6152  000B7A  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6153  000B7E  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6154  000B82  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6158  000B86  0100               	movlb	0	; () banked
  6159  000B88  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  6160  000B8A  0100               	movlb	0	; () banked
  6161  000B8C  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  6162  000B8E  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6163  000B90  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6164  000B92  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6168  000B94  C0CD  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6169  000B98  D000               	goto	l4644
  6170  000B9A                     l4644:
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;inc\CANlib.h: 1035: }
  6174                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6175  000B9A  0E05               	movlw	5
  6176  000B9C  0100               	movlb	0	; () banked
  6177  000B9E  19CC               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6178  000BA0  A4D8               	btfss	status,2,c
  6179  000BA2  D08B               	goto	l538
  6180                           
  6181                           ; BSR set to: 0
  6182  000BA4  0EF7               	movlw	247
  6183  000BA6  0100               	movlb	0	; () banked
  6184  000BA8  19C7               	xorwf	CANSetFilter@type& (0+255),w,b
  6185  000BAA  A4D8               	btfss	status,2,c
  6186  000BAC  D086               	goto	l538
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 1038: {
  6190                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6191  000BAE  010F               	movlb	15	; () banked
  6192  000BB0  8715               	bsf	21,3,b	;volatile
  6193                           
  6194                           ; BSR set to: 15
  6195                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6196  000BB2  0100               	movlb	0	; () banked
  6197  000BB4  51C3               	movf	CANSetFilter@filter& (0+255),w,b
  6198  000BB6  0100               	movlb	0	; () banked
  6199  000BB8  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  6200  000BBA  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6201  000BBC  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6202  000BBE  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6206  000BC0  C0CD  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6210  000BC4  0E00               	movlw	0
  6211  000BC6  0100               	movlb	0	; () banked
  6212  000BC8  15C3               	andwf	CANSetFilter@filter& (0+255),w,b
  6213  000BCA  0100               	movlb	0	; () banked
  6214  000BCC  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  6215  000BCE  0EFF               	movlw	255
  6216  000BD0  0100               	movlb	0	; () banked
  6217  000BD2  15C4               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6218  000BD4  0100               	movlb	0	; () banked
  6219  000BD6  6FCE               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6220  000BD8  0E00               	movlw	0
  6221  000BDA  0100               	movlb	0	; () banked
  6222  000BDC  15C5               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6223  000BDE  0100               	movlb	0	; () banked
  6224  000BE0  6FCF               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6225  000BE2  0E00               	movlw	0
  6226  000BE4  0100               	movlb	0	; () banked
  6227  000BE6  15C6               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6228  000BE8  0100               	movlb	0	; () banked
  6229  000BEA  6FD0               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6233  000BEC  C0CD  F0C8         	movff	CANSetFilter@tamp,??_CANSetFilter
  6234  000BF0  C0CE  F0C9         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6235  000BF4  C0CF  F0CA         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6236  000BF8  C0D0  F0CB         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6237  000BFC  C0C9  F0C8         	movff	??_CANSetFilter+1,??_CANSetFilter
  6238  000C00  C0CA  F0C9         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6239  000C04  C0CB  F0CA         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6240  000C08  0100               	movlb	0	; () banked
  6241  000C0A  6BCB               	clrf	(??_CANSetFilter+3)& (0+255),b
  6242  000C0C  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  6243  000C10  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6244  000C14  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6245  000C18  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6249  000C1C  C0CD  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6253  000C20  0100               	movlb	0	; () banked
  6254  000C22  A1C5               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6255  000C24  D003               	goto	l528
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6259  000C26  010F               	movlb	15	; () banked
  6260  000C28  8115               	bsf	21,0,b	;volatile
  6261  000C2A  D002               	goto	l529
  6262  000C2C                     l528:
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;inc\CANlib.h: 1050: else
  6266                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6267  000C2C  010F               	movlb	15	; () banked
  6268  000C2E  9115               	bcf	21,0,b	;volatile
  6269  000C30                     l529:
  6270                           
  6271                           ; BSR set to: 15
  6272                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6273  000C30  0100               	movlb	0	; () banked
  6274  000C32  A3C5               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6275  000C34  D003               	goto	l530
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6279  000C36  010F               	movlb	15	; () banked
  6280  000C38  8315               	bsf	21,1,b	;volatile
  6281  000C3A  D002               	goto	l531
  6282  000C3C                     l530:
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;inc\CANlib.h: 1055: else
  6286                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6287  000C3C  010F               	movlb	15	; () banked
  6288  000C3E  9315               	bcf	21,1,b	;volatile
  6289  000C40                     l531:
  6290                           
  6291                           ; BSR set to: 15
  6292                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6293  000C40  0100               	movlb	0	; () banked
  6294  000C42  A5C5               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6295  000C44  D003               	goto	l532
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6299  000C46  010F               	movlb	15	; () banked
  6300  000C48  8B15               	bsf	21,5,b	;volatile
  6301  000C4A  D002               	goto	l533
  6302  000C4C                     l532:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;inc\CANlib.h: 1060: else
  6306                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6307  000C4C  010F               	movlb	15	; () banked
  6308  000C4E  9B15               	bcf	21,5,b	;volatile
  6309  000C50                     l533:
  6310                           
  6311                           ; BSR set to: 15
  6312                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6313  000C50  0100               	movlb	0	; () banked
  6314  000C52  A7C5               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6315  000C54  D003               	goto	l534
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6319  000C56  010F               	movlb	15	; () banked
  6320  000C58  8D15               	bsf	21,6,b	;volatile
  6321  000C5A  D002               	goto	l535
  6322  000C5C                     l534:
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;inc\CANlib.h: 1065: else
  6326                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6327  000C5C  010F               	movlb	15	; () banked
  6328  000C5E  9D15               	bcf	21,6,b	;volatile
  6329  000C60                     l535:
  6330                           
  6331                           ; BSR set to: 15
  6332                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6333  000C60  0100               	movlb	0	; () banked
  6334  000C62  A9C5               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6335  000C64  D003               	goto	l536
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6339  000C66  010F               	movlb	15	; () banked
  6340  000C68  8F15               	bsf	21,7,b	;volatile
  6341  000C6A  D003               	goto	l4672
  6342  000C6C                     l536:
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;inc\CANlib.h: 1070: else
  6346                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6347  000C6C  010F               	movlb	15	; () banked
  6348  000C6E  9F15               	bcf	21,7,b	;volatile
  6349  000C70  D000               	goto	l4672
  6350  000C72                     l4672:
  6351                           
  6352                           ; BSR set to: 15
  6353                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6354  000C72  C0C3  F0C8         	movff	CANSetFilter@filter,??_CANSetFilter
  6355  000C76  C0C4  F0C9         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6356  000C7A  C0C5  F0CA         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6357  000C7E  C0C6  F0CB         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6358  000C82  0E16               	movlw	22
  6359  000C84  D006               	goto	u5990
  6360  000C86                     u5995:
  6361  000C86  0100               	movlb	0	; () banked
  6362  000C88  90D8               	bcf	status,0,c
  6363  000C8A  33CB               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6364  000C8C  33CA               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6365  000C8E  33C9               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6366  000C90  33C8               	rrcf	??_CANSetFilter& (0+255),f,b
  6367  000C92                     u5990:
  6368  000C92  2EE8               	decfsz	wreg,f,c
  6369  000C94  D7F8               	goto	u5995
  6370  000C96  C0C8  F0CD         	movff	??_CANSetFilter,CANSetFilter@tamp
  6371  000C9A  C0C9  F0CE         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6372  000C9E  C0CA  F0CF         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6373  000CA2  C0CB  F0D0         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6377  000CA6  0100               	movlb	0	; () banked
  6378  000CA8  51CD               	movf	CANSetFilter@tamp& (0+255),w,b
  6379  000CAA  0100               	movlb	0	; () banked
  6380  000CAC  6FCD               	movwf	CANSetFilter@tamp& (0+255),b
  6381  000CAE  6BCE               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6382  000CB0  6BCF               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6383  000CB2  6BD0               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6387  000CB4  C0CD  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6388  000CB8  D000               	goto	l538
  6389  000CBA                     l538:
  6390                           
  6391                           ; BSR set to: 0
  6392  000CBA  0012               	return		;funcret
  6393  000CBC                     __end_of_CANSetFilter:
  6394                           	opt stack 0
  6395                           tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           prodh	equ	0xFF4
  6400                           prodl	equ	0xFF3
  6401                           intcon	equ	0xFF2
  6402                           intcon2	equ	0xFF1
  6403                           intcon3	equ	0xFF0
  6404                           postinc0	equ	0xFEE
  6405                           wreg	equ	0xFE8
  6406                           postdec1	equ	0xFE5
  6407                           fsr1l	equ	0xFE1
  6408                           indf2	equ	0xFDF
  6409                           fsr2h	equ	0xFDA
  6410                           fsr2l	equ	0xFD9
  6411                           status	equ	0xFD8
  6412                           
  6413 ;; *************** function _CANOperationMode *****************
  6414 ;; Defined at:
  6415 ;;		line 206 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  mode            1    wreg     enum E16879
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  mode            1   36[BANK0 ] enum E16879
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6429 ;;      Params:         0       0       0       0
  6430 ;;      Locals:         0       1       0       0
  6431 ;;      Temps:          0       0       0       0
  6432 ;;      Totals:         0       1       0       0
  6433 ;;Total ram usage:        1 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    4
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_CANInitialize
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text9
  6444  002AFA                     __ptext9:
  6445                           	opt stack 0
  6446  002AFA                     _CANOperationMode:
  6447                           	opt stack 24
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;incstack = 0
  6451                           ;CANOperationMode@mode stored from wreg
  6452  002AFA  0100               	movlb	0	; () banked
  6453  002AFC  6FC3               	movwf	CANOperationMode@mode& (0+255),b
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;inc\CANlib.h: 208: CANCON = mode;
  6457  002AFE  C0C3  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6458                           
  6459                           ; BSR set to: 0
  6460                           
  6461                           ;inc\CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
  6462  002B02  D000               	goto	l4268
  6463  002B04                     l4268:
  6464                           
  6465                           ; BSR set to: 0
  6466  002B04  506E               	movf	3950,w,c	;volatile
  6467  002B06  0BE0               	andlw	224
  6468  002B08  0100               	movlb	0	; () banked
  6469  002B0A  19C3               	xorwf	CANOperationMode@mode& (0+255),w,b
  6470  002B0C  A4D8               	btfss	status,2,c
  6471  002B0E  D7FA               	goto	l4268
  6472                           
  6473                           ; BSR set to: 0
  6474                           
  6475                           ; BSR set to: 0
  6476  002B10  0012               	return		;funcret
  6477  002B12                     __end_of_CANOperationMode:
  6478                           	opt stack 0
  6479                           tblptru	equ	0xFF8
  6480                           tblptrh	equ	0xFF7
  6481                           tblptrl	equ	0xFF6
  6482                           tablat	equ	0xFF5
  6483                           prodh	equ	0xFF4
  6484                           prodl	equ	0xFF3
  6485                           intcon	equ	0xFF2
  6486                           intcon2	equ	0xFF1
  6487                           intcon3	equ	0xFF0
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           postdec1	equ	0xFE5
  6491                           fsr1l	equ	0xFE1
  6492                           indf2	equ	0xFDF
  6493                           fsr2h	equ	0xFDA
  6494                           fsr2l	equ	0xFD9
  6495                           status	equ	0xFD8
  6496                           
  6497 ;; *************** function ___lmul *****************
  6498 ;; Defined at:
  6499 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  multiplier      4   36[BANK0 ] unsigned long 
  6502 ;;  multiplicand    4   40[BANK0 ] unsigned long 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  product         4   44[BANK0 ] unsigned long 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  4   36[BANK0 ] unsigned long 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6514 ;;      Params:         0       8       0       0
  6515 ;;      Locals:         0       4       0       0
  6516 ;;      Temps:          0       0       0       0
  6517 ;;      Totals:         0      12       0       0
  6518 ;;Total ram usage:       12 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    4
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_main
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text10
  6529  00294C                     __ptext10:
  6530                           	opt stack 0
  6531  00294C                     ___lmul:
  6532                           	opt stack 26
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;incstack = 0
  6536  00294C  0E00               	movlw	0
  6537  00294E  0100               	movlb	0	; () banked
  6538  002950  6FCB               	movwf	___lmul@product& (0+255),b
  6539  002952  0E00               	movlw	0
  6540  002954  6FCC               	movwf	(___lmul@product+1)& (0+255),b
  6541  002956  0E00               	movlw	0
  6542  002958  6FCD               	movwf	(___lmul@product+2)& (0+255),b
  6543  00295A  0E00               	movlw	0
  6544  00295C  6FCE               	movwf	(___lmul@product+3)& (0+255),b
  6545  00295E  D000               	goto	l5116
  6546  002960                     l5116:
  6547                           
  6548                           ; BSR set to: 0
  6549  002960  0100               	movlb	0	; () banked
  6550  002962  A1C3               	btfss	___lmul@multiplier& (0+255),0,b
  6551  002964  D011               	goto	l5120
  6552                           
  6553                           ; BSR set to: 0
  6554  002966  0100               	movlb	0	; () banked
  6555  002968  51C7               	movf	___lmul@multiplicand& (0+255),w,b
  6556  00296A  0100               	movlb	0	; () banked
  6557  00296C  27CB               	addwf	___lmul@product& (0+255),f,b
  6558  00296E  0100               	movlb	0	; () banked
  6559  002970  51C8               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  6560  002972  0100               	movlb	0	; () banked
  6561  002974  23CC               	addwfc	(___lmul@product+1)& (0+255),f,b
  6562  002976  0100               	movlb	0	; () banked
  6563  002978  51C9               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  6564  00297A  0100               	movlb	0	; () banked
  6565  00297C  23CD               	addwfc	(___lmul@product+2)& (0+255),f,b
  6566  00297E  0100               	movlb	0	; () banked
  6567  002980  51CA               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  6568  002982  0100               	movlb	0	; () banked
  6569  002984  23CE               	addwfc	(___lmul@product+3)& (0+255),f,b
  6570  002986  D000               	goto	l5120
  6571  002988                     l5120:
  6572                           
  6573                           ; BSR set to: 0
  6574  002988  0100               	movlb	0	; () banked
  6575  00298A  90D8               	bcf	status,0,c
  6576  00298C  37C7               	rlcf	___lmul@multiplicand& (0+255),f,b
  6577  00298E  37C8               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  6578  002990  37C9               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  6579  002992  37CA               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  6580                           
  6581                           ; BSR set to: 0
  6582  002994  0100               	movlb	0	; () banked
  6583  002996  90D8               	bcf	status,0,c
  6584  002998  33C6               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  6585  00299A  33C5               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  6586  00299C  33C4               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  6587  00299E  33C3               	rrcf	___lmul@multiplier& (0+255),f,b
  6588  0029A0  0100               	movlb	0	; () banked
  6589  0029A2  51C3               	movf	___lmul@multiplier& (0+255),w,b
  6590  0029A4  0100               	movlb	0	; () banked
  6591  0029A6  11C4               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  6592  0029A8  0100               	movlb	0	; () banked
  6593  0029AA  11C5               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  6594  0029AC  0100               	movlb	0	; () banked
  6595  0029AE  11C6               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  6596  0029B0  A4D8               	btfss	status,2,c
  6597  0029B2  D7D6               	goto	l5116
  6598                           
  6599                           ; BSR set to: 0
  6600  0029B4  C0CB  F0C3         	movff	___lmul@product,?___lmul
  6601  0029B8  C0CC  F0C4         	movff	___lmul@product+1,?___lmul+1
  6602  0029BC  C0CD  F0C5         	movff	___lmul@product+2,?___lmul+2
  6603  0029C0  C0CE  F0C6         	movff	___lmul@product+3,?___lmul+3
  6604                           
  6605                           ; BSR set to: 0
  6606  0029C4  0012               	return		;funcret
  6607  0029C6                     __end_of___lmul:
  6608                           	opt stack 0
  6609                           tblptru	equ	0xFF8
  6610                           tblptrh	equ	0xFF7
  6611                           tblptrl	equ	0xFF6
  6612                           tablat	equ	0xFF5
  6613                           prodh	equ	0xFF4
  6614                           prodl	equ	0xFF3
  6615                           intcon	equ	0xFF2
  6616                           intcon2	equ	0xFF1
  6617                           intcon3	equ	0xFF0
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           postdec1	equ	0xFE5
  6621                           fsr1l	equ	0xFE1
  6622                           indf2	equ	0xFDF
  6623                           fsr2h	equ	0xFDA
  6624                           fsr2l	equ	0xFD9
  6625                           status	equ	0xFD8
  6626                           
  6627 ;; *************** function ___awdiv *****************
  6628 ;; Defined at:
  6629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  dividend        2   36[BANK0 ] int 
  6632 ;;  divisor         2   38[BANK0 ] int 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  quotient        2   42[BANK0 ] int 
  6635 ;;  sign            1   41[BANK0 ] unsigned char 
  6636 ;;  counter         1   40[BANK0 ] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2   36[BANK0 ] int 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6646 ;;      Params:         0       4       0       0
  6647 ;;      Locals:         0       4       0       0
  6648 ;;      Temps:          0       0       0       0
  6649 ;;      Totals:         0       8       0       0
  6650 ;;Total ram usage:        8 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    4
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_main
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text11
  6661  002692                     __ptext11:
  6662                           	opt stack 0
  6663  002692                     ___awdiv:
  6664                           	opt stack 26
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;incstack = 0
  6668  002692  0E00               	movlw	0
  6669  002694  0100               	movlb	0	; () banked
  6670  002696  6FC8               	movwf	___awdiv@sign& (0+255),b
  6671                           
  6672                           ; BSR set to: 0
  6673  002698  0100               	movlb	0	; () banked
  6674  00269A  AFC6               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6675  00269C  D009               	goto	l5176
  6676                           
  6677                           ; BSR set to: 0
  6678  00269E  0100               	movlb	0	; () banked
  6679  0026A0  6DC5               	negf	___awdiv@divisor& (0+255),b
  6680  0026A2  1FC6               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6681  0026A4  B0D8               	btfsc	status,0,c
  6682  0026A6  2BC6               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6683                           
  6684                           ; BSR set to: 0
  6685  0026A8  0E01               	movlw	1
  6686  0026AA  0100               	movlb	0	; () banked
  6687  0026AC  6FC8               	movwf	___awdiv@sign& (0+255),b
  6688  0026AE  D000               	goto	l5176
  6689  0026B0                     l5176:
  6690                           
  6691                           ; BSR set to: 0
  6692  0026B0  0100               	movlb	0	; () banked
  6693  0026B2  AFC4               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6694  0026B4  D009               	goto	l5182
  6695                           
  6696                           ; BSR set to: 0
  6697  0026B6  0100               	movlb	0	; () banked
  6698  0026B8  6DC3               	negf	___awdiv@dividend& (0+255),b
  6699  0026BA  1FC4               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6700  0026BC  B0D8               	btfsc	status,0,c
  6701  0026BE  2BC4               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6702                           
  6703                           ; BSR set to: 0
  6704  0026C0  0E01               	movlw	1
  6705  0026C2  0100               	movlb	0	; () banked
  6706  0026C4  1BC8               	xorwf	___awdiv@sign& (0+255),f,b
  6707  0026C6  D000               	goto	l5182
  6708  0026C8                     l5182:
  6709                           
  6710                           ; BSR set to: 0
  6711  0026C8  0E00               	movlw	0
  6712  0026CA  0100               	movlb	0	; () banked
  6713  0026CC  6FCA               	movwf	(___awdiv@quotient+1)& (0+255),b
  6714  0026CE  0E00               	movlw	0
  6715  0026D0  6FC9               	movwf	___awdiv@quotient& (0+255),b
  6716                           
  6717                           ; BSR set to: 0
  6718  0026D2  0100               	movlb	0	; () banked
  6719  0026D4  51C5               	movf	___awdiv@divisor& (0+255),w,b
  6720  0026D6  0100               	movlb	0	; () banked
  6721  0026D8  11C6               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6722  0026DA  B4D8               	btfsc	status,2,c
  6723  0026DC  D031               	goto	l5204
  6724                           
  6725                           ; BSR set to: 0
  6726  0026DE  0E01               	movlw	1
  6727  0026E0  0100               	movlb	0	; () banked
  6728  0026E2  6FC7               	movwf	___awdiv@counter& (0+255),b
  6729  0026E4  D007               	goto	l5190
  6730  0026E6                     l5188:
  6731                           
  6732                           ; BSR set to: 0
  6733  0026E6  0100               	movlb	0	; () banked
  6734  0026E8  90D8               	bcf	status,0,c
  6735  0026EA  37C5               	rlcf	___awdiv@divisor& (0+255),f,b
  6736  0026EC  37C6               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6737  0026EE  0100               	movlb	0	; () banked
  6738  0026F0  2BC7               	incf	___awdiv@counter& (0+255),f,b
  6739  0026F2  D000               	goto	l5190
  6740  0026F4                     l5190:
  6741                           
  6742                           ; BSR set to: 0
  6743  0026F4  0100               	movlb	0	; () banked
  6744  0026F6  BFC6               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  6745  0026F8  D002               	goto	l5192
  6746  0026FA  D7F5               	goto	l5188
  6747                           
  6748                           ; BSR set to: 0
  6749  0026FC  D000               	goto	l5192
  6750  0026FE                     l5192:
  6751                           
  6752                           ; BSR set to: 0
  6753  0026FE  0100               	movlb	0	; () banked
  6754  002700  90D8               	bcf	status,0,c
  6755  002702  37C9               	rlcf	___awdiv@quotient& (0+255),f,b
  6756  002704  37CA               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6757                           
  6758                           ; BSR set to: 0
  6759  002706  0100               	movlb	0	; () banked
  6760  002708  51C5               	movf	___awdiv@divisor& (0+255),w,b
  6761  00270A  0100               	movlb	0	; () banked
  6762  00270C  5DC3               	subwf	___awdiv@dividend& (0+255),w,b
  6763  00270E  0100               	movlb	0	; () banked
  6764  002710  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6765  002712  0100               	movlb	0	; () banked
  6766  002714  59C4               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6767  002716  A0D8               	btfss	status,0,c
  6768  002718  D00B               	goto	l5200
  6769                           
  6770                           ; BSR set to: 0
  6771  00271A  0100               	movlb	0	; () banked
  6772  00271C  51C5               	movf	___awdiv@divisor& (0+255),w,b
  6773  00271E  0100               	movlb	0	; () banked
  6774  002720  5FC3               	subwf	___awdiv@dividend& (0+255),f,b
  6775  002722  0100               	movlb	0	; () banked
  6776  002724  51C6               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6777  002726  0100               	movlb	0	; () banked
  6778  002728  5BC4               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6779                           
  6780                           ; BSR set to: 0
  6781  00272A  0100               	movlb	0	; () banked
  6782  00272C  81C9               	bsf	___awdiv@quotient& (0+255),0,b
  6783  00272E  D000               	goto	l5200
  6784  002730                     l5200:
  6785                           
  6786                           ; BSR set to: 0
  6787  002730  0100               	movlb	0	; () banked
  6788  002732  90D8               	bcf	status,0,c
  6789  002734  33C6               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6790  002736  33C5               	rrcf	___awdiv@divisor& (0+255),f,b
  6791                           
  6792                           ; BSR set to: 0
  6793  002738  0100               	movlb	0	; () banked
  6794  00273A  2FC7               	decfsz	___awdiv@counter& (0+255),f,b
  6795  00273C  D7E0               	goto	l5192
  6796                           
  6797                           ; BSR set to: 0
  6798  00273E  D000               	goto	l5204
  6799  002740                     l5204:
  6800                           
  6801                           ; BSR set to: 0
  6802  002740  0100               	movlb	0	; () banked
  6803  002742  51C8               	movf	___awdiv@sign& (0+255),w,b
  6804  002744  0100               	movlb	0	; () banked
  6805  002746  B4D8               	btfsc	status,2,c
  6806  002748  D006               	goto	l5208
  6807                           
  6808                           ; BSR set to: 0
  6809  00274A  0100               	movlb	0	; () banked
  6810  00274C  6DC9               	negf	___awdiv@quotient& (0+255),b
  6811  00274E  1FCA               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6812  002750  B0D8               	btfsc	status,0,c
  6813  002752  2BCA               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6814  002754  D000               	goto	l5208
  6815  002756                     l5208:
  6816                           
  6817                           ; BSR set to: 0
  6818  002756  C0C9  F0C3         	movff	___awdiv@quotient,?___awdiv
  6819  00275A  C0CA  F0C4         	movff	___awdiv@quotient+1,?___awdiv+1
  6820  00275E  D000               	goto	l960
  6821  002760                     l960:
  6822                           
  6823                           ; BSR set to: 0
  6824  002760  0012               	return		;funcret
  6825  002762                     __end_of___awdiv:
  6826                           	opt stack 0
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           intcon	equ	0xFF2
  6834                           intcon2	equ	0xFF1
  6835                           intcon3	equ	0xFF0
  6836                           postinc0	equ	0xFEE
  6837                           wreg	equ	0xFE8
  6838                           postdec1	equ	0xFE5
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function ___aldiv *****************
  6846 ;; Defined at:
  6847 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  dividend        4    0[BANK1 ] long 
  6850 ;;  divisor         4    4[BANK1 ] long 
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;  quotient        4   10[BANK1 ] long 
  6853 ;;  sign            1    9[BANK1 ] unsigned char 
  6854 ;;  counter         1    8[BANK1 ] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  4    0[BANK1 ] long 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6864 ;;      Params:         0       0       8       0
  6865 ;;      Locals:         0       0       6       0
  6866 ;;      Temps:          0       0       0       0
  6867 ;;      Totals:         0       0      14       0
  6868 ;;Total ram usage:       14 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    4
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_main
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text12
  6879  002566                     __ptext12:
  6880                           	opt stack 0
  6881  002566                     ___aldiv:
  6882                           	opt stack 26
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;incstack = 0
  6886  002566  0E00               	movlw	0
  6887  002568  0101               	movlb	1	; () banked
  6888  00256A  6F09               	movwf	___aldiv@sign& (0+255),b
  6889                           
  6890                           ; BSR set to: 1
  6891  00256C  0101               	movlb	1	; () banked
  6892  00256E  AF07               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6893  002570  D00D               	goto	l5132
  6894                           
  6895                           ; BSR set to: 1
  6896  002572  0101               	movlb	1	; () banked
  6897  002574  1F07               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6898  002576  1F06               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6899  002578  1F05               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6900  00257A  6D04               	negf	___aldiv@divisor& (0+255),b
  6901  00257C  0E00               	movlw	0
  6902  00257E  2305               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6903  002580  2306               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6904  002582  2307               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6905                           
  6906                           ; BSR set to: 1
  6907  002584  0E01               	movlw	1
  6908  002586  0101               	movlb	1	; () banked
  6909  002588  6F09               	movwf	___aldiv@sign& (0+255),b
  6910  00258A  D000               	goto	l5132
  6911  00258C                     l5132:
  6912                           
  6913                           ; BSR set to: 1
  6914  00258C  0101               	movlb	1	; () banked
  6915  00258E  AF03               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6916  002590  D00D               	goto	l5138
  6917                           
  6918                           ; BSR set to: 1
  6919  002592  0101               	movlb	1	; () banked
  6920  002594  1F03               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6921  002596  1F02               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6922  002598  1F01               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6923  00259A  6D00               	negf	___aldiv@dividend& (0+255),b
  6924  00259C  0E00               	movlw	0
  6925  00259E  2301               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6926  0025A0  2302               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6927  0025A2  2303               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6928                           
  6929                           ; BSR set to: 1
  6930  0025A4  0E01               	movlw	1
  6931  0025A6  0101               	movlb	1	; () banked
  6932  0025A8  1B09               	xorwf	___aldiv@sign& (0+255),f,b
  6933  0025AA  D000               	goto	l5138
  6934  0025AC                     l5138:
  6935                           
  6936                           ; BSR set to: 1
  6937  0025AC  0E00               	movlw	0
  6938  0025AE  0101               	movlb	1	; () banked
  6939  0025B0  6F0A               	movwf	___aldiv@quotient& (0+255),b
  6940  0025B2  0E00               	movlw	0
  6941  0025B4  6F0B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6942  0025B6  0E00               	movlw	0
  6943  0025B8  6F0C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6944  0025BA  0E00               	movlw	0
  6945  0025BC  6F0D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6946                           
  6947                           ; BSR set to: 1
  6948  0025BE  0101               	movlb	1	; () banked
  6949  0025C0  5104               	movf	___aldiv@divisor& (0+255),w,b
  6950  0025C2  0101               	movlb	1	; () banked
  6951  0025C4  1105               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6952  0025C6  0101               	movlb	1	; () banked
  6953  0025C8  1106               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6954  0025CA  0101               	movlb	1	; () banked
  6955  0025CC  1107               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6956  0025CE  B4D8               	btfsc	status,2,c
  6957  0025D0  D047               	goto	l5160
  6958                           
  6959                           ; BSR set to: 1
  6960  0025D2  0E01               	movlw	1
  6961  0025D4  0101               	movlb	1	; () banked
  6962  0025D6  6F08               	movwf	___aldiv@counter& (0+255),b
  6963  0025D8  D009               	goto	l5146
  6964  0025DA                     l5144:
  6965                           
  6966                           ; BSR set to: 1
  6967  0025DA  0101               	movlb	1	; () banked
  6968  0025DC  90D8               	bcf	status,0,c
  6969  0025DE  3704               	rlcf	___aldiv@divisor& (0+255),f,b
  6970  0025E0  3705               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6971  0025E2  3706               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6972  0025E4  3707               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6973  0025E6  0101               	movlb	1	; () banked
  6974  0025E8  2B08               	incf	___aldiv@counter& (0+255),f,b
  6975  0025EA  D000               	goto	l5146
  6976  0025EC                     l5146:
  6977                           
  6978                           ; BSR set to: 1
  6979  0025EC  0101               	movlb	1	; () banked
  6980  0025EE  BF07               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6981  0025F0  D002               	goto	l5148
  6982  0025F2  D7F3               	goto	l5144
  6983                           
  6984                           ; BSR set to: 1
  6985  0025F4  D000               	goto	l5148
  6986  0025F6                     l5148:
  6987                           
  6988                           ; BSR set to: 1
  6989  0025F6  0101               	movlb	1	; () banked
  6990  0025F8  90D8               	bcf	status,0,c
  6991  0025FA  370A               	rlcf	___aldiv@quotient& (0+255),f,b
  6992  0025FC  370B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6993  0025FE  370C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6994  002600  370D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6995                           
  6996                           ; BSR set to: 1
  6997  002602  0101               	movlb	1	; () banked
  6998  002604  5104               	movf	___aldiv@divisor& (0+255),w,b
  6999  002606  0101               	movlb	1	; () banked
  7000  002608  5D00               	subwf	___aldiv@dividend& (0+255),w,b
  7001  00260A  0101               	movlb	1	; () banked
  7002  00260C  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7003  00260E  0101               	movlb	1	; () banked
  7004  002610  5901               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7005  002612  0101               	movlb	1	; () banked
  7006  002614  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7007  002616  0101               	movlb	1	; () banked
  7008  002618  5902               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7009  00261A  0101               	movlb	1	; () banked
  7010  00261C  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7011  00261E  0101               	movlb	1	; () banked
  7012  002620  5903               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7013  002622  A0D8               	btfss	status,0,c
  7014  002624  D013               	goto	l5156
  7015                           
  7016                           ; BSR set to: 1
  7017  002626  0101               	movlb	1	; () banked
  7018  002628  5104               	movf	___aldiv@divisor& (0+255),w,b
  7019  00262A  0101               	movlb	1	; () banked
  7020  00262C  5F00               	subwf	___aldiv@dividend& (0+255),f,b
  7021  00262E  0101               	movlb	1	; () banked
  7022  002630  5105               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7023  002632  0101               	movlb	1	; () banked
  7024  002634  5B01               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7025  002636  0101               	movlb	1	; () banked
  7026  002638  5106               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7027  00263A  0101               	movlb	1	; () banked
  7028  00263C  5B02               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7029  00263E  0101               	movlb	1	; () banked
  7030  002640  5107               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7031  002642  0101               	movlb	1	; () banked
  7032  002644  5B03               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7033                           
  7034                           ; BSR set to: 1
  7035  002646  0101               	movlb	1	; () banked
  7036  002648  810A               	bsf	___aldiv@quotient& (0+255),0,b
  7037  00264A  D000               	goto	l5156
  7038  00264C                     l5156:
  7039                           
  7040                           ; BSR set to: 1
  7041  00264C  0101               	movlb	1	; () banked
  7042  00264E  90D8               	bcf	status,0,c
  7043  002650  3307               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7044  002652  3306               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7045  002654  3305               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7046  002656  3304               	rrcf	___aldiv@divisor& (0+255),f,b
  7047                           
  7048                           ; BSR set to: 1
  7049  002658  0101               	movlb	1	; () banked
  7050  00265A  2F08               	decfsz	___aldiv@counter& (0+255),f,b
  7051  00265C  D7CC               	goto	l5148
  7052                           
  7053                           ; BSR set to: 1
  7054  00265E  D000               	goto	l5160
  7055  002660                     l5160:
  7056                           
  7057                           ; BSR set to: 1
  7058  002660  0101               	movlb	1	; () banked
  7059  002662  5109               	movf	___aldiv@sign& (0+255),w,b
  7060  002664  0101               	movlb	1	; () banked
  7061  002666  B4D8               	btfsc	status,2,c
  7062  002668  D00A               	goto	l5164
  7063                           
  7064                           ; BSR set to: 1
  7065  00266A  0101               	movlb	1	; () banked
  7066  00266C  1F0D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7067  00266E  1F0C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7068  002670  1F0B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7069  002672  6D0A               	negf	___aldiv@quotient& (0+255),b
  7070  002674  0E00               	movlw	0
  7071  002676  230B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7072  002678  230C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7073  00267A  230D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7074  00267C  D000               	goto	l5164
  7075  00267E                     l5164:
  7076                           
  7077                           ; BSR set to: 1
  7078  00267E  C10A  F100         	movff	___aldiv@quotient,?___aldiv
  7079  002682  C10B  F101         	movff	___aldiv@quotient+1,?___aldiv+1
  7080  002686  C10C  F102         	movff	___aldiv@quotient+2,?___aldiv+2
  7081  00268A  C10D  F103         	movff	___aldiv@quotient+3,?___aldiv+3
  7082  00268E  D000               	goto	l836
  7083  002690                     l836:
  7084                           
  7085                           ; BSR set to: 1
  7086  002690  0012               	return		;funcret
  7087  002692                     __end_of___aldiv:
  7088                           	opt stack 0
  7089                           tblptru	equ	0xFF8
  7090                           tblptrh	equ	0xFF7
  7091                           tblptrl	equ	0xFF6
  7092                           tablat	equ	0xFF5
  7093                           prodh	equ	0xFF4
  7094                           prodl	equ	0xFF3
  7095                           intcon	equ	0xFF2
  7096                           intcon2	equ	0xFF1
  7097                           intcon3	equ	0xFF0
  7098                           postinc0	equ	0xFEE
  7099                           wreg	equ	0xFE8
  7100                           postdec1	equ	0xFE5
  7101                           fsr1l	equ	0xFE1
  7102                           indf2	equ	0xFDF
  7103                           fsr2h	equ	0xFDA
  7104                           fsr2l	equ	0xFD9
  7105                           status	equ	0xFD8
  7106                           
  7107 ;; *************** function _CANisTXwarningON *****************
  7108 ;; Defined at:
  7109 ;;		line 1119 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;		None
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      unsigned char 
  7116 ;; Registers used:
  7117 ;;		wreg
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7123 ;;      Params:         0       0       0       0
  7124 ;;      Locals:         0       0       0       0
  7125 ;;      Temps:          0       0       0       0
  7126 ;;      Totals:         0       0       0       0
  7127 ;;Total ram usage:        0 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    4
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_main
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text13
  7138  002B3C                     __ptext13:
  7139                           	opt stack 0
  7140  002B3C                     _CANisTXwarningON:
  7141                           	opt stack 26
  7142                           
  7143                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7144                           
  7145                           ; BSR set to: 1
  7146                           ;incstack = 0
  7147  002B3C  A474               	btfss	3956,2,c	;volatile
  7148  002B3E  D002               	goto	u6460
  7149  002B40  0E01               	movlw	1
  7150  002B42  D002               	goto	l553
  7151  002B44                     u6460:
  7152  002B44  0E00               	movlw	0
  7153  002B46  D000               	goto	l553
  7154  002B48                     l553:
  7155  002B48  0012               	return		;funcret
  7156  002B4A                     __end_of_CANisTXwarningON:
  7157                           	opt stack 0
  7158                           tblptru	equ	0xFF8
  7159                           tblptrh	equ	0xFF7
  7160                           tblptrl	equ	0xFF6
  7161                           tablat	equ	0xFF5
  7162                           prodh	equ	0xFF4
  7163                           prodl	equ	0xFF3
  7164                           intcon	equ	0xFF2
  7165                           intcon2	equ	0xFF1
  7166                           intcon3	equ	0xFF0
  7167                           postinc0	equ	0xFEE
  7168                           wreg	equ	0xFE8
  7169                           postdec1	equ	0xFE5
  7170                           fsr1l	equ	0xFE1
  7171                           indf2	equ	0xFDF
  7172                           fsr2h	equ	0xFDA
  7173                           fsr2l	equ	0xFD9
  7174                           status	equ	0xFD8
  7175                           
  7176 ;; *************** function _CANisRXwarningON *****************
  7177 ;; Defined at:
  7178 ;;		line 1127 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      unsigned char 
  7185 ;; Registers used:
  7186 ;;		wreg
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7192 ;;      Params:         0       0       0       0
  7193 ;;      Locals:         0       0       0       0
  7194 ;;      Temps:          0       0       0       0
  7195 ;;      Totals:         0       0       0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:    4
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_main
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text14
  7207  002B4A                     __ptext14:
  7208                           	opt stack 0
  7209  002B4A                     _CANisRXwarningON:
  7210                           	opt stack 26
  7211                           
  7212                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7213                           
  7214                           ;incstack = 0
  7215  002B4A  A274               	btfss	3956,1,c	;volatile
  7216  002B4C  D002               	goto	u6470
  7217  002B4E  0E01               	movlw	1
  7218  002B50  D002               	goto	l556
  7219  002B52                     u6470:
  7220  002B52  0E00               	movlw	0
  7221  002B54  D000               	goto	l556
  7222  002B56                     l556:
  7223  002B56  0012               	return		;funcret
  7224  002B58                     __end_of_CANisRXwarningON:
  7225                           	opt stack 0
  7226                           tblptru	equ	0xFF8
  7227                           tblptrh	equ	0xFF7
  7228                           tblptrl	equ	0xFF6
  7229                           tablat	equ	0xFF5
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           intcon2	equ	0xFF1
  7234                           intcon3	equ	0xFF0
  7235                           postinc0	equ	0xFEE
  7236                           wreg	equ	0xFE8
  7237                           postdec1	equ	0xFE5
  7238                           fsr1l	equ	0xFE1
  7239                           indf2	equ	0xFDF
  7240                           fsr2h	equ	0xFDA
  7241                           fsr2l	equ	0xFD9
  7242                           status	equ	0xFD8
  7243                           
  7244 ;; *************** function _ISR_Bassa *****************
  7245 ;; Defined at:
  7246 ;;		line 231 in file "ABS_Code.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;		None               void
  7253 ;; Registers used:
  7254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7260 ;;      Params:         0       0       0       0
  7261 ;;      Locals:         0       0       0       0
  7262 ;;      Temps:         18       0       0       0
  7263 ;;      Totals:        18       0       0       0
  7264 ;;Total ram usage:       18 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    3
  7267 ;; This function calls:
  7268 ;;		_CANisRxReady
  7269 ;;		_CANreceiveMessage
  7270 ;;		___lbdiv
  7271 ;; This function is called by:
  7272 ;;		Interrupt level 1
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	intcodelo
  7277  000018                     __pintcodelo:
  7278                           	opt stack 0
  7279  000018                     _ISR_Bassa:
  7280                           	opt stack 24
  7281                           
  7282                           ;incstack = 0
  7283  000018  CFD8 F035          	movff	status,??_ISR_Bassa+1
  7284  00001C  CFE8 F036          	movff	wreg,??_ISR_Bassa+2
  7285  000020  CFE0 F037          	movff	bsr,??_ISR_Bassa+3
  7286  000024  CFFA F038          	movff	pclath,??_ISR_Bassa+4
  7287  000028  CFFB F039          	movff	pclatu,??_ISR_Bassa+5
  7288  00002C  CFE9 F03A          	movff	fsr0l,??_ISR_Bassa+6
  7289  000030  CFEA F03B          	movff	fsr0h,??_ISR_Bassa+7
  7290  000034  CFE1 F03C          	movff	fsr1l,??_ISR_Bassa+8
  7291  000038  CFE2 F03D          	movff	fsr1h,??_ISR_Bassa+9
  7292  00003C  CFD9 F03E          	movff	fsr2l,??_ISR_Bassa+10
  7293  000040  CFDA F03F          	movff	fsr2h,??_ISR_Bassa+11
  7294  000044  CFF3 F040          	movff	prodl,??_ISR_Bassa+12
  7295  000048  CFF4 F041          	movff	prodh,??_ISR_Bassa+13
  7296  00004C  CFF6 F042          	movff	tblptrl,??_ISR_Bassa+14
  7297  000050  CFF7 F043          	movff	tblptrh,??_ISR_Bassa+15
  7298  000054  CFF8 F044          	movff	tblptru,??_ISR_Bassa+16
  7299  000058  CFF5 F045          	movff	tablat,??_ISR_Bassa+17
  7300                           
  7301                           ;ABS_Code.c: 233: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7302  00005C  B0A4               	btfsc	4004,0,c	;volatile
  7303  00005E  D002               	goto	i1l4114
  7304  000060  A2A4               	btfss	4004,1,c	;volatile
  7305  000062  D060               	goto	i1l4150
  7306  000064                     i1l4114:
  7307                           
  7308                           ;ABS_Code.c: 234: if (CANisRxReady()) {
  7309  000064  EC89  F015         	call	_CANisRxReady	;wreg free
  7310  000068  0900               	iorlw	0
  7311  00006A  B4D8               	btfsc	status,2,c
  7312  00006C  D058               	goto	i1l4146
  7313                           
  7314                           ;ABS_Code.c: 235: CANreceiveMessage(&msg);
  7315  00006E  0E78               	movlw	low _msg
  7316  000070  6E28               	movwf	CANreceiveMessage@msg,c
  7317  000072  0E00               	movlw	high _msg
  7318  000074  6E29               	movwf	CANreceiveMessage@msg+1,c
  7319  000076  EC2E  F00A         	call	_CANreceiveMessage	;wreg free
  7320                           
  7321                           ;ABS_Code.c: 236: if (msg.RTR == 1) {
  7322  00007A  0100               	movlb	0	; () banked
  7323  00007C  0586               	decf	(_msg+14)& (0+255),w,b
  7324  00007E  A4D8               	btfss	status,2,c
  7325  000080  D00A               	goto	i1l4122
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;ABS_Code.c: 237: remote_frame_id = msg.identifier;
  7329  000082  C078  F001         	movff	_msg,_remote_frame_id	;volatile
  7330  000086  C079  F002         	movff	_msg+1,_remote_frame_id+1	;volatile
  7331  00008A  C07A  F003         	movff	_msg+2,_remote_frame_id+2	;volatile
  7332  00008E  C07B  F004         	movff	_msg+3,_remote_frame_id+3	;volatile
  7333                           
  7334                           ;ABS_Code.c: 238: remote_frame = 1;
  7335  000092  8047               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7336  000094  D000               	goto	i1l4122
  7337  000096                     i1l4122:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;ABS_Code.c: 239: }
  7341                           ;ABS_Code.c: 240: if (msg.identifier == 0b00000000111) {
  7342  000096  0E07               	movlw	7
  7343  000098  0100               	movlb	0	; () banked
  7344  00009A  1978               	xorwf	_msg& (0+255),w,b
  7345  00009C  0100               	movlb	0	; () banked
  7346  00009E  1179               	iorwf	(_msg+1)& (0+255),w,b
  7347  0000A0  0100               	movlb	0	; () banked
  7348  0000A2  117A               	iorwf	(_msg+2)& (0+255),w,b
  7349  0000A4  0100               	movlb	0	; () banked
  7350  0000A6  117B               	iorwf	(_msg+3)& (0+255),w,b
  7351  0000A8  A4D8               	btfss	status,2,c
  7352  0000AA  D008               	goto	i1l4128
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;ABS_Code.c: 241: if (msg.data[0] >= 90) {
  7356  0000AC  0E59               	movlw	89
  7357  0000AE  0100               	movlb	0	; () banked
  7358  0000B0  657C               	cpfsgt	(_msg+4)& (0+255),b
  7359  0000B2  D002               	goto	i1l700
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;ABS_Code.c: 242: steering_dir = 1;
  7363  0000B4  8247               	bsf	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  7364                           
  7365                           ;ABS_Code.c: 243: } else {
  7366  0000B6  D002               	goto	i1l4128
  7367  0000B8                     i1l700:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;ABS_Code.c: 244: steering_dir = 0;
  7371  0000B8  9247               	bcf	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  7372                           
  7373                           ; BSR set to: 0
  7374  0000BA  D000               	goto	i1l4128
  7375  0000BC                     i1l4128:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;ABS_Code.c: 245: }
  7379                           ;ABS_Code.c: 246: }
  7380                           ;ABS_Code.c: 247: if (msg.identifier == 0b00000000110) {
  7381  0000BC  0E06               	movlw	6
  7382  0000BE  0100               	movlb	0	; () banked
  7383  0000C0  1978               	xorwf	_msg& (0+255),w,b
  7384  0000C2  0100               	movlb	0	; () banked
  7385  0000C4  1179               	iorwf	(_msg+1)& (0+255),w,b
  7386  0000C6  0100               	movlb	0	; () banked
  7387  0000C8  117A               	iorwf	(_msg+2)& (0+255),w,b
  7388  0000CA  0100               	movlb	0	; () banked
  7389  0000CC  117B               	iorwf	(_msg+3)& (0+255),w,b
  7390  0000CE  A4D8               	btfss	status,2,c
  7391  0000D0  D005               	goto	i1l4132
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;ABS_Code.c: 248: brake_signal_CAN = msg.data[0];
  7395  0000D2  C07C  F022         	movff	_msg+4,_brake_signal_CAN	;volatile
  7396                           
  7397                           ;ABS_Code.c: 249: Analogic_Mode = msg.data[1];
  7398  0000D6  C07D  F021         	movff	_msg+5,_Analogic_Mode	;volatile
  7399  0000DA  D000               	goto	i1l4132
  7400  0000DC                     i1l4132:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;ABS_Code.c: 250: }
  7404                           ;ABS_Code.c: 251: if (msg.identifier == 0b00000001111) {
  7405  0000DC  0E0F               	movlw	15
  7406  0000DE  0100               	movlb	0	; () banked
  7407  0000E0  1978               	xorwf	_msg& (0+255),w,b
  7408  0000E2  0100               	movlb	0	; () banked
  7409  0000E4  1179               	iorwf	(_msg+1)& (0+255),w,b
  7410  0000E6  0100               	movlb	0	; () banked
  7411  0000E8  117A               	iorwf	(_msg+2)& (0+255),w,b
  7412  0000EA  0100               	movlb	0	; () banked
  7413  0000EC  117B               	iorwf	(_msg+3)& (0+255),w,b
  7414  0000EE  A4D8               	btfss	status,2,c
  7415  0000F0  D016               	goto	i1l4146
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;ABS_Code.c: 252: distance_set_value = (msg.data[0]) / step;
  7419  0000F2  C025  F028         	movff	_step,___lbdiv@divisor	;volatile
  7420  0000F6  0100               	movlb	0	; () banked
  7421  0000F8  517C               	movf	(_msg+4)& (0+255),w,b
  7422  0000FA  EC0F  F015         	call	___lbdiv
  7423  0000FE  6E34               	movwf	??_ISR_Bassa& (0+255),c
  7424  000100  5034               	movf	??_ISR_Bassa,w,c
  7425  000102  6E1B               	movwf	_distance_set_value,c	;volatile
  7426  000104  6A1C               	clrf	_distance_set_value+1,c	;volatile
  7427                           
  7428                           ;ABS_Code.c: 253: distance_set_counter_1 = 0;
  7429  000106  0E00               	movlw	0
  7430  000108  6E18               	movwf	_distance_set_counter_1+1,c	;volatile
  7431  00010A  0E00               	movlw	0
  7432  00010C  6E17               	movwf	_distance_set_counter_1,c	;volatile
  7433                           
  7434                           ;ABS_Code.c: 254: distance_set_counter_2 = 0;
  7435  00010E  0E00               	movlw	0
  7436  000110  6E1A               	movwf	_distance_set_counter_2+1,c	;volatile
  7437  000112  0E00               	movlw	0
  7438  000114  6E19               	movwf	_distance_set_counter_2,c	;volatile
  7439                           
  7440                           ;ABS_Code.c: 255: distance_set_flag = 1;
  7441  000116  8E46               	bsf	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  7442                           
  7443                           ;ABS_Code.c: 256: distance_reached_flag = 0;
  7444  000118  9C46               	bcf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  7445                           
  7446                           ;ABS_Code.c: 257: PORTAbits.RA1 = 0;
  7447  00011A  9280               	bcf	3968,1,c	;volatile
  7448  00011C  D000               	goto	i1l4146
  7449  00011E                     i1l4146:
  7450                           
  7451                           ;ABS_Code.c: 258: }
  7452                           ;ABS_Code.c: 259: }
  7453                           ;ABS_Code.c: 260: PIR3bits.RXB0IF = 0;
  7454  00011E  90A4               	bcf	4004,0,c	;volatile
  7455                           
  7456                           ;ABS_Code.c: 261: PIR3bits.RXB1IF = 0;
  7457  000120  92A4               	bcf	4004,1,c	;volatile
  7458  000122  D000               	goto	i1l4150
  7459  000124                     i1l4150:
  7460                           
  7461                           ;ABS_Code.c: 262: }
  7462                           ;ABS_Code.c: 265: if (PIR1bits.TMR1IF == 1) {
  7463  000124  A09E               	btfss	3998,0,c	;volatile
  7464  000126  D007               	goto	i1l4158
  7465                           
  7466                           ;ABS_Code.c: 266: TMR1_overflow = 1;
  7467  000128  8446               	bsf	_TMR1_overflow/(0+8),_TMR1_overflow& (0+7),c	;volatile
  7468                           
  7469                           ;ABS_Code.c: 267: TMR1H = 0x00;
  7470  00012A  0E00               	movlw	0
  7471  00012C  6ECF               	movwf	4047,c	;volatile
  7472                           
  7473                           ;ABS_Code.c: 268: TMR1L = 0x00;
  7474  00012E  0E00               	movlw	0
  7475  000130  6ECE               	movwf	4046,c	;volatile
  7476                           
  7477                           ;ABS_Code.c: 269: PIR1bits.TMR1IF = 0;
  7478  000132  909E               	bcf	3998,0,c	;volatile
  7479  000134  D000               	goto	i1l4158
  7480  000136                     i1l4158:
  7481                           
  7482                           ;ABS_Code.c: 270: }
  7483                           ;ABS_Code.c: 273: if (PIR2bits.TMR3IF == 1) {
  7484  000136  A2A1               	btfss	4001,1,c	;volatile
  7485  000138  D007               	goto	i1l706
  7486                           
  7487                           ;ABS_Code.c: 274: TMR3_overflow = 1;
  7488  00013A  8646               	bsf	_TMR3_overflow/(0+8),_TMR3_overflow& (0+7),c	;volatile
  7489                           
  7490                           ;ABS_Code.c: 275: TMR3H = 0x00;
  7491  00013C  0E00               	movlw	0
  7492  00013E  6EB3               	movwf	4019,c	;volatile
  7493                           
  7494                           ;ABS_Code.c: 276: TMR3L = 0x00;
  7495  000140  0E00               	movlw	0
  7496  000142  6EB2               	movwf	4018,c	;volatile
  7497                           
  7498                           ;ABS_Code.c: 277: PIR2bits.TMR3IF = 0;
  7499  000144  92A1               	bcf	4001,1,c	;volatile
  7500  000146  D000               	goto	i1l706
  7501  000148                     i1l706:
  7502  000148  C045  FFF5         	movff	??_ISR_Bassa+17,tablat
  7503  00014C  C044  FFF8         	movff	??_ISR_Bassa+16,tblptru
  7504  000150  C043  FFF7         	movff	??_ISR_Bassa+15,tblptrh
  7505  000154  C042  FFF6         	movff	??_ISR_Bassa+14,tblptrl
  7506  000158  C041  FFF4         	movff	??_ISR_Bassa+13,prodh
  7507  00015C  C040  FFF3         	movff	??_ISR_Bassa+12,prodl
  7508  000160  C03F  FFDA         	movff	??_ISR_Bassa+11,fsr2h
  7509  000164  C03E  FFD9         	movff	??_ISR_Bassa+10,fsr2l
  7510  000168  C03D  FFE2         	movff	??_ISR_Bassa+9,fsr1h
  7511  00016C  C03C  FFE1         	movff	??_ISR_Bassa+8,fsr1l
  7512  000170  C03B  FFEA         	movff	??_ISR_Bassa+7,fsr0h
  7513  000174  C03A  FFE9         	movff	??_ISR_Bassa+6,fsr0l
  7514  000178  C039  FFFB         	movff	??_ISR_Bassa+5,pclatu
  7515  00017C  C038  FFFA         	movff	??_ISR_Bassa+4,pclath
  7516  000180  C037  FFE0         	movff	??_ISR_Bassa+3,bsr
  7517  000184  C036  FFE8         	movff	??_ISR_Bassa+2,wreg
  7518  000188  C035  FFD8         	movff	??_ISR_Bassa+1,status
  7519  00018C  0010               	retfie	
  7520  00018E                     __end_of_ISR_Bassa:
  7521                           	opt stack 0
  7522                           pclatu	equ	0xFFB
  7523                           pclath	equ	0xFFA
  7524                           tblptru	equ	0xFF8
  7525                           tblptrh	equ	0xFF7
  7526                           tblptrl	equ	0xFF6
  7527                           tablat	equ	0xFF5
  7528                           prodh	equ	0xFF4
  7529                           prodl	equ	0xFF3
  7530                           intcon	equ	0xFF2
  7531                           intcon2	equ	0xFF1
  7532                           intcon3	equ	0xFF0
  7533                           postinc0	equ	0xFEE
  7534                           fsr0h	equ	0xFEA
  7535                           fsr0l	equ	0xFE9
  7536                           wreg	equ	0xFE8
  7537                           postdec1	equ	0xFE5
  7538                           fsr1h	equ	0xFE2
  7539                           fsr1l	equ	0xFE1
  7540                           bsr	equ	0xFE0
  7541                           indf2	equ	0xFDF
  7542                           fsr2h	equ	0xFDA
  7543                           fsr2l	equ	0xFD9
  7544                           status	equ	0xFD8
  7545                           
  7546 ;; *************** function ___lbdiv *****************
  7547 ;; Defined at:
  7548 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbdiv.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;  dividend        1    wreg     unsigned char 
  7551 ;;  divisor         1    0[COMRAM] unsigned char 
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;  dividend        1    1[COMRAM] unsigned char 
  7554 ;;  quotient        1    3[COMRAM] unsigned char 
  7555 ;;  counter         1    2[COMRAM] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  1    wreg      unsigned char 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7565 ;;      Params:         1       0       0       0
  7566 ;;      Locals:         3       0       0       0
  7567 ;;      Temps:          0       0       0       0
  7568 ;;      Totals:         4       0       0       0
  7569 ;;Total ram usage:        4 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; Hardware stack levels required when called:    2
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_ISR_Bassa
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text16
  7580  002A1E                     __ptext16:
  7581                           	opt stack 0
  7582  002A1E                     ___lbdiv:
  7583                           	opt stack 24
  7584                           
  7585                           ;incstack = 0
  7586                           ;___lbdiv@dividend stored from wreg
  7587  002A1E  6E29               	movwf	___lbdiv@dividend,c
  7588  002A20  0E00               	movlw	0
  7589  002A22  6E2B               	movwf	___lbdiv@quotient,c
  7590  002A24  5028               	movf	___lbdiv@divisor,w,c
  7591  002A26  B4D8               	btfsc	status,2,c
  7592  002A28  D01A               	goto	i1l3940
  7593  002A2A  0E01               	movlw	1
  7594  002A2C  6E2A               	movwf	___lbdiv@counter,c
  7595  002A2E  D004               	goto	i1l3928
  7596  002A30                     i1l3924:
  7597  002A30  90D8               	bcf	status,0,c
  7598  002A32  3628               	rlcf	___lbdiv@divisor,f,c
  7599  002A34  2A2A               	incf	___lbdiv@counter,f,c
  7600  002A36  D000               	goto	i1l3928
  7601  002A38                     i1l3928:
  7602  002A38  BE28               	btfsc	___lbdiv@divisor,7,c
  7603  002A3A  D002               	goto	i1l3930
  7604  002A3C  D7F9               	goto	i1l3924
  7605  002A3E  D000               	goto	i1l3930
  7606  002A40                     i1l3930:
  7607  002A40  90D8               	bcf	status,0,c
  7608  002A42  362B               	rlcf	___lbdiv@quotient,f,c
  7609  002A44  5028               	movf	___lbdiv@divisor,w,c
  7610  002A46  5C29               	subwf	___lbdiv@dividend,w,c
  7611  002A48  A0D8               	btfss	status,0,c
  7612  002A4A  D004               	goto	i1l3936
  7613  002A4C  5028               	movf	___lbdiv@divisor,w,c
  7614  002A4E  5E29               	subwf	___lbdiv@dividend,f,c
  7615  002A50  802B               	bsf	___lbdiv@quotient,0,c
  7616  002A52  D000               	goto	i1l3936
  7617  002A54                     i1l3936:
  7618  002A54  90D8               	bcf	status,0,c
  7619  002A56  3228               	rrcf	___lbdiv@divisor,f,c
  7620  002A58  2E2A               	decfsz	___lbdiv@counter,f,c
  7621  002A5A  D7F2               	goto	i1l3930
  7622  002A5C  D000               	goto	i1l3940
  7623  002A5E                     i1l3940:
  7624  002A5E  502B               	movf	___lbdiv@quotient,w,c
  7625  002A60  D000               	goto	i1l1203
  7626  002A62                     i1l1203:
  7627  002A62  0012               	return		;funcret
  7628  002A64                     __end_of___lbdiv:
  7629                           	opt stack 0
  7630                           pclatu	equ	0xFFB
  7631                           pclath	equ	0xFFA
  7632                           tblptru	equ	0xFF8
  7633                           tblptrh	equ	0xFF7
  7634                           tblptrl	equ	0xFF6
  7635                           tablat	equ	0xFF5
  7636                           prodh	equ	0xFF4
  7637                           prodl	equ	0xFF3
  7638                           intcon	equ	0xFF2
  7639                           intcon2	equ	0xFF1
  7640                           intcon3	equ	0xFF0
  7641                           postinc0	equ	0xFEE
  7642                           fsr0h	equ	0xFEA
  7643                           fsr0l	equ	0xFE9
  7644                           wreg	equ	0xFE8
  7645                           postdec1	equ	0xFE5
  7646                           fsr1h	equ	0xFE2
  7647                           fsr1l	equ	0xFE1
  7648                           bsr	equ	0xFE0
  7649                           indf2	equ	0xFDF
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function _CANreceiveMessage *****************
  7655 ;; Defined at:
  7656 ;;		line 528 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  msg             2    0[COMRAM] PTR struct .
  7659 ;;		 -> msg(15), 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  tamp            1   11[COMRAM] unsigned char 
  7662 ;;  error           1   10[COMRAM] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7672 ;;      Params:         2       0       0       0
  7673 ;;      Locals:         2       0       0       0
  7674 ;;      Temps:          8       0       0       0
  7675 ;;      Totals:        12       0       0       0
  7676 ;;Total ram usage:       12 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    2
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_ISR_Bassa
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text17
  7687  00145C                     __ptext17:
  7688                           	opt stack 0
  7689  00145C                     _CANreceiveMessage:
  7690                           	opt stack 24
  7691                           
  7692                           ;inc\CANlib.h: 530: BYTE tamp;
  7693                           ;inc\CANlib.h: 531: BYTE error = 0;
  7694                           
  7695                           ;incstack = 0
  7696  00145C  0E00               	movlw	0
  7697  00145E  6E32               	movwf	CANreceiveMessage@error,c
  7698                           
  7699                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7700  001460  AE74               	btfss	3956,7,c	;volatile
  7701  001462  D002               	goto	i1l3544
  7702                           
  7703                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7704  001464  8032               	bsf	CANreceiveMessage@error,0,c
  7705  001466  D000               	goto	i1l3544
  7706  001468                     i1l3544:
  7707                           
  7708                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7709  001468  AC74               	btfss	3956,6,c	;volatile
  7710  00146A  D002               	goto	i1l3548
  7711                           
  7712                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7713  00146C  8232               	bsf	CANreceiveMessage@error,1,c
  7714  00146E  D000               	goto	i1l3548
  7715  001470                     i1l3548:
  7716                           
  7717                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7718  001470  010F               	movlb	15	; () banked
  7719  001472  AF50               	btfss	80,7,b	;volatile
  7720  001474  D149               	goto	i1l420
  7721                           
  7722                           ; BSR set to: 15
  7723                           ;inc\CANlib.h: 541: {
  7724                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7725  001476  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7726  00147A  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7727  00147E  6ADE               	clrf	postinc2,c
  7728  001480  6ADE               	clrf	postinc2,c
  7729  001482  6ADE               	clrf	postinc2,c
  7730  001484  6ADD               	clrf	postdec2,c
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7734  001486  EE20 F004          	lfsr	2,4
  7735  00148A  5028               	movf	CANreceiveMessage@msg,w,c
  7736  00148C  26D9               	addwf	fsr2l,f,c
  7737  00148E  5029               	movf	CANreceiveMessage@msg+1,w,c
  7738  001490  22DA               	addwfc	fsr2h,f,c
  7739  001492  CF56 FFDF          	movff	3926,indf2	;volatile
  7740                           
  7741                           ; BSR set to: 15
  7742                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7743  001496  EE20 F005          	lfsr	2,5
  7744  00149A  5028               	movf	CANreceiveMessage@msg,w,c
  7745  00149C  26D9               	addwf	fsr2l,f,c
  7746  00149E  5029               	movf	CANreceiveMessage@msg+1,w,c
  7747  0014A0  22DA               	addwfc	fsr2h,f,c
  7748  0014A2  CF57 FFDF          	movff	3927,indf2	;volatile
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7752  0014A6  EE20 F006          	lfsr	2,6
  7753  0014AA  5028               	movf	CANreceiveMessage@msg,w,c
  7754  0014AC  26D9               	addwf	fsr2l,f,c
  7755  0014AE  5029               	movf	CANreceiveMessage@msg+1,w,c
  7756  0014B0  22DA               	addwfc	fsr2h,f,c
  7757  0014B2  CF58 FFDF          	movff	3928,indf2	;volatile
  7758                           
  7759                           ; BSR set to: 15
  7760                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7761  0014B6  EE20 F007          	lfsr	2,7
  7762  0014BA  5028               	movf	CANreceiveMessage@msg,w,c
  7763  0014BC  26D9               	addwf	fsr2l,f,c
  7764  0014BE  5029               	movf	CANreceiveMessage@msg+1,w,c
  7765  0014C0  22DA               	addwfc	fsr2h,f,c
  7766  0014C2  CF59 FFDF          	movff	3929,indf2	;volatile
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7770  0014C6  EE20 F008          	lfsr	2,8
  7771  0014CA  5028               	movf	CANreceiveMessage@msg,w,c
  7772  0014CC  26D9               	addwf	fsr2l,f,c
  7773  0014CE  5029               	movf	CANreceiveMessage@msg+1,w,c
  7774  0014D0  22DA               	addwfc	fsr2h,f,c
  7775  0014D2  CF5A FFDF          	movff	3930,indf2	;volatile
  7776                           
  7777                           ; BSR set to: 15
  7778                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7779  0014D6  EE20 F009          	lfsr	2,9
  7780  0014DA  5028               	movf	CANreceiveMessage@msg,w,c
  7781  0014DC  26D9               	addwf	fsr2l,f,c
  7782  0014DE  5029               	movf	CANreceiveMessage@msg+1,w,c
  7783  0014E0  22DA               	addwfc	fsr2h,f,c
  7784  0014E2  CF5B FFDF          	movff	3931,indf2	;volatile
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7788  0014E6  EE20 F00A          	lfsr	2,10
  7789  0014EA  5028               	movf	CANreceiveMessage@msg,w,c
  7790  0014EC  26D9               	addwf	fsr2l,f,c
  7791  0014EE  5029               	movf	CANreceiveMessage@msg+1,w,c
  7792  0014F0  22DA               	addwfc	fsr2h,f,c
  7793  0014F2  CF5C FFDF          	movff	3932,indf2	;volatile
  7794                           
  7795                           ; BSR set to: 15
  7796                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7797  0014F6  EE20 F00B          	lfsr	2,11
  7798  0014FA  5028               	movf	CANreceiveMessage@msg,w,c
  7799  0014FC  26D9               	addwf	fsr2l,f,c
  7800  0014FE  5029               	movf	CANreceiveMessage@msg+1,w,c
  7801  001500  22DA               	addwfc	fsr2h,f,c
  7802  001502  CF5D FFDF          	movff	3933,indf2	;volatile
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7806  001506  EE20 F00E          	lfsr	2,14
  7807  00150A  5028               	movf	CANreceiveMessage@msg,w,c
  7808  00150C  26D9               	addwf	fsr2l,f,c
  7809  00150E  5029               	movf	CANreceiveMessage@msg+1,w,c
  7810  001510  22DA               	addwfc	fsr2h,f,c
  7811  001512  010F               	movlb	15	; () banked
  7812  001514  AD55               	btfss	85,6,b	;volatile
  7813  001516  D002               	goto	i1u398_20
  7814  001518  0E01               	movlw	1
  7815  00151A  D001               	goto	i1u398_26
  7816  00151C                     i1u398_20:
  7817  00151C  0E00               	movlw	0
  7818  00151E                     i1u398_26:
  7819  00151E  6EDF               	movwf	indf2,c
  7820                           
  7821                           ; BSR set to: 15
  7822                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7823  001520  EE20 F00D          	lfsr	2,13
  7824  001524  5028               	movf	CANreceiveMessage@msg,w,c
  7825  001526  26D9               	addwf	fsr2l,f,c
  7826  001528  5029               	movf	CANreceiveMessage@msg+1,w,c
  7827  00152A  22DA               	addwfc	fsr2h,f,c
  7828  00152C  010F               	movlb	15	; () banked
  7829  00152E  5155               	movf	85,w,b	;volatile
  7830  001530  0B0F               	andlw	15
  7831  001532  6EDF               	movwf	indf2,c
  7832                           
  7833                           ; BSR set to: 15
  7834                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7835  001534  EE20 F00C          	lfsr	2,12
  7836  001538  5028               	movf	CANreceiveMessage@msg,w,c
  7837  00153A  26D9               	addwf	fsr2l,f,c
  7838  00153C  5029               	movf	CANreceiveMessage@msg+1,w,c
  7839  00153E  22DA               	addwfc	fsr2h,f,c
  7840  001540  010F               	movlb	15	; () banked
  7841  001542  A752               	btfss	82,3,b	;volatile
  7842  001544  D002               	goto	i1u399_20
  7843  001546  0E01               	movlw	1
  7844  001548  D001               	goto	i1u399_26
  7845  00154A                     i1u399_20:
  7846  00154A  0E00               	movlw	0
  7847  00154C                     i1u399_26:
  7848  00154C  6EDF               	movwf	indf2,c
  7849                           
  7850                           ; BSR set to: 15
  7851                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7852  00154E  010F               	movlb	15	; () banked
  7853  001550  B752               	btfsc	82,3,b	;volatile
  7854  001552  D044               	goto	i1l3582
  7855                           
  7856                           ; BSR set to: 15
  7857                           ;inc\CANlib.h: 559: {
  7858                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7859  001554  CF51 F02A          	movff	3921,??_CANreceiveMessage	;volatile
  7860  001558  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7861  00155A  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7862  00155C  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7863  00155E  0E03               	movlw	3
  7864  001560                     i1u401_25:
  7865  001560  90D8               	bcf	status,0,c
  7866  001562  362A               	rlcf	??_CANreceiveMessage,f,c
  7867  001564  362B               	rlcf	??_CANreceiveMessage+1,f,c
  7868  001566  362C               	rlcf	??_CANreceiveMessage+2,f,c
  7869  001568  362D               	rlcf	??_CANreceiveMessage+3,f,c
  7870  00156A  2EE8               	decfsz	wreg,f,c
  7871  00156C  D7F9               	goto	i1u401_25
  7872  00156E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7873  001572  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7874  001576  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  7875  00157A  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7876  00157E  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7877  001582  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7878                           
  7879                           ; BSR set to: 15
  7880                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7881  001586  010F               	movlb	15	; () banked
  7882  001588  3952               	swapf	82,w,b	;volatile
  7883  00158A  42E8               	rrncf	wreg,f,c
  7884  00158C  0B07               	andlw	7
  7885  00158E  0B07               	andlw	7
  7886  001590  6E33               	movwf	CANreceiveMessage@tamp,c
  7887                           
  7888                           ; BSR set to: 15
  7889                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7890  001592  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7891  001596  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7892  00159A  CFDE F02A          	movff	postinc2,??_CANreceiveMessage
  7893  00159E  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+1
  7894  0015A2  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+2
  7895  0015A6  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+3
  7896  0015AA  5033               	movf	CANreceiveMessage@tamp,w,c
  7897  0015AC  242A               	addwf	??_CANreceiveMessage,w,c
  7898  0015AE  6E2E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7899  0015B0  0E00               	movlw	0
  7900  0015B2  202B               	addwfc	??_CANreceiveMessage+1,w,c
  7901  0015B4  6E2F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7902  0015B6  0E00               	movlw	0
  7903  0015B8  202C               	addwfc	??_CANreceiveMessage+2,w,c
  7904  0015BA  6E30               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7905  0015BC  0E00               	movlw	0
  7906  0015BE  202D               	addwfc	??_CANreceiveMessage+3,w,c
  7907  0015C0  6E31               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7908  0015C2  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7909  0015C6  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7910  0015CA  C02E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7911  0015CE  C02F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7912  0015D2  C030  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7913  0015D6  C031  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7914                           
  7915                           ;inc\CANlib.h: 563: }
  7916  0015DA  D093               	goto	i1l3608
  7917  0015DC                     i1l3582:
  7918                           
  7919                           ; BSR set to: 15
  7920                           ;inc\CANlib.h: 564: else
  7921                           ;inc\CANlib.h: 565: {
  7922                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7923  0015DC  CF54 F02A          	movff	3924,??_CANreceiveMessage	;volatile
  7924  0015E0  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7925  0015E2  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7926  0015E4  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7927  0015E6  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7928  0015EA  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7929  0015EE  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  7930  0015F2  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7931  0015F6  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7932  0015FA  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7933                           
  7934                           ; BSR set to: 15
  7935                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7936  0015FE  CF53 F02A          	movff	3923,??_CANreceiveMessage	;volatile
  7937  001602  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7938  001604  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7939  001606  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7940  001608  C02C  F02D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7941  00160C  C02B  F02C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7942  001610  C02A  F02B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7943  001614  6A2A               	clrf	??_CANreceiveMessage,c
  7944  001616  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7945  00161A  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7946  00161E  502A               	movf	??_CANreceiveMessage,w,c
  7947  001620  26DE               	addwf	postinc2,f,c
  7948  001622  502B               	movf	??_CANreceiveMessage+1,w,c
  7949  001624  22DE               	addwfc	postinc2,f,c
  7950  001626  502C               	movf	??_CANreceiveMessage+2,w,c
  7951  001628  22DE               	addwfc	postinc2,f,c
  7952  00162A  502D               	movf	??_CANreceiveMessage+3,w,c
  7953  00162C  22DE               	addwfc	postinc2,f,c
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7957  00162E  010F               	movlb	15	; () banked
  7958  001630  A152               	btfss	82,0,b	;volatile
  7959  001632  D00D               	goto	i1l3590
  7960                           
  7961                           ; BSR set to: 15
  7962                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7963  001634  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7964  001638  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7965  00163C  0E00               	movlw	0
  7966  00163E  12DE               	iorwf	postinc2,f,c
  7967  001640  0E00               	movlw	0
  7968  001642  12DE               	iorwf	postinc2,f,c
  7969  001644  0E01               	movlw	1
  7970  001646  12DE               	iorwf	postinc2,f,c
  7971  001648  0E00               	movlw	0
  7972  00164A  12DE               	iorwf	postinc2,f,c
  7973  00164C  D000               	goto	i1l3590
  7974  00164E                     i1l3590:
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7978  00164E  010F               	movlb	15	; () banked
  7979  001650  A352               	btfss	82,1,b	;volatile
  7980  001652  D00D               	goto	i1l3594
  7981                           
  7982                           ; BSR set to: 15
  7983                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7984  001654  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7985  001658  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7986  00165C  0E00               	movlw	0
  7987  00165E  12DE               	iorwf	postinc2,f,c
  7988  001660  0E00               	movlw	0
  7989  001662  12DE               	iorwf	postinc2,f,c
  7990  001664  0E02               	movlw	2
  7991  001666  12DE               	iorwf	postinc2,f,c
  7992  001668  0E00               	movlw	0
  7993  00166A  12DE               	iorwf	postinc2,f,c
  7994  00166C  D000               	goto	i1l3594
  7995  00166E                     i1l3594:
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7999  00166E  010F               	movlb	15	; () banked
  8000  001670  AB52               	btfss	82,5,b	;volatile
  8001  001672  D00D               	goto	i1l3598
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8005  001674  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8006  001678  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8007  00167C  0E00               	movlw	0
  8008  00167E  12DE               	iorwf	postinc2,f,c
  8009  001680  0E00               	movlw	0
  8010  001682  12DE               	iorwf	postinc2,f,c
  8011  001684  0E04               	movlw	4
  8012  001686  12DE               	iorwf	postinc2,f,c
  8013  001688  0E00               	movlw	0
  8014  00168A  12DE               	iorwf	postinc2,f,c
  8015  00168C  D000               	goto	i1l3598
  8016  00168E                     i1l3598:
  8017                           
  8018                           ; BSR set to: 15
  8019                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8020  00168E  010F               	movlb	15	; () banked
  8021  001690  AD52               	btfss	82,6,b	;volatile
  8022  001692  D00D               	goto	i1l3602
  8023                           
  8024                           ; BSR set to: 15
  8025                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8026  001694  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8027  001698  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8028  00169C  0E00               	movlw	0
  8029  00169E  12DE               	iorwf	postinc2,f,c
  8030  0016A0  0E00               	movlw	0
  8031  0016A2  12DE               	iorwf	postinc2,f,c
  8032  0016A4  0E08               	movlw	8
  8033  0016A6  12DE               	iorwf	postinc2,f,c
  8034  0016A8  0E00               	movlw	0
  8035  0016AA  12DE               	iorwf	postinc2,f,c
  8036  0016AC  D000               	goto	i1l3602
  8037  0016AE                     i1l3602:
  8038                           
  8039                           ; BSR set to: 15
  8040                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8041  0016AE  010F               	movlb	15	; () banked
  8042  0016B0  AF52               	btfss	82,7,b	;volatile
  8043  0016B2  D00D               	goto	i1l3606
  8044                           
  8045                           ; BSR set to: 15
  8046                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8047  0016B4  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8048  0016B8  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8049  0016BC  0E00               	movlw	0
  8050  0016BE  12DE               	iorwf	postinc2,f,c
  8051  0016C0  0E00               	movlw	0
  8052  0016C2  12DE               	iorwf	postinc2,f,c
  8053  0016C4  0E10               	movlw	16
  8054  0016C6  12DE               	iorwf	postinc2,f,c
  8055  0016C8  0E00               	movlw	0
  8056  0016CA  12DE               	iorwf	postinc2,f,c
  8057  0016CC  D000               	goto	i1l3606
  8058  0016CE                     i1l3606:
  8059                           
  8060                           ; BSR set to: 15
  8061                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8062  0016CE  CF51 F02A          	movff	3921,??_CANreceiveMessage	;volatile
  8063  0016D2  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8064  0016D4  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8065  0016D6  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8066  0016D8  0E15               	movlw	21
  8067  0016DA                     i1u407_25:
  8068  0016DA  90D8               	bcf	status,0,c
  8069  0016DC  362A               	rlcf	??_CANreceiveMessage,f,c
  8070  0016DE  362B               	rlcf	??_CANreceiveMessage+1,f,c
  8071  0016E0  362C               	rlcf	??_CANreceiveMessage+2,f,c
  8072  0016E2  362D               	rlcf	??_CANreceiveMessage+3,f,c
  8073  0016E4  2EE8               	decfsz	wreg,f,c
  8074  0016E6  D7F9               	goto	i1u407_25
  8075  0016E8  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8076  0016EC  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8077  0016F0  502A               	movf	??_CANreceiveMessage,w,c
  8078  0016F2  12DE               	iorwf	postinc2,f,c
  8079  0016F4  502B               	movf	??_CANreceiveMessage+1,w,c
  8080  0016F6  12DE               	iorwf	postinc2,f,c
  8081  0016F8  502C               	movf	??_CANreceiveMessage+2,w,c
  8082  0016FA  12DE               	iorwf	postinc2,f,c
  8083  0016FC  502D               	movf	??_CANreceiveMessage+3,w,c
  8084  0016FE  12DE               	iorwf	postinc2,f,c
  8085  001700  D000               	goto	i1l3608
  8086  001702                     i1l3608:
  8087                           
  8088                           ; BSR set to: 15
  8089                           ;inc\CANlib.h: 581: }
  8090                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8091  001702  010F               	movlb	15	; () banked
  8092  001704  9F50               	bcf	80,7,b	;volatile
  8093                           
  8094                           ; BSR set to: 15
  8095                           ;inc\CANlib.h: 584: return (error);
  8096                           ;	Return value of _CANreceiveMessage is never used
  8097  001706  D140               	goto	i1l428
  8098  001708                     i1l420:
  8099                           
  8100                           ; BSR set to: 15
  8101                           ;inc\CANlib.h: 585: }
  8102                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8103  001708  AE60               	btfss	3936,7,c	;volatile
  8104  00170A  D13E               	goto	i1l428
  8105                           
  8106                           ; BSR set to: 15
  8107                           ;inc\CANlib.h: 588: {
  8108                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8109  00170C  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8110  001710  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8111  001714  6ADE               	clrf	postinc2,c
  8112  001716  6ADE               	clrf	postinc2,c
  8113  001718  6ADE               	clrf	postinc2,c
  8114  00171A  6ADD               	clrf	postdec2,c
  8115                           
  8116                           ; BSR set to: 15
  8117                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8118  00171C  EE20 F004          	lfsr	2,4
  8119  001720  5028               	movf	CANreceiveMessage@msg,w,c
  8120  001722  26D9               	addwf	fsr2l,f,c
  8121  001724  5029               	movf	CANreceiveMessage@msg+1,w,c
  8122  001726  22DA               	addwfc	fsr2h,f,c
  8123  001728  CF66 FFDF          	movff	3942,indf2	;volatile
  8124                           
  8125                           ; BSR set to: 15
  8126                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8127  00172C  EE20 F005          	lfsr	2,5
  8128  001730  5028               	movf	CANreceiveMessage@msg,w,c
  8129  001732  26D9               	addwf	fsr2l,f,c
  8130  001734  5029               	movf	CANreceiveMessage@msg+1,w,c
  8131  001736  22DA               	addwfc	fsr2h,f,c
  8132  001738  CF67 FFDF          	movff	3943,indf2	;volatile
  8133                           
  8134                           ; BSR set to: 15
  8135                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8136  00173C  EE20 F006          	lfsr	2,6
  8137  001740  5028               	movf	CANreceiveMessage@msg,w,c
  8138  001742  26D9               	addwf	fsr2l,f,c
  8139  001744  5029               	movf	CANreceiveMessage@msg+1,w,c
  8140  001746  22DA               	addwfc	fsr2h,f,c
  8141  001748  CF68 FFDF          	movff	3944,indf2	;volatile
  8142                           
  8143                           ; BSR set to: 15
  8144                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8145  00174C  EE20 F007          	lfsr	2,7
  8146  001750  5028               	movf	CANreceiveMessage@msg,w,c
  8147  001752  26D9               	addwf	fsr2l,f,c
  8148  001754  5029               	movf	CANreceiveMessage@msg+1,w,c
  8149  001756  22DA               	addwfc	fsr2h,f,c
  8150  001758  CF69 FFDF          	movff	3945,indf2	;volatile
  8151                           
  8152                           ; BSR set to: 15
  8153                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8154  00175C  EE20 F008          	lfsr	2,8
  8155  001760  5028               	movf	CANreceiveMessage@msg,w,c
  8156  001762  26D9               	addwf	fsr2l,f,c
  8157  001764  5029               	movf	CANreceiveMessage@msg+1,w,c
  8158  001766  22DA               	addwfc	fsr2h,f,c
  8159  001768  CF6A FFDF          	movff	3946,indf2	;volatile
  8160                           
  8161                           ; BSR set to: 15
  8162                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8163  00176C  EE20 F009          	lfsr	2,9
  8164  001770  5028               	movf	CANreceiveMessage@msg,w,c
  8165  001772  26D9               	addwf	fsr2l,f,c
  8166  001774  5029               	movf	CANreceiveMessage@msg+1,w,c
  8167  001776  22DA               	addwfc	fsr2h,f,c
  8168  001778  CF6B FFDF          	movff	3947,indf2	;volatile
  8169                           
  8170                           ; BSR set to: 15
  8171                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8172  00177C  EE20 F00A          	lfsr	2,10
  8173  001780  5028               	movf	CANreceiveMessage@msg,w,c
  8174  001782  26D9               	addwf	fsr2l,f,c
  8175  001784  5029               	movf	CANreceiveMessage@msg+1,w,c
  8176  001786  22DA               	addwfc	fsr2h,f,c
  8177  001788  CF6C FFDF          	movff	3948,indf2	;volatile
  8178                           
  8179                           ; BSR set to: 15
  8180                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8181  00178C  EE20 F00B          	lfsr	2,11
  8182  001790  5028               	movf	CANreceiveMessage@msg,w,c
  8183  001792  26D9               	addwf	fsr2l,f,c
  8184  001794  5029               	movf	CANreceiveMessage@msg+1,w,c
  8185  001796  22DA               	addwfc	fsr2h,f,c
  8186  001798  CF6D FFDF          	movff	3949,indf2	;volatile
  8187                           
  8188                           ; BSR set to: 15
  8189                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8190  00179C  EE20 F00E          	lfsr	2,14
  8191  0017A0  5028               	movf	CANreceiveMessage@msg,w,c
  8192  0017A2  26D9               	addwf	fsr2l,f,c
  8193  0017A4  5029               	movf	CANreceiveMessage@msg+1,w,c
  8194  0017A6  22DA               	addwfc	fsr2h,f,c
  8195  0017A8  AC65               	btfss	3941,6,c	;volatile
  8196  0017AA  D002               	goto	i1u409_20
  8197  0017AC  0E01               	movlw	1
  8198  0017AE  D001               	goto	i1u409_26
  8199  0017B0                     i1u409_20:
  8200  0017B0  0E00               	movlw	0
  8201  0017B2                     i1u409_26:
  8202  0017B2  6EDF               	movwf	indf2,c
  8203                           
  8204                           ; BSR set to: 15
  8205                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8206  0017B4  EE20 F00D          	lfsr	2,13
  8207  0017B8  5028               	movf	CANreceiveMessage@msg,w,c
  8208  0017BA  26D9               	addwf	fsr2l,f,c
  8209  0017BC  5029               	movf	CANreceiveMessage@msg+1,w,c
  8210  0017BE  22DA               	addwfc	fsr2h,f,c
  8211  0017C0  5065               	movf	3941,w,c	;volatile
  8212  0017C2  0B0F               	andlw	15
  8213  0017C4  6EDF               	movwf	indf2,c
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8217  0017C6  EE20 F00C          	lfsr	2,12
  8218  0017CA  5028               	movf	CANreceiveMessage@msg,w,c
  8219  0017CC  26D9               	addwf	fsr2l,f,c
  8220  0017CE  5029               	movf	CANreceiveMessage@msg+1,w,c
  8221  0017D0  22DA               	addwfc	fsr2h,f,c
  8222  0017D2  A662               	btfss	3938,3,c	;volatile
  8223  0017D4  D002               	goto	i1u410_20
  8224  0017D6  0E01               	movlw	1
  8225  0017D8  D001               	goto	i1u410_26
  8226  0017DA                     i1u410_20:
  8227  0017DA  0E00               	movlw	0
  8228  0017DC                     i1u410_26:
  8229  0017DC  6EDF               	movwf	indf2,c
  8230                           
  8231                           ; BSR set to: 15
  8232                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8233  0017DE  B662               	btfsc	3938,3,c	;volatile
  8234  0017E0  D043               	goto	i1l3644
  8235                           
  8236                           ; BSR set to: 15
  8237                           ;inc\CANlib.h: 606: {
  8238                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8239  0017E2  CF61 F02A          	movff	3937,??_CANreceiveMessage	;volatile
  8240  0017E6  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8241  0017E8  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8242  0017EA  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8243  0017EC  0E03               	movlw	3
  8244  0017EE                     i1u412_25:
  8245  0017EE  90D8               	bcf	status,0,c
  8246  0017F0  362A               	rlcf	??_CANreceiveMessage,f,c
  8247  0017F2  362B               	rlcf	??_CANreceiveMessage+1,f,c
  8248  0017F4  362C               	rlcf	??_CANreceiveMessage+2,f,c
  8249  0017F6  362D               	rlcf	??_CANreceiveMessage+3,f,c
  8250  0017F8  2EE8               	decfsz	wreg,f,c
  8251  0017FA  D7F9               	goto	i1u412_25
  8252  0017FC  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8253  001800  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8254  001804  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  8255  001808  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8256  00180C  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8257  001810  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8258                           
  8259                           ; BSR set to: 15
  8260                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8261  001814  3862               	swapf	3938,w,c	;volatile
  8262  001816  42E8               	rrncf	wreg,f,c
  8263  001818  0B07               	andlw	7
  8264  00181A  0B07               	andlw	7
  8265  00181C  6E33               	movwf	CANreceiveMessage@tamp,c
  8266                           
  8267                           ; BSR set to: 15
  8268                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8269  00181E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8270  001822  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8271  001826  CFDE F02A          	movff	postinc2,??_CANreceiveMessage
  8272  00182A  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+1
  8273  00182E  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+2
  8274  001832  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+3
  8275  001836  5033               	movf	CANreceiveMessage@tamp,w,c
  8276  001838  242A               	addwf	??_CANreceiveMessage,w,c
  8277  00183A  6E2E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8278  00183C  0E00               	movlw	0
  8279  00183E  202B               	addwfc	??_CANreceiveMessage+1,w,c
  8280  001840  6E2F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8281  001842  0E00               	movlw	0
  8282  001844  202C               	addwfc	??_CANreceiveMessage+2,w,c
  8283  001846  6E30               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8284  001848  0E00               	movlw	0
  8285  00184A  202D               	addwfc	??_CANreceiveMessage+3,w,c
  8286  00184C  6E31               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8287  00184E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8288  001852  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8289  001856  C02E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8290  00185A  C02F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8291  00185E  C030  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8292  001862  C031  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8293                           
  8294                           ;inc\CANlib.h: 610: }
  8295  001866  D08E               	goto	i1l3670
  8296  001868                     i1l3644:
  8297                           
  8298                           ; BSR set to: 15
  8299                           ;inc\CANlib.h: 611: else
  8300                           ;inc\CANlib.h: 612: {
  8301                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8302  001868  CF64 F02A          	movff	3940,??_CANreceiveMessage	;volatile
  8303  00186C  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8304  00186E  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8305  001870  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8306  001872  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8307  001876  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8308  00187A  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  8309  00187E  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8310  001882  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8311  001886  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8315  00188A  CF63 F02A          	movff	3939,??_CANreceiveMessage	;volatile
  8316  00188E  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8317  001890  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8318  001892  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8319  001894  C02C  F02D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8320  001898  C02B  F02C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8321  00189C  C02A  F02B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8322  0018A0  6A2A               	clrf	??_CANreceiveMessage,c
  8323  0018A2  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8324  0018A6  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8325  0018AA  502A               	movf	??_CANreceiveMessage,w,c
  8326  0018AC  26DE               	addwf	postinc2,f,c
  8327  0018AE  502B               	movf	??_CANreceiveMessage+1,w,c
  8328  0018B0  22DE               	addwfc	postinc2,f,c
  8329  0018B2  502C               	movf	??_CANreceiveMessage+2,w,c
  8330  0018B4  22DE               	addwfc	postinc2,f,c
  8331  0018B6  502D               	movf	??_CANreceiveMessage+3,w,c
  8332  0018B8  22DE               	addwfc	postinc2,f,c
  8333                           
  8334                           ; BSR set to: 15
  8335                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8336  0018BA  A062               	btfss	3938,0,c	;volatile
  8337  0018BC  D00D               	goto	i1l3652
  8338                           
  8339                           ; BSR set to: 15
  8340                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8341  0018BE  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8342  0018C2  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8343  0018C6  0E00               	movlw	0
  8344  0018C8  12DE               	iorwf	postinc2,f,c
  8345  0018CA  0E00               	movlw	0
  8346  0018CC  12DE               	iorwf	postinc2,f,c
  8347  0018CE  0E01               	movlw	1
  8348  0018D0  12DE               	iorwf	postinc2,f,c
  8349  0018D2  0E00               	movlw	0
  8350  0018D4  12DE               	iorwf	postinc2,f,c
  8351  0018D6  D000               	goto	i1l3652
  8352  0018D8                     i1l3652:
  8353                           
  8354                           ; BSR set to: 15
  8355                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8356  0018D8  A262               	btfss	3938,1,c	;volatile
  8357  0018DA  D00D               	goto	i1l3656
  8358                           
  8359                           ; BSR set to: 15
  8360                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8361  0018DC  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8362  0018E0  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8363  0018E4  0E00               	movlw	0
  8364  0018E6  12DE               	iorwf	postinc2,f,c
  8365  0018E8  0E00               	movlw	0
  8366  0018EA  12DE               	iorwf	postinc2,f,c
  8367  0018EC  0E02               	movlw	2
  8368  0018EE  12DE               	iorwf	postinc2,f,c
  8369  0018F0  0E00               	movlw	0
  8370  0018F2  12DE               	iorwf	postinc2,f,c
  8371  0018F4  D000               	goto	i1l3656
  8372  0018F6                     i1l3656:
  8373                           
  8374                           ; BSR set to: 15
  8375                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8376  0018F6  AA62               	btfss	3938,5,c	;volatile
  8377  0018F8  D00D               	goto	i1l3660
  8378                           
  8379                           ; BSR set to: 15
  8380                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8381  0018FA  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8382  0018FE  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8383  001902  0E00               	movlw	0
  8384  001904  12DE               	iorwf	postinc2,f,c
  8385  001906  0E00               	movlw	0
  8386  001908  12DE               	iorwf	postinc2,f,c
  8387  00190A  0E04               	movlw	4
  8388  00190C  12DE               	iorwf	postinc2,f,c
  8389  00190E  0E00               	movlw	0
  8390  001910  12DE               	iorwf	postinc2,f,c
  8391  001912  D000               	goto	i1l3660
  8392  001914                     i1l3660:
  8393                           
  8394                           ; BSR set to: 15
  8395                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8396  001914  AC62               	btfss	3938,6,c	;volatile
  8397  001916  D00D               	goto	i1l3664
  8398                           
  8399                           ; BSR set to: 15
  8400                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8401  001918  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8402  00191C  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8403  001920  0E00               	movlw	0
  8404  001922  12DE               	iorwf	postinc2,f,c
  8405  001924  0E00               	movlw	0
  8406  001926  12DE               	iorwf	postinc2,f,c
  8407  001928  0E08               	movlw	8
  8408  00192A  12DE               	iorwf	postinc2,f,c
  8409  00192C  0E00               	movlw	0
  8410  00192E  12DE               	iorwf	postinc2,f,c
  8411  001930  D000               	goto	i1l3664
  8412  001932                     i1l3664:
  8413                           
  8414                           ; BSR set to: 15
  8415                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8416  001932  AE62               	btfss	3938,7,c	;volatile
  8417  001934  D00D               	goto	i1l3668
  8418                           
  8419                           ; BSR set to: 15
  8420                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8421  001936  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8422  00193A  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8423  00193E  0E00               	movlw	0
  8424  001940  12DE               	iorwf	postinc2,f,c
  8425  001942  0E00               	movlw	0
  8426  001944  12DE               	iorwf	postinc2,f,c
  8427  001946  0E10               	movlw	16
  8428  001948  12DE               	iorwf	postinc2,f,c
  8429  00194A  0E00               	movlw	0
  8430  00194C  12DE               	iorwf	postinc2,f,c
  8431  00194E  D000               	goto	i1l3668
  8432  001950                     i1l3668:
  8433                           
  8434                           ; BSR set to: 15
  8435                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8436  001950  CF61 F02A          	movff	3937,??_CANreceiveMessage	;volatile
  8437  001954  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8438  001956  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8439  001958  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8440  00195A  0E15               	movlw	21
  8441  00195C                     i1u418_25:
  8442  00195C  90D8               	bcf	status,0,c
  8443  00195E  362A               	rlcf	??_CANreceiveMessage,f,c
  8444  001960  362B               	rlcf	??_CANreceiveMessage+1,f,c
  8445  001962  362C               	rlcf	??_CANreceiveMessage+2,f,c
  8446  001964  362D               	rlcf	??_CANreceiveMessage+3,f,c
  8447  001966  2EE8               	decfsz	wreg,f,c
  8448  001968  D7F9               	goto	i1u418_25
  8449  00196A  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8450  00196E  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8451  001972  502A               	movf	??_CANreceiveMessage,w,c
  8452  001974  12DE               	iorwf	postinc2,f,c
  8453  001976  502B               	movf	??_CANreceiveMessage+1,w,c
  8454  001978  12DE               	iorwf	postinc2,f,c
  8455  00197A  502C               	movf	??_CANreceiveMessage+2,w,c
  8456  00197C  12DE               	iorwf	postinc2,f,c
  8457  00197E  502D               	movf	??_CANreceiveMessage+3,w,c
  8458  001980  12DE               	iorwf	postinc2,f,c
  8459  001982  D000               	goto	i1l3670
  8460  001984                     i1l3670:
  8461                           
  8462                           ; BSR set to: 15
  8463                           ;inc\CANlib.h: 629: }
  8464                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8465  001984  9E60               	bcf	3936,7,c	;volatile
  8466                           
  8467                           ; BSR set to: 15
  8468                           ;inc\CANlib.h: 632: return (error);
  8469                           ;	Return value of _CANreceiveMessage is never used
  8470  001986  D000               	goto	i1l428
  8471  001988                     i1l428:
  8472                           
  8473                           ; BSR set to: 15
  8474  001988  0012               	return		;funcret
  8475  00198A                     __end_of_CANreceiveMessage:
  8476                           	opt stack 0
  8477                           pclatu	equ	0xFFB
  8478                           pclath	equ	0xFFA
  8479                           tblptru	equ	0xFF8
  8480                           tblptrh	equ	0xFF7
  8481                           tblptrl	equ	0xFF6
  8482                           tablat	equ	0xFF5
  8483                           prodh	equ	0xFF4
  8484                           prodl	equ	0xFF3
  8485                           intcon	equ	0xFF2
  8486                           intcon2	equ	0xFF1
  8487                           intcon3	equ	0xFF0
  8488                           postinc0	equ	0xFEE
  8489                           fsr0h	equ	0xFEA
  8490                           fsr0l	equ	0xFE9
  8491                           wreg	equ	0xFE8
  8492                           postdec1	equ	0xFE5
  8493                           fsr1h	equ	0xFE2
  8494                           fsr1l	equ	0xFE1
  8495                           bsr	equ	0xFE0
  8496                           indf2	equ	0xFDF
  8497                           postinc2	equ	0xFDE
  8498                           postdec2	equ	0xFDD
  8499                           fsr2h	equ	0xFDA
  8500                           fsr2l	equ	0xFD9
  8501                           status	equ	0xFD8
  8502                           
  8503 ;; *************** function _CANisRxReady *****************
  8504 ;; Defined at:
  8505 ;;		line 1163 in file "../../../Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      unsigned char 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8519 ;;      Params:         0       0       0       0
  8520 ;;      Locals:         1       0       0       0
  8521 ;;      Temps:          0       0       0       0
  8522 ;;      Totals:         1       0       0       0
  8523 ;;Total ram usage:        1 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    2
  8526 ;; This function calls:
  8527 ;;		Nothing
  8528 ;; This function is called by:
  8529 ;;		_ISR_Bassa
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533                           	psect	text18
  8534  002B12                     __ptext18:
  8535                           	opt stack 0
  8536  002B12                     _CANisRxReady:
  8537                           	opt stack 24
  8538                           
  8539                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8540                           
  8541                           ; BSR set to: 15
  8542                           ;incstack = 0
  8543  002B12  0E01               	movlw	1
  8544  002B14  6E28               	movwf	_CANisRxReady$3175,c
  8545  002B16  BE60               	btfsc	3936,7,c	;volatile
  8546  002B18  D005               	goto	i1l571
  8547  002B1A  010F               	movlb	15	; () banked
  8548  002B1C  BF50               	btfsc	80,7,b	;volatile
  8549  002B1E  D002               	goto	i1l571
  8550                           
  8551                           ; BSR set to: 15
  8552  002B20  0E00               	movlw	0
  8553  002B22  6E28               	movwf	_CANisRxReady$3175,c
  8554  002B24                     i1l571:
  8555  002B24  5028               	movf	_CANisRxReady$3175,w,c
  8556  002B26  D000               	goto	i1l572
  8557  002B28                     i1l572:
  8558  002B28  0012               	return		;funcret
  8559  002B2A                     __end_of_CANisRxReady:
  8560                           	opt stack 0
  8561                           pclatu	equ	0xFFB
  8562                           pclath	equ	0xFFA
  8563                           tblptru	equ	0xFF8
  8564                           tblptrh	equ	0xFF7
  8565                           tblptrl	equ	0xFF6
  8566                           tablat	equ	0xFF5
  8567                           prodh	equ	0xFF4
  8568                           prodl	equ	0xFF3
  8569                           intcon	equ	0xFF2
  8570                           intcon2	equ	0xFF1
  8571                           intcon3	equ	0xFF0
  8572                           postinc0	equ	0xFEE
  8573                           fsr0h	equ	0xFEA
  8574                           fsr0l	equ	0xFE9
  8575                           wreg	equ	0xFE8
  8576                           postdec1	equ	0xFE5
  8577                           fsr1h	equ	0xFE2
  8578                           fsr1l	equ	0xFE1
  8579                           bsr	equ	0xFE0
  8580                           indf2	equ	0xFDF
  8581                           postinc2	equ	0xFDE
  8582                           postdec2	equ	0xFDD
  8583                           fsr2h	equ	0xFDA
  8584                           fsr2l	equ	0xFD9
  8585                           status	equ	0xFD8
  8586                           
  8587 ;; *************** function _ISR_Alta *****************
  8588 ;; Defined at:
  8589 ;;		line 149 in file "ABS_Code.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;		None
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;		None               void
  8596 ;; Registers used:
  8597 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8603 ;;      Params:         0       0       0       0
  8604 ;;      Locals:         0       0       0       0
  8605 ;;      Temps:          0      22       0       0
  8606 ;;      Totals:         0      22       0       0
  8607 ;;Total ram usage:       22 bytes
  8608 ;; Hardware stack levels used:    1
  8609 ;; Hardware stack levels required when called:    1
  8610 ;; This function calls:
  8611 ;;		_WriteTimer0
  8612 ;;		___lwdiv
  8613 ;;		i2___awdiv
  8614 ;;		i2___wmul
  8615 ;; This function is called by:
  8616 ;;		Interrupt level 2
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	intcode
  8621  000008                     __pintcode:
  8622                           	opt stack 0
  8623  000008                     _ISR_Alta:
  8624                           	opt stack 24
  8625                           
  8626                           ;incstack = 0
  8627  000008  CFFA F0B5          	movff	pclath,??_ISR_Alta+8
  8628  00000C  CFFB F0B6          	movff	pclatu,??_ISR_Alta+9
  8629  000010  CFE9 F0B7          	movff	fsr0l,??_ISR_Alta+10
  8630  000014  ED9A  F00E         	call	int_func,f	;refresh shadow registers
  8631                           pclatu	equ	0xFFB
  8632                           pclath	equ	0xFFA
  8633                           tblptru	equ	0xFF8
  8634                           tblptrh	equ	0xFF7
  8635                           tblptrl	equ	0xFF6
  8636                           tablat	equ	0xFF5
  8637                           prodh	equ	0xFF4
  8638                           prodl	equ	0xFF3
  8639                           intcon	equ	0xFF2
  8640                           intcon2	equ	0xFF1
  8641                           intcon3	equ	0xFF0
  8642                           postinc0	equ	0xFEE
  8643                           fsr0h	equ	0xFEA
  8644                           fsr0l	equ	0xFE9
  8645                           wreg	equ	0xFE8
  8646                           postdec1	equ	0xFE5
  8647                           fsr1h	equ	0xFE2
  8648                           fsr1l	equ	0xFE1
  8649                           bsr	equ	0xFE0
  8650                           indf2	equ	0xFDF
  8651                           postinc2	equ	0xFDE
  8652                           postdec2	equ	0xFDD
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657                           	psect	intcode_body
  8658  001D34                     __pintcode_body:
  8659                           	opt stack 24
  8660  001D34                     int_func:
  8661                           	opt stack 24
  8662  001D34  0006               	pop		; remove dummy address from shadow register refresh
  8663  001D36  CFEA F0B8          	movff	fsr0h,??_ISR_Alta+11
  8664  001D3A  CFE1 F0B9          	movff	fsr1l,??_ISR_Alta+12
  8665  001D3E  CFE2 F0BA          	movff	fsr1h,??_ISR_Alta+13
  8666  001D42  CFD9 F0BB          	movff	fsr2l,??_ISR_Alta+14
  8667  001D46  CFDA F0BC          	movff	fsr2h,??_ISR_Alta+15
  8668  001D4A  CFF3 F0BD          	movff	prodl,??_ISR_Alta+16
  8669  001D4E  CFF4 F0BE          	movff	prodh,??_ISR_Alta+17
  8670  001D52  CFF6 F0BF          	movff	tblptrl,??_ISR_Alta+18
  8671  001D56  CFF7 F0C0          	movff	tblptrh,??_ISR_Alta+19
  8672  001D5A  CFF8 F0C1          	movff	tblptru,??_ISR_Alta+20
  8673  001D5E  CFF5 F0C2          	movff	tablat,??_ISR_Alta+21
  8674                           
  8675                           ;ABS_Code.c: 151: if (INTCONbits.TMR0IF == 1) {
  8676  001D62  A4F2               	btfss	intcon,2,c	;volatile
  8677  001D64  D0AD               	goto	i2l5308
  8678                           
  8679                           ;ABS_Code.c: 152: PORTCbits.RC0 = ~PORTCbits.RC0;
  8680  001D66  7082               	btg	3970,0,c	;volatile
  8681                           
  8682                           ;ABS_Code.c: 153: if (PORTCbits.RC0 == 1) {
  8683  001D68  A082               	btfss	3970,0,c	;volatile
  8684  001D6A  D0A1               	goto	i2l5304
  8685                           
  8686                           ;ABS_Code.c: 154: timer_on = (((1400 * brake_value_degree) / 180) + 800)*2;
  8687  001D6C  0E40               	movlw	64
  8688  001D6E  0100               	movlb	0	; () banked
  8689  001D70  6FAD               	movwf	??_ISR_Alta& (0+255),b
  8690  001D72  0E06               	movlw	6
  8691  001D74  0100               	movlb	0	; () banked
  8692  001D76  6FAE               	movwf	(??_ISR_Alta+1)& (0+255),b
  8693  001D78  C027  F09F         	movff	_brake_value_degree,i2___wmul@multiplier	;volatile
  8694  001D7C  0100               	movlb	0	; () banked
  8695  001D7E  6BA0               	clrf	(i2___wmul@multiplier+1)& (0+255),b
  8696  001D80  0E05               	movlw	5
  8697  001D82  0100               	movlb	0	; () banked
  8698  001D84  6FA2               	movwf	(i2___wmul@multiplicand+1)& (0+255),b
  8699  001D86  0E78               	movlw	120
  8700  001D88  6FA1               	movwf	i2___wmul@multiplicand& (0+255),b
  8701  001D8A  EC4E  F015         	call	i2___wmul	;wreg free
  8702  001D8E  C09F  F0A5         	movff	?i2___wmul,i2___awdiv@dividend
  8703  001D92  C0A0  F0A6         	movff	?i2___wmul+1,i2___awdiv@dividend+1
  8704  001D96  0E00               	movlw	0
  8705  001D98  0100               	movlb	0	; () banked
  8706  001D9A  6FA8               	movwf	(i2___awdiv@divisor+1)& (0+255),b
  8707  001D9C  0EB4               	movlw	180
  8708  001D9E  6FA7               	movwf	i2___awdiv@divisor& (0+255),b
  8709  001DA0  ECB1  F013         	call	i2___awdiv	;wreg free
  8710  001DA4  90D8               	bcf	status,0,c
  8711  001DA6  0100               	movlb	0	; () banked
  8712  001DA8  37A5               	rlcf	?i2___awdiv& (0+255),f,b
  8713  001DAA  0100               	movlb	0	; () banked
  8714  001DAC  37A6               	rlcf	(?i2___awdiv+1)& (0+255),f,b
  8715  001DAE  0100               	movlb	0	; () banked
  8716  001DB0  51AD               	movf	??_ISR_Alta& (0+255),w,b
  8717  001DB2  0100               	movlb	0	; () banked
  8718  001DB4  27A5               	addwf	?i2___awdiv& (0+255),f,b
  8719  001DB6  0100               	movlb	0	; () banked
  8720  001DB8  51AE               	movf	(??_ISR_Alta+1)& (0+255),w,b
  8721  001DBA  0100               	movlb	0	; () banked
  8722  001DBC  23A6               	addwfc	(?i2___awdiv+1)& (0+255),f,b
  8723  001DBE  0100               	movlb	0	; () banked
  8724  001DC0  C0A5  F005         	movff	?i2___awdiv,_timer_on	;volatile
  8725  001DC4  0100               	movlb	0	; () banked
  8726  001DC6  C0A6  F006         	movff	?i2___awdiv+1,_timer_on+1	;volatile
  8727  001DCA  0E00               	movlw	0
  8728  001DCC  BE06               	btfsc	_timer_on+1,7,c	;volatile
  8729  001DCE  0EFF               	movlw	-1
  8730  001DD0  6E07               	movwf	_timer_on+2,c	;volatile
  8731  001DD2  6E08               	movwf	_timer_on+3,c	;volatile
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;ABS_Code.c: 155: timer_off = 65536 - (40000 - timer_on);
  8735  001DD4  C005  F0AD         	movff	_timer_on,??_ISR_Alta	;volatile
  8736  001DD8  C006  F0AE         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8737  001DDC  C007  F0AF         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8738  001DE0  C008  F0B0         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8739  001DE4  0100               	movlb	0	; () banked
  8740  001DE6  1FAD               	comf	??_ISR_Alta& (0+255),f,b
  8741  001DE8  1FAE               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8742  001DEA  1FAF               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8743  001DEC  1FB0               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8744  001DEE  2BAD               	incf	??_ISR_Alta& (0+255),f,b
  8745  001DF0  0E00               	movlw	0
  8746  001DF2  23AE               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8747  001DF4  23AF               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8748  001DF6  23B0               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8749  001DF8  0E40               	movlw	64
  8750  001DFA  0100               	movlb	0	; () banked
  8751  001DFC  25AD               	addwf	??_ISR_Alta& (0+255),w,b
  8752  001DFE  0100               	movlb	0	; () banked
  8753  001E00  6FB1               	movwf	(??_ISR_Alta+4)& (0+255),b
  8754  001E02  0E9C               	movlw	156
  8755  001E04  0100               	movlb	0	; () banked
  8756  001E06  21AE               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8757  001E08  0100               	movlb	0	; () banked
  8758  001E0A  6FB2               	movwf	(??_ISR_Alta+5)& (0+255),b
  8759  001E0C  0E00               	movlw	0
  8760  001E0E  0100               	movlb	0	; () banked
  8761  001E10  21AF               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8762  001E12  0100               	movlb	0	; () banked
  8763  001E14  6FB3               	movwf	(??_ISR_Alta+6)& (0+255),b
  8764  001E16  0E00               	movlw	0
  8765  001E18  0100               	movlb	0	; () banked
  8766  001E1A  21B0               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8767  001E1C  0100               	movlb	0	; () banked
  8768  001E1E  6FB4               	movwf	(??_ISR_Alta+7)& (0+255),b
  8769  001E20  0100               	movlb	0	; () banked
  8770  001E22  1FB1               	comf	(??_ISR_Alta+4)& (0+255),f,b
  8771  001E24  1FB2               	comf	(??_ISR_Alta+5)& (0+255),f,b
  8772  001E26  1FB3               	comf	(??_ISR_Alta+6)& (0+255),f,b
  8773  001E28  1FB4               	comf	(??_ISR_Alta+7)& (0+255),f,b
  8774  001E2A  2BB1               	incf	(??_ISR_Alta+4)& (0+255),f,b
  8775  001E2C  0E00               	movlw	0
  8776  001E2E  23B2               	addwfc	(??_ISR_Alta+5)& (0+255),f,b
  8777  001E30  23B3               	addwfc	(??_ISR_Alta+6)& (0+255),f,b
  8778  001E32  23B4               	addwfc	(??_ISR_Alta+7)& (0+255),f,b
  8779  001E34  0E00               	movlw	0
  8780  001E36  0100               	movlb	0	; () banked
  8781  001E38  25B1               	addwf	(??_ISR_Alta+4)& (0+255),w,b
  8782  001E3A  0100               	movlb	0	; () banked
  8783  001E3C  6F74               	movwf	_timer_off& (0+255),b	;volatile
  8784  001E3E  0E00               	movlw	0
  8785  001E40  0100               	movlb	0	; () banked
  8786  001E42  21B2               	addwfc	(??_ISR_Alta+5)& (0+255),w,b
  8787  001E44  0100               	movlb	0	; () banked
  8788  001E46  6F75               	movwf	(_timer_off+1)& (0+255),b	;volatile
  8789  001E48  0E01               	movlw	1
  8790  001E4A  0100               	movlb	0	; () banked
  8791  001E4C  21B3               	addwfc	(??_ISR_Alta+6)& (0+255),w,b
  8792  001E4E  0100               	movlb	0	; () banked
  8793  001E50  6F76               	movwf	(_timer_off+2)& (0+255),b	;volatile
  8794  001E52  0E00               	movlw	0
  8795  001E54  0100               	movlb	0	; () banked
  8796  001E56  21B4               	addwfc	(??_ISR_Alta+7)& (0+255),w,b
  8797  001E58  0100               	movlb	0	; () banked
  8798  001E5A  6F77               	movwf	(_timer_off+3)& (0+255),b	;volatile
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;ABS_Code.c: 156: timer_on = 65536 - timer_on;
  8802  001E5C  C005  F0AD         	movff	_timer_on,??_ISR_Alta	;volatile
  8803  001E60  C006  F0AE         	movff	_timer_on+1,??_ISR_Alta+1	;volatile
  8804  001E64  C007  F0AF         	movff	_timer_on+2,??_ISR_Alta+2	;volatile
  8805  001E68  C008  F0B0         	movff	_timer_on+3,??_ISR_Alta+3	;volatile
  8806  001E6C  0100               	movlb	0	; () banked
  8807  001E6E  1FAD               	comf	??_ISR_Alta& (0+255),f,b
  8808  001E70  1FAE               	comf	(??_ISR_Alta+1)& (0+255),f,b
  8809  001E72  1FAF               	comf	(??_ISR_Alta+2)& (0+255),f,b
  8810  001E74  1FB0               	comf	(??_ISR_Alta+3)& (0+255),f,b
  8811  001E76  2BAD               	incf	??_ISR_Alta& (0+255),f,b
  8812  001E78  0E00               	movlw	0
  8813  001E7A  23AE               	addwfc	(??_ISR_Alta+1)& (0+255),f,b
  8814  001E7C  23AF               	addwfc	(??_ISR_Alta+2)& (0+255),f,b
  8815  001E7E  23B0               	addwfc	(??_ISR_Alta+3)& (0+255),f,b
  8816  001E80  0E00               	movlw	0
  8817  001E82  0100               	movlb	0	; () banked
  8818  001E84  25AD               	addwf	??_ISR_Alta& (0+255),w,b
  8819  001E86  6E05               	movwf	_timer_on,c	;volatile
  8820  001E88  0E00               	movlw	0
  8821  001E8A  0100               	movlb	0	; () banked
  8822  001E8C  21AE               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8823  001E8E  6E06               	movwf	_timer_on+1,c	;volatile
  8824  001E90  0E01               	movlw	1
  8825  001E92  0100               	movlb	0	; () banked
  8826  001E94  21AF               	addwfc	(??_ISR_Alta+2)& (0+255),w,b
  8827  001E96  6E07               	movwf	_timer_on+2,c	;volatile
  8828  001E98  0E00               	movlw	0
  8829  001E9A  0100               	movlb	0	; () banked
  8830  001E9C  21B0               	addwfc	(??_ISR_Alta+3)& (0+255),w,b
  8831  001E9E  6E08               	movwf	_timer_on+3,c	;volatile
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;ABS_Code.c: 157: WriteTimer0(timer_on);
  8835  001EA0  C005  F09F         	movff	_timer_on,WriteTimer0@timer0	;volatile
  8836  001EA4  C006  F0A0         	movff	_timer_on+1,WriteTimer0@timer0+1	;volatile
  8837  001EA8  EC95  F015         	call	_WriteTimer0	;wreg free
  8838                           
  8839                           ;ABS_Code.c: 158: } else {
  8840  001EAC  D007               	goto	i2l5306
  8841  001EAE                     i2l5304:
  8842                           
  8843                           ;ABS_Code.c: 159: WriteTimer0(timer_off);
  8844  001EAE  C074  F09F         	movff	_timer_off,WriteTimer0@timer0	;volatile
  8845  001EB2  C075  F0A0         	movff	_timer_off+1,WriteTimer0@timer0+1	;volatile
  8846  001EB6  EC95  F015         	call	_WriteTimer0	;wreg free
  8847  001EBA  D000               	goto	i2l5306
  8848  001EBC                     i2l5306:
  8849                           
  8850                           ;ABS_Code.c: 160: }
  8851                           ;ABS_Code.c: 161: INTCONbits.TMR0IF = 0;
  8852  001EBC  94F2               	bcf	intcon,2,c	;volatile
  8853  001EBE  D000               	goto	i2l5308
  8854  001EC0                     i2l5308:
  8855                           
  8856                           ;ABS_Code.c: 162: }
  8857                           ;ABS_Code.c: 165: if (INTCONbits.INT0IF == 1) {
  8858  001EC0  A2F2               	btfss	intcon,1,c	;volatile
  8859  001EC2  D04C               	goto	i2l677
  8860                           
  8861                           ;ABS_Code.c: 166: if (x == 0) {
  8862  001EC4  B447               	btfsc	_x/(0+8),_x& (0+7),c	;volatile
  8863  001EC6  D006               	goto	i2l5316
  8864                           
  8865                           ;ABS_Code.c: 167: TMR1H = 0x00;
  8866  001EC8  0E00               	movlw	0
  8867  001ECA  6ECF               	movwf	4047,c	;volatile
  8868                           
  8869                           ;ABS_Code.c: 168: TMR1L = 0x00;
  8870  001ECC  0E00               	movlw	0
  8871  001ECE  6ECE               	movwf	4046,c	;volatile
  8872                           
  8873                           ;ABS_Code.c: 169: x = 1;
  8874  001ED0  8447               	bsf	_x/(0+8),_x& (0+7),c	;volatile
  8875                           
  8876                           ;ABS_Code.c: 170: } else {
  8877  001ED2  D043               	goto	i2l679
  8878  001ED4                     i2l5316:
  8879                           
  8880                           ;ABS_Code.c: 171: gap_time_1 = (TMR1H << 8) + TMR1L;
  8881  001ED4  50CF               	movf	4047,w,c	;volatile
  8882  001ED6  0100               	movlb	0	; () banked
  8883  001ED8  6FAE               	movwf	(??_ISR_Alta+1)& (0+255),b
  8884  001EDA  6BAD               	clrf	??_ISR_Alta& (0+255),b
  8885  001EDC  50CE               	movf	4046,w,c	;volatile
  8886  001EDE  0100               	movlb	0	; () banked
  8887  001EE0  25AD               	addwf	??_ISR_Alta& (0+255),w,b
  8888  001EE2  6E1D               	movwf	_gap_time_1,c	;volatile
  8889  001EE4  0E00               	movlw	0
  8890  001EE6  0100               	movlb	0	; () banked
  8891  001EE8  21AE               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  8892  001EEA  6E1E               	movwf	_gap_time_1+1,c	;volatile
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;ABS_Code.c: 172: gap_time_1 = gap_time_1 / 500;
  8896  001EEC  C01D  F09F         	movff	_gap_time_1,___lwdiv@dividend	;volatile
  8897  001EF0  C01E  F0A0         	movff	_gap_time_1+1,___lwdiv@dividend+1	;volatile
  8898  001EF4  0E01               	movlw	1
  8899  001EF6  0100               	movlb	0	; () banked
  8900  001EF8  6FA2               	movwf	(___lwdiv@divisor+1)& (0+255),b
  8901  001EFA  0EF4               	movlw	244
  8902  001EFC  6FA1               	movwf	___lwdiv@divisor& (0+255),b
  8903  001EFE  EC65  F014         	call	___lwdiv	;wreg free
  8904  001F02  C09F  F01D         	movff	?___lwdiv,_gap_time_1	;volatile
  8905  001F06  C0A0  F01E         	movff	?___lwdiv+1,_gap_time_1+1	;volatile
  8906                           
  8907                           ;ABS_Code.c: 173: ENC1_measure = 1;
  8908  001F0A  8046               	bsf	_ENC1_measure/(0+8),_ENC1_measure& (0+7),c	;volatile
  8909                           
  8910                           ;ABS_Code.c: 174: TMR1H = 0x00;
  8911  001F0C  0E00               	movlw	0
  8912  001F0E  6ECF               	movwf	4047,c	;volatile
  8913                           
  8914                           ;ABS_Code.c: 175: TMR1L = 0x00;
  8915  001F10  0E00               	movlw	0
  8916  001F12  6ECE               	movwf	4046,c	;volatile
  8917                           
  8918                           ;ABS_Code.c: 176: if (count_flag == 1) {
  8919  001F14  AA46               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  8920  001F16  D008               	goto	i2l5330
  8921                           
  8922                           ;ABS_Code.c: 177: int_counter_1++;
  8923  001F18  0E01               	movlw	1
  8924  001F1A  0100               	movlb	0	; () banked
  8925  001F1C  276C               	addwf	_int_counter_1& (0+255),f,b	;volatile
  8926  001F1E  0E00               	movlw	0
  8927  001F20  236D               	addwfc	(_int_counter_1+1)& (0+255),f,b	;volatile
  8928  001F22  236E               	addwfc	(_int_counter_1+2)& (0+255),f,b	;volatile
  8929  001F24  236F               	addwfc	(_int_counter_1+3)& (0+255),f,b	;volatile
  8930  001F26  D000               	goto	i2l5330
  8931  001F28                     i2l5330:
  8932                           
  8933                           ;ABS_Code.c: 178: }
  8934                           ;ABS_Code.c: 179: if (distance_set_flag == 1) {
  8935  001F28  AE46               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  8936  001F2A  D017               	goto	i2l679
  8937                           
  8938                           ;ABS_Code.c: 180: distance_set_counter_1++;
  8939  001F2C  4A17               	infsnz	_distance_set_counter_1,f,c	;volatile
  8940  001F2E  2A18               	incf	_distance_set_counter_1+1,f,c	;volatile
  8941                           
  8942                           ;ABS_Code.c: 181: if ((steering_dir == 1)&&(distance_set_counter_1 > distance_set_value)
      +                          ) {
  8943  001F30  A247               	btfss	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  8944  001F32  D008               	goto	i2l682
  8945  001F34  5017               	movf	_distance_set_counter_1,w,c	;volatile
  8946  001F36  5C1B               	subwf	_distance_set_value,w,c	;volatile
  8947  001F38  5018               	movf	_distance_set_counter_1+1,w,c	;volatile
  8948  001F3A  581C               	subwfb	_distance_set_value+1,w,c	;volatile
  8949  001F3C  B0D8               	btfsc	status,0,c
  8950  001F3E  D002               	goto	i2l682
  8951                           
  8952                           ;ABS_Code.c: 182: distance_reached_flag = 1;
  8953  001F40  8C46               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  8954                           
  8955                           ;ABS_Code.c: 183: PORTAbits.RA1 = 1;
  8956  001F42  8280               	bsf	3968,1,c	;volatile
  8957  001F44                     i2l682:
  8958                           
  8959                           ;ABS_Code.c: 184: }
  8960                           ;ABS_Code.c: 185: if ((steering_dir == 0)&&(distance_set_counter_2 > distance_set_value)
      +                          ) {
  8961  001F44  B247               	btfsc	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  8962  001F46  D009               	goto	i2l679
  8963  001F48  5019               	movf	_distance_set_counter_2,w,c	;volatile
  8964  001F4A  5C1B               	subwf	_distance_set_value,w,c	;volatile
  8965  001F4C  501A               	movf	_distance_set_counter_2+1,w,c	;volatile
  8966  001F4E  581C               	subwfb	_distance_set_value+1,w,c	;volatile
  8967  001F50  B0D8               	btfsc	status,0,c
  8968  001F52  D003               	goto	i2l679
  8969                           
  8970                           ;ABS_Code.c: 186: distance_reached_flag = 1;
  8971  001F54  8C46               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  8972                           
  8973                           ;ABS_Code.c: 187: PORTAbits.RA1 = 1;
  8974  001F56  8280               	bsf	3968,1,c	;volatile
  8975  001F58  D000               	goto	i2l679
  8976  001F5A                     i2l679:
  8977                           
  8978                           ;ABS_Code.c: 188: }
  8979                           ;ABS_Code.c: 189: }
  8980                           ;ABS_Code.c: 190: }
  8981                           ;ABS_Code.c: 191: INTCONbits.INT0IF = 0;
  8982  001F5A  92F2               	bcf	intcon,1,c	;volatile
  8983  001F5C                     i2l677:
  8984                           
  8985                           ;ABS_Code.c: 192: }
  8986                           ;ABS_Code.c: 195: if (INTCON3bits.INT1IF == 1) {
  8987  001F5C  A0F0               	btfss	intcon3,0,c	;volatile
  8988  001F5E  D04D               	goto	i2l691
  8989                           
  8990                           ;ABS_Code.c: 196: if (y == 0) {
  8991  001F60  B647               	btfsc	_y/(0+8),_y& (0+7),c	;volatile
  8992  001F62  D006               	goto	i2l5350
  8993                           
  8994                           ;ABS_Code.c: 197: TMR3H = 0x00;
  8995  001F64  0E00               	movlw	0
  8996  001F66  6EB3               	movwf	4019,c	;volatile
  8997                           
  8998                           ;ABS_Code.c: 198: TMR3L = 0x00;
  8999  001F68  0E00               	movlw	0
  9000  001F6A  6EB2               	movwf	4018,c	;volatile
  9001                           
  9002                           ;ABS_Code.c: 199: y = 1;
  9003  001F6C  8647               	bsf	_y/(0+8),_y& (0+7),c	;volatile
  9004                           
  9005                           ;ABS_Code.c: 200: } else {
  9006  001F6E  D043               	goto	i2l686
  9007  001F70                     i2l5350:
  9008                           
  9009                           ;ABS_Code.c: 201: gap_time_2 = (TMR3H << 8) + TMR3L;
  9010  001F70  50B3               	movf	4019,w,c	;volatile
  9011  001F72  0100               	movlb	0	; () banked
  9012  001F74  6FAE               	movwf	(??_ISR_Alta+1)& (0+255),b
  9013  001F76  6BAD               	clrf	??_ISR_Alta& (0+255),b
  9014  001F78  50B2               	movf	4018,w,c	;volatile
  9015  001F7A  0100               	movlb	0	; () banked
  9016  001F7C  25AD               	addwf	??_ISR_Alta& (0+255),w,b
  9017  001F7E  6E1F               	movwf	_gap_time_2,c	;volatile
  9018  001F80  0E00               	movlw	0
  9019  001F82  0100               	movlb	0	; () banked
  9020  001F84  21AE               	addwfc	(??_ISR_Alta+1)& (0+255),w,b
  9021  001F86  6E20               	movwf	_gap_time_2+1,c	;volatile
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;ABS_Code.c: 202: gap_time_2 = gap_time_2 / 500;
  9025  001F88  C01F  F09F         	movff	_gap_time_2,___lwdiv@dividend	;volatile
  9026  001F8C  C020  F0A0         	movff	_gap_time_2+1,___lwdiv@dividend+1	;volatile
  9027  001F90  0E01               	movlw	1
  9028  001F92  0100               	movlb	0	; () banked
  9029  001F94  6FA2               	movwf	(___lwdiv@divisor+1)& (0+255),b
  9030  001F96  0EF4               	movlw	244
  9031  001F98  6FA1               	movwf	___lwdiv@divisor& (0+255),b
  9032  001F9A  EC65  F014         	call	___lwdiv	;wreg free
  9033  001F9E  C09F  F01F         	movff	?___lwdiv,_gap_time_2	;volatile
  9034  001FA2  C0A0  F020         	movff	?___lwdiv+1,_gap_time_2+1	;volatile
  9035                           
  9036                           ;ABS_Code.c: 203: ENC2_measure = 1;
  9037  001FA6  8246               	bsf	_ENC2_measure/(0+8),_ENC2_measure& (0+7),c	;volatile
  9038                           
  9039                           ;ABS_Code.c: 204: TMR3H = 0x00;
  9040  001FA8  0E00               	movlw	0
  9041  001FAA  6EB3               	movwf	4019,c	;volatile
  9042                           
  9043                           ;ABS_Code.c: 205: TMR3L = 0x00;
  9044  001FAC  0E00               	movlw	0
  9045  001FAE  6EB2               	movwf	4018,c	;volatile
  9046                           
  9047                           ;ABS_Code.c: 206: if (count_flag == 1) {
  9048  001FB0  AA46               	btfss	_count_flag/(0+8),_count_flag& (0+7),c	;volatile
  9049  001FB2  D008               	goto	i2l5364
  9050                           
  9051                           ;ABS_Code.c: 207: int_counter_2++;
  9052  001FB4  0E01               	movlw	1
  9053  001FB6  0100               	movlb	0	; () banked
  9054  001FB8  2770               	addwf	_int_counter_2& (0+255),f,b	;volatile
  9055  001FBA  0E00               	movlw	0
  9056  001FBC  2371               	addwfc	(_int_counter_2+1)& (0+255),f,b	;volatile
  9057  001FBE  2372               	addwfc	(_int_counter_2+2)& (0+255),f,b	;volatile
  9058  001FC0  2373               	addwfc	(_int_counter_2+3)& (0+255),f,b	;volatile
  9059  001FC2  D000               	goto	i2l5364
  9060  001FC4                     i2l5364:
  9061                           
  9062                           ;ABS_Code.c: 208: }
  9063                           ;ABS_Code.c: 209: if (distance_set_flag == 1) {
  9064  001FC4  AE46               	btfss	_distance_set_flag/(0+8),_distance_set_flag& (0+7),c	;volatile
  9065  001FC6  D017               	goto	i2l686
  9066                           
  9067                           ;ABS_Code.c: 210: distance_set_counter_2++;
  9068  001FC8  4A19               	infsnz	_distance_set_counter_2,f,c	;volatile
  9069  001FCA  2A1A               	incf	_distance_set_counter_2+1,f,c	;volatile
  9070                           
  9071                           ;ABS_Code.c: 211: if ((steering_dir == 1)&&(distance_set_counter_1 > distance_set_value)
      +                          ) {
  9072  001FCC  A247               	btfss	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9073  001FCE  D008               	goto	i2l689
  9074  001FD0  5017               	movf	_distance_set_counter_1,w,c	;volatile
  9075  001FD2  5C1B               	subwf	_distance_set_value,w,c	;volatile
  9076  001FD4  5018               	movf	_distance_set_counter_1+1,w,c	;volatile
  9077  001FD6  581C               	subwfb	_distance_set_value+1,w,c	;volatile
  9078  001FD8  B0D8               	btfsc	status,0,c
  9079  001FDA  D002               	goto	i2l689
  9080                           
  9081                           ;ABS_Code.c: 212: distance_reached_flag = 1;
  9082  001FDC  8C46               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9083                           
  9084                           ;ABS_Code.c: 213: PORTAbits.RA1 = 1;
  9085  001FDE  8280               	bsf	3968,1,c	;volatile
  9086  001FE0                     i2l689:
  9087                           
  9088                           ;ABS_Code.c: 214: }
  9089                           ;ABS_Code.c: 215: if ((steering_dir == 0)&&(distance_set_counter_2 > distance_set_value)
      +                          ) {
  9090  001FE0  B247               	btfsc	_steering_dir/(0+8),_steering_dir& (0+7),c	;volatile
  9091  001FE2  D009               	goto	i2l686
  9092  001FE4  5019               	movf	_distance_set_counter_2,w,c	;volatile
  9093  001FE6  5C1B               	subwf	_distance_set_value,w,c	;volatile
  9094  001FE8  501A               	movf	_distance_set_counter_2+1,w,c	;volatile
  9095  001FEA  581C               	subwfb	_distance_set_value+1,w,c	;volatile
  9096  001FEC  B0D8               	btfsc	status,0,c
  9097  001FEE  D003               	goto	i2l686
  9098                           
  9099                           ;ABS_Code.c: 216: distance_reached_flag = 1;
  9100  001FF0  8C46               	bsf	_distance_reached_flag/(0+8),_distance_reached_flag& (0+7),c	;volatile
  9101                           
  9102                           ;ABS_Code.c: 217: PORTAbits.RA1 = 1;
  9103  001FF2  8280               	bsf	3968,1,c	;volatile
  9104  001FF4  D000               	goto	i2l686
  9105  001FF6                     i2l686:
  9106                           
  9107                           ;ABS_Code.c: 218: }
  9108                           ;ABS_Code.c: 219: }
  9109                           ;ABS_Code.c: 220: }
  9110                           ;ABS_Code.c: 221: INTCON3bits.INT1IF = 0;
  9111  001FF6  90F0               	bcf	intcon3,0,c	;volatile
  9112  001FF8  D000               	goto	i2l691
  9113  001FFA                     i2l691:
  9114  001FFA  C0C2  FFF5         	movff	??_ISR_Alta+21,tablat
  9115  001FFE  C0C1  FFF8         	movff	??_ISR_Alta+20,tblptru
  9116  002002  C0C0  FFF7         	movff	??_ISR_Alta+19,tblptrh
  9117  002006  C0BF  FFF6         	movff	??_ISR_Alta+18,tblptrl
  9118  00200A  C0BE  FFF4         	movff	??_ISR_Alta+17,prodh
  9119  00200E  C0BD  FFF3         	movff	??_ISR_Alta+16,prodl
  9120  002012  C0BC  FFDA         	movff	??_ISR_Alta+15,fsr2h
  9121  002016  C0BB  FFD9         	movff	??_ISR_Alta+14,fsr2l
  9122  00201A  C0BA  FFE2         	movff	??_ISR_Alta+13,fsr1h
  9123  00201E  C0B9  FFE1         	movff	??_ISR_Alta+12,fsr1l
  9124  002022  C0B8  FFEA         	movff	??_ISR_Alta+11,fsr0h
  9125  002026  C0B7  FFE9         	movff	??_ISR_Alta+10,fsr0l
  9126  00202A  C0B6  FFFB         	movff	??_ISR_Alta+9,pclatu
  9127  00202E  C0B5  FFFA         	movff	??_ISR_Alta+8,pclath
  9128  002032  0011               	retfie		f
  9129  002034                     __end_of_ISR_Alta:
  9130                           	opt stack 0
  9131                           pclatu	equ	0xFFB
  9132                           pclath	equ	0xFFA
  9133                           tblptru	equ	0xFF8
  9134                           tblptrh	equ	0xFF7
  9135                           tblptrl	equ	0xFF6
  9136                           tablat	equ	0xFF5
  9137                           prodh	equ	0xFF4
  9138                           prodl	equ	0xFF3
  9139                           intcon	equ	0xFF2
  9140                           intcon2	equ	0xFF1
  9141                           intcon3	equ	0xFF0
  9142                           postinc0	equ	0xFEE
  9143                           fsr0h	equ	0xFEA
  9144                           fsr0l	equ	0xFE9
  9145                           wreg	equ	0xFE8
  9146                           postdec1	equ	0xFE5
  9147                           fsr1h	equ	0xFE2
  9148                           fsr1l	equ	0xFE1
  9149                           bsr	equ	0xFE0
  9150                           indf2	equ	0xFDF
  9151                           postinc2	equ	0xFDE
  9152                           postdec2	equ	0xFDD
  9153                           fsr2h	equ	0xFDA
  9154                           fsr2l	equ	0xFD9
  9155                           status	equ	0xFD8
  9156                           
  9157 ;; *************** function i2___wmul *****************
  9158 ;; Defined at:
  9159 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9162 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  __wmul          2    4[BANK0 ] unsigned int 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  2    0[BANK0 ] unsigned int 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0, prodl, prodh
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9174 ;;      Params:         0       4       0       0
  9175 ;;      Locals:         0       2       0       0
  9176 ;;      Temps:          0       0       0       0
  9177 ;;      Totals:         0       6       0       0
  9178 ;;Total ram usage:        6 bytes
  9179 ;; Hardware stack levels used:    1
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_ISR_Alta
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           	psect	text20
  9188  002A9C                     __ptext20:
  9189                           	opt stack 0
  9190  002A9C                     i2___wmul:
  9191                           	opt stack 24
  9192                           
  9193                           ;incstack = 0
  9194  002A9C  0100               	movlb	0	; () banked
  9195  002A9E  519F               	movf	i2___wmul@multiplier& (0+255),w,b
  9196  002AA0  0100               	movlb	0	; () banked
  9197  002AA2  03A1               	mulwf	i2___wmul@multiplicand& (0+255),b
  9198  002AA4  CFF3 F0A3          	movff	prodl,i2___wmul@product
  9199  002AA8  CFF4 F0A4          	movff	prodh,i2___wmul@product+1
  9200  002AAC  0100               	movlb	0	; () banked
  9201  002AAE  519F               	movf	i2___wmul@multiplier& (0+255),w,b
  9202  002AB0  0100               	movlb	0	; () banked
  9203  002AB2  03A2               	mulwf	(i2___wmul@multiplicand+1)& (0+255),b
  9204  002AB4  50F3               	movf	prodl,w,c
  9205  002AB6  0100               	movlb	0	; () banked
  9206  002AB8  27A4               	addwf	(i2___wmul@product+1)& (0+255),f,b
  9207  002ABA  0100               	movlb	0	; () banked
  9208  002ABC  51A0               	movf	(i2___wmul@multiplier+1)& (0+255),w,b
  9209  002ABE  0100               	movlb	0	; () banked
  9210  002AC0  03A1               	mulwf	i2___wmul@multiplicand& (0+255),b
  9211  002AC2  50F3               	movf	prodl,w,c
  9212  002AC4  0100               	movlb	0	; () banked
  9213  002AC6  27A4               	addwf	(i2___wmul@product+1)& (0+255),f,b
  9214                           
  9215                           ; BSR set to: 0
  9216  002AC8  C0A3  F09F         	movff	i2___wmul@product,?i2___wmul
  9217  002ACC  C0A4  F0A0         	movff	i2___wmul@product+1,?i2___wmul+1
  9218  002AD0  D000               	goto	i2l767
  9219  002AD2                     i2l767:
  9220                           
  9221                           ; BSR set to: 0
  9222  002AD2  0012               	return		;funcret
  9223  002AD4                     __end_ofi2___wmul:
  9224                           	opt stack 0
  9225                           pclatu	equ	0xFFB
  9226                           pclath	equ	0xFFA
  9227                           tblptru	equ	0xFF8
  9228                           tblptrh	equ	0xFF7
  9229                           tblptrl	equ	0xFF6
  9230                           tablat	equ	0xFF5
  9231                           prodh	equ	0xFF4
  9232                           prodl	equ	0xFF3
  9233                           intcon	equ	0xFF2
  9234                           intcon2	equ	0xFF1
  9235                           intcon3	equ	0xFF0
  9236                           postinc0	equ	0xFEE
  9237                           fsr0h	equ	0xFEA
  9238                           fsr0l	equ	0xFE9
  9239                           wreg	equ	0xFE8
  9240                           postdec1	equ	0xFE5
  9241                           fsr1h	equ	0xFE2
  9242                           fsr1l	equ	0xFE1
  9243                           bsr	equ	0xFE0
  9244                           indf2	equ	0xFDF
  9245                           postinc2	equ	0xFDE
  9246                           postdec2	equ	0xFDD
  9247                           fsr2h	equ	0xFDA
  9248                           fsr2l	equ	0xFD9
  9249                           status	equ	0xFD8
  9250                           
  9251 ;; *************** function i2___awdiv *****************
  9252 ;; Defined at:
  9253 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  dividend        2    6[BANK0 ] int 
  9256 ;;  divisor         2    8[BANK0 ] int 
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;  __awdiv         2   12[BANK0 ] int 
  9259 ;;  __awdiv         1   11[BANK0 ] unsigned char 
  9260 ;;  __awdiv         1   10[BANK0 ] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    6[BANK0 ] int 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9270 ;;      Params:         0       4       0       0
  9271 ;;      Locals:         0       4       0       0
  9272 ;;      Temps:          0       0       0       0
  9273 ;;      Totals:         0       8       0       0
  9274 ;;Total ram usage:        8 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_ISR_Alta
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text21
  9284  002762                     __ptext21:
  9285                           	opt stack 0
  9286  002762                     i2___awdiv:
  9287                           	opt stack 24
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;incstack = 0
  9291  002762  0E00               	movlw	0
  9292  002764  0100               	movlb	0	; () banked
  9293  002766  6FAA               	movwf	i2___awdiv@sign& (0+255),b
  9294                           
  9295                           ; BSR set to: 0
  9296  002768  0100               	movlb	0	; () banked
  9297  00276A  AFA8               	btfss	(i2___awdiv@divisor+1)& (0+255),7,b
  9298  00276C  D009               	goto	i2l5248
  9299                           
  9300                           ; BSR set to: 0
  9301  00276E  0100               	movlb	0	; () banked
  9302  002770  6DA7               	negf	i2___awdiv@divisor& (0+255),b
  9303  002772  1FA8               	comf	(i2___awdiv@divisor+1)& (0+255),f,b
  9304  002774  B0D8               	btfsc	status,0,c
  9305  002776  2BA8               	incf	(i2___awdiv@divisor+1)& (0+255),f,b
  9306                           
  9307                           ; BSR set to: 0
  9308  002778  0E01               	movlw	1
  9309  00277A  0100               	movlb	0	; () banked
  9310  00277C  6FAA               	movwf	i2___awdiv@sign& (0+255),b
  9311  00277E  D000               	goto	i2l5248
  9312  002780                     i2l5248:
  9313                           
  9314                           ; BSR set to: 0
  9315  002780  0100               	movlb	0	; () banked
  9316  002782  AFA6               	btfss	(i2___awdiv@dividend+1)& (0+255),7,b
  9317  002784  D009               	goto	i2l5254
  9318                           
  9319                           ; BSR set to: 0
  9320  002786  0100               	movlb	0	; () banked
  9321  002788  6DA5               	negf	i2___awdiv@dividend& (0+255),b
  9322  00278A  1FA6               	comf	(i2___awdiv@dividend+1)& (0+255),f,b
  9323  00278C  B0D8               	btfsc	status,0,c
  9324  00278E  2BA6               	incf	(i2___awdiv@dividend+1)& (0+255),f,b
  9325                           
  9326                           ; BSR set to: 0
  9327  002790  0E01               	movlw	1
  9328  002792  0100               	movlb	0	; () banked
  9329  002794  1BAA               	xorwf	i2___awdiv@sign& (0+255),f,b
  9330  002796  D000               	goto	i2l5254
  9331  002798                     i2l5254:
  9332                           
  9333                           ; BSR set to: 0
  9334  002798  0E00               	movlw	0
  9335  00279A  0100               	movlb	0	; () banked
  9336  00279C  6FAC               	movwf	(i2___awdiv@quotient+1)& (0+255),b
  9337  00279E  0E00               	movlw	0
  9338  0027A0  6FAB               	movwf	i2___awdiv@quotient& (0+255),b
  9339                           
  9340                           ; BSR set to: 0
  9341  0027A2  0100               	movlb	0	; () banked
  9342  0027A4  51A7               	movf	i2___awdiv@divisor& (0+255),w,b
  9343  0027A6  0100               	movlb	0	; () banked
  9344  0027A8  11A8               	iorwf	(i2___awdiv@divisor+1)& (0+255),w,b
  9345  0027AA  B4D8               	btfsc	status,2,c
  9346  0027AC  D031               	goto	i2l5276
  9347                           
  9348                           ; BSR set to: 0
  9349  0027AE  0E01               	movlw	1
  9350  0027B0  0100               	movlb	0	; () banked
  9351  0027B2  6FA9               	movwf	i2___awdiv@counter& (0+255),b
  9352  0027B4  D007               	goto	i2l5262
  9353  0027B6                     i2l5260:
  9354                           
  9355                           ; BSR set to: 0
  9356  0027B6  0100               	movlb	0	; () banked
  9357  0027B8  90D8               	bcf	status,0,c
  9358  0027BA  37A7               	rlcf	i2___awdiv@divisor& (0+255),f,b
  9359  0027BC  37A8               	rlcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9360  0027BE  0100               	movlb	0	; () banked
  9361  0027C0  2BA9               	incf	i2___awdiv@counter& (0+255),f,b
  9362  0027C2  D000               	goto	i2l5262
  9363  0027C4                     i2l5262:
  9364                           
  9365                           ; BSR set to: 0
  9366  0027C4  0100               	movlb	0	; () banked
  9367  0027C6  BFA8               	btfsc	(i2___awdiv@divisor+1)& (0+255),7,b
  9368  0027C8  D002               	goto	i2l5264
  9369  0027CA  D7F5               	goto	i2l5260
  9370                           
  9371                           ; BSR set to: 0
  9372  0027CC  D000               	goto	i2l5264
  9373  0027CE                     i2l5264:
  9374                           
  9375                           ; BSR set to: 0
  9376  0027CE  0100               	movlb	0	; () banked
  9377  0027D0  90D8               	bcf	status,0,c
  9378  0027D2  37AB               	rlcf	i2___awdiv@quotient& (0+255),f,b
  9379  0027D4  37AC               	rlcf	(i2___awdiv@quotient+1)& (0+255),f,b
  9380                           
  9381                           ; BSR set to: 0
  9382  0027D6  0100               	movlb	0	; () banked
  9383  0027D8  51A7               	movf	i2___awdiv@divisor& (0+255),w,b
  9384  0027DA  0100               	movlb	0	; () banked
  9385  0027DC  5DA5               	subwf	i2___awdiv@dividend& (0+255),w,b
  9386  0027DE  0100               	movlb	0	; () banked
  9387  0027E0  51A8               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9388  0027E2  0100               	movlb	0	; () banked
  9389  0027E4  59A6               	subwfb	(i2___awdiv@dividend+1)& (0+255),w,b
  9390  0027E6  A0D8               	btfss	status,0,c
  9391  0027E8  D00B               	goto	i2l5272
  9392                           
  9393                           ; BSR set to: 0
  9394  0027EA  0100               	movlb	0	; () banked
  9395  0027EC  51A7               	movf	i2___awdiv@divisor& (0+255),w,b
  9396  0027EE  0100               	movlb	0	; () banked
  9397  0027F0  5FA5               	subwf	i2___awdiv@dividend& (0+255),f,b
  9398  0027F2  0100               	movlb	0	; () banked
  9399  0027F4  51A8               	movf	(i2___awdiv@divisor+1)& (0+255),w,b
  9400  0027F6  0100               	movlb	0	; () banked
  9401  0027F8  5BA6               	subwfb	(i2___awdiv@dividend+1)& (0+255),f,b
  9402                           
  9403                           ; BSR set to: 0
  9404  0027FA  0100               	movlb	0	; () banked
  9405  0027FC  81AB               	bsf	i2___awdiv@quotient& (0+255),0,b
  9406  0027FE  D000               	goto	i2l5272
  9407  002800                     i2l5272:
  9408                           
  9409                           ; BSR set to: 0
  9410  002800  0100               	movlb	0	; () banked
  9411  002802  90D8               	bcf	status,0,c
  9412  002804  33A8               	rrcf	(i2___awdiv@divisor+1)& (0+255),f,b
  9413  002806  33A7               	rrcf	i2___awdiv@divisor& (0+255),f,b
  9414                           
  9415                           ; BSR set to: 0
  9416  002808  0100               	movlb	0	; () banked
  9417  00280A  2FA9               	decfsz	i2___awdiv@counter& (0+255),f,b
  9418  00280C  D7E0               	goto	i2l5264
  9419                           
  9420                           ; BSR set to: 0
  9421  00280E  D000               	goto	i2l5276
  9422  002810                     i2l5276:
  9423                           
  9424                           ; BSR set to: 0
  9425  002810  0100               	movlb	0	; () banked
  9426  002812  51AA               	movf	i2___awdiv@sign& (0+255),w,b
  9427  002814  0100               	movlb	0	; () banked
  9428  002816  B4D8               	btfsc	status,2,c
  9429  002818  D006               	goto	i2l5280
  9430                           
  9431                           ; BSR set to: 0
  9432  00281A  0100               	movlb	0	; () banked
  9433  00281C  6DAB               	negf	i2___awdiv@quotient& (0+255),b
  9434  00281E  1FAC               	comf	(i2___awdiv@quotient+1)& (0+255),f,b
  9435  002820  B0D8               	btfsc	status,0,c
  9436  002822  2BAC               	incf	(i2___awdiv@quotient+1)& (0+255),f,b
  9437  002824  D000               	goto	i2l5280
  9438  002826                     i2l5280:
  9439                           
  9440                           ; BSR set to: 0
  9441  002826  C0AB  F0A5         	movff	i2___awdiv@quotient,?i2___awdiv
  9442  00282A  C0AC  F0A6         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9443  00282E  D000               	goto	i2l960
  9444  002830                     i2l960:
  9445                           
  9446                           ; BSR set to: 0
  9447  002830  0012               	return		;funcret
  9448  002832                     __end_ofi2___awdiv:
  9449                           	opt stack 0
  9450                           pclatu	equ	0xFFB
  9451                           pclath	equ	0xFFA
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           intcon2	equ	0xFF1
  9460                           intcon3	equ	0xFF0
  9461                           postinc0	equ	0xFEE
  9462                           fsr0h	equ	0xFEA
  9463                           fsr0l	equ	0xFE9
  9464                           wreg	equ	0xFE8
  9465                           postdec1	equ	0xFE5
  9466                           fsr1h	equ	0xFE2
  9467                           fsr1l	equ	0xFE1
  9468                           bsr	equ	0xFE0
  9469                           indf2	equ	0xFDF
  9470                           postinc2	equ	0xFDE
  9471                           postdec2	equ	0xFDD
  9472                           fsr2h	equ	0xFDA
  9473                           fsr2l	equ	0xFD9
  9474                           status	equ	0xFD8
  9475                           
  9476 ;; *************** function ___lwdiv *****************
  9477 ;; Defined at:
  9478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  dividend        2    0[BANK0 ] unsigned int 
  9481 ;;  divisor         2    2[BANK0 ] unsigned int 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;  quotient        2    5[BANK0 ] unsigned int 
  9484 ;;  counter         1    4[BANK0 ] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  2    0[BANK0 ] unsigned int 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9494 ;;      Params:         0       4       0       0
  9495 ;;      Locals:         0       3       0       0
  9496 ;;      Temps:          0       0       0       0
  9497 ;;      Totals:         0       7       0       0
  9498 ;;Total ram usage:        7 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_ISR_Alta
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text22
  9508  0028CA                     __ptext22:
  9509                           	opt stack 0
  9510  0028CA                     ___lwdiv:
  9511                           	opt stack 24
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;incstack = 0
  9515  0028CA  0E00               	movlw	0
  9516  0028CC  0100               	movlb	0	; () banked
  9517  0028CE  6FA5               	movwf	(___lwdiv@quotient+1)& (0+255),b
  9518  0028D0  0E00               	movlw	0
  9519  0028D2  6FA4               	movwf	___lwdiv@quotient& (0+255),b
  9520                           
  9521                           ; BSR set to: 0
  9522  0028D4  0100               	movlb	0	; () banked
  9523  0028D6  51A1               	movf	___lwdiv@divisor& (0+255),w,b
  9524  0028D8  0100               	movlb	0	; () banked
  9525  0028DA  11A2               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  9526  0028DC  B4D8               	btfsc	status,2,c
  9527  0028DE  D031               	goto	i2l1285
  9528                           
  9529                           ; BSR set to: 0
  9530  0028E0  0E01               	movlw	1
  9531  0028E2  0100               	movlb	0	; () banked
  9532  0028E4  6FA3               	movwf	___lwdiv@counter& (0+255),b
  9533  0028E6  D007               	goto	i2l5220
  9534  0028E8                     i2l5218:
  9535                           
  9536                           ; BSR set to: 0
  9537  0028E8  0100               	movlb	0	; () banked
  9538  0028EA  90D8               	bcf	status,0,c
  9539  0028EC  37A1               	rlcf	___lwdiv@divisor& (0+255),f,b
  9540  0028EE  37A2               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  9541  0028F0  0100               	movlb	0	; () banked
  9542  0028F2  2BA3               	incf	___lwdiv@counter& (0+255),f,b
  9543  0028F4  D000               	goto	i2l5220
  9544  0028F6                     i2l5220:
  9545                           
  9546                           ; BSR set to: 0
  9547  0028F6  0100               	movlb	0	; () banked
  9548  0028F8  BFA2               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  9549  0028FA  D002               	goto	i2l5222
  9550  0028FC  D7F5               	goto	i2l5218
  9551                           
  9552                           ; BSR set to: 0
  9553  0028FE  D000               	goto	i2l5222
  9554  002900                     i2l5222:
  9555                           
  9556                           ; BSR set to: 0
  9557  002900  0100               	movlb	0	; () banked
  9558  002902  90D8               	bcf	status,0,c
  9559  002904  37A4               	rlcf	___lwdiv@quotient& (0+255),f,b
  9560  002906  37A5               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  9561                           
  9562                           ; BSR set to: 0
  9563  002908  0100               	movlb	0	; () banked
  9564  00290A  51A1               	movf	___lwdiv@divisor& (0+255),w,b
  9565  00290C  0100               	movlb	0	; () banked
  9566  00290E  5D9F               	subwf	___lwdiv@dividend& (0+255),w,b
  9567  002910  0100               	movlb	0	; () banked
  9568  002912  51A2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9569  002914  0100               	movlb	0	; () banked
  9570  002916  59A0               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  9571  002918  A0D8               	btfss	status,0,c
  9572  00291A  D00B               	goto	i2l5230
  9573                           
  9574                           ; BSR set to: 0
  9575  00291C  0100               	movlb	0	; () banked
  9576  00291E  51A1               	movf	___lwdiv@divisor& (0+255),w,b
  9577  002920  0100               	movlb	0	; () banked
  9578  002922  5F9F               	subwf	___lwdiv@dividend& (0+255),f,b
  9579  002924  0100               	movlb	0	; () banked
  9580  002926  51A2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  9581  002928  0100               	movlb	0	; () banked
  9582  00292A  5BA0               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  9583                           
  9584                           ; BSR set to: 0
  9585  00292C  0100               	movlb	0	; () banked
  9586  00292E  81A4               	bsf	___lwdiv@quotient& (0+255),0,b
  9587  002930  D000               	goto	i2l5230
  9588  002932                     i2l5230:
  9589                           
  9590                           ; BSR set to: 0
  9591  002932  0100               	movlb	0	; () banked
  9592  002934  90D8               	bcf	status,0,c
  9593  002936  33A2               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  9594  002938  33A1               	rrcf	___lwdiv@divisor& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597  00293A  0100               	movlb	0	; () banked
  9598  00293C  2FA3               	decfsz	___lwdiv@counter& (0+255),f,b
  9599  00293E  D7E0               	goto	i2l5222
  9600  002940  D000               	goto	i2l1285
  9601  002942                     i2l1285:
  9602                           
  9603                           ; BSR set to: 0
  9604  002942  C0A4  F09F         	movff	___lwdiv@quotient,?___lwdiv
  9605  002946  C0A5  F0A0         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9606                           
  9607                           ; BSR set to: 0
  9608  00294A  0012               	return		;funcret
  9609  00294C                     __end_of___lwdiv:
  9610                           	opt stack 0
  9611                           pclatu	equ	0xFFB
  9612                           pclath	equ	0xFFA
  9613                           tblptru	equ	0xFF8
  9614                           tblptrh	equ	0xFF7
  9615                           tblptrl	equ	0xFF6
  9616                           tablat	equ	0xFF5
  9617                           prodh	equ	0xFF4
  9618                           prodl	equ	0xFF3
  9619                           intcon	equ	0xFF2
  9620                           intcon2	equ	0xFF1
  9621                           intcon3	equ	0xFF0
  9622                           postinc0	equ	0xFEE
  9623                           fsr0h	equ	0xFEA
  9624                           fsr0l	equ	0xFE9
  9625                           wreg	equ	0xFE8
  9626                           postdec1	equ	0xFE5
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           bsr	equ	0xFE0
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8
  9636                           
  9637 ;; *************** function _WriteTimer0 *****************
  9638 ;; Defined at:
  9639 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  timer0          2    0[BANK0 ] unsigned int 
  9642 ;; Auto vars:     Size  Location     Type
  9643 ;;  timer           2    2[BANK0 ] struct Timers
  9644 ;; Return value:  Size  Location     Type
  9645 ;;		None               void
  9646 ;; Registers used:
  9647 ;;		None
  9648 ;; Tracked objects:
  9649 ;;		On entry : 0/0
  9650 ;;		On exit  : 0/0
  9651 ;;		Unchanged: 0/0
  9652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9653 ;;      Params:         0       2       0       0
  9654 ;;      Locals:         0       2       0       0
  9655 ;;      Temps:          0       0       0       0
  9656 ;;      Totals:         0       4       0       0
  9657 ;;Total ram usage:        4 bytes
  9658 ;; Hardware stack levels used:    1
  9659 ;; This function calls:
  9660 ;;		Nothing
  9661 ;; This function is called by:
  9662 ;;		_ISR_Alta
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text23
  9667  002B2A                     __ptext23:
  9668                           	opt stack 0
  9669  002B2A                     _WriteTimer0:
  9670                           	opt stack 24
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;incstack = 0
  9674  002B2A  C09F  F0A1         	movff	WriteTimer0@timer0,WriteTimer0@timer
  9675  002B2E  C0A0  F0A2         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  9676  002B32  C0A2  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  9677  002B36  C0A1  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  9678  002B3A  0012               	return		;funcret
  9679  002B3C                     __end_of_WriteTimer0:
  9680                           	opt stack 0
  9681  0000                     pclatu	equ	0xFFB
  9682                           pclath	equ	0xFFA
  9683                           tblptru	equ	0xFF8
  9684                           tblptrh	equ	0xFF7
  9685                           tblptrl	equ	0xFF6
  9686                           tablat	equ	0xFF5
  9687                           prodh	equ	0xFF4
  9688                           prodl	equ	0xFF3
  9689                           intcon	equ	0xFF2
  9690                           intcon2	equ	0xFF1
  9691                           intcon3	equ	0xFF0
  9692                           postinc0	equ	0xFEE
  9693                           fsr0h	equ	0xFEA
  9694                           fsr0l	equ	0xFE9
  9695                           wreg	equ	0xFE8
  9696                           postdec1	equ	0xFE5
  9697                           fsr1h	equ	0xFE2
  9698                           fsr1l	equ	0xFE1
  9699                           bsr	equ	0xFE0
  9700                           indf2	equ	0xFDF
  9701                           postinc2	equ	0xFDE
  9702                           postdec2	equ	0xFDD
  9703                           fsr2h	equ	0xFDA
  9704                           fsr2l	equ	0xFD9
  9705                           status	equ	0xFD8
  9706                           pclatu	equ	0xFFB
  9707                           pclath	equ	0xFFA
  9708                           tblptru	equ	0xFF8
  9709                           tblptrh	equ	0xFF7
  9710                           tblptrl	equ	0xFF6
  9711                           tablat	equ	0xFF5
  9712                           prodh	equ	0xFF4
  9713                           prodl	equ	0xFF3
  9714                           intcon	equ	0xFF2
  9715                           intcon2	equ	0xFF1
  9716                           intcon3	equ	0xFF0
  9717                           postinc0	equ	0xFEE
  9718                           fsr0h	equ	0xFEA
  9719                           fsr0l	equ	0xFE9
  9720                           wreg	equ	0xFE8
  9721                           postdec1	equ	0xFE5
  9722                           fsr1h	equ	0xFE2
  9723                           fsr1l	equ	0xFE1
  9724                           bsr	equ	0xFE0
  9725                           indf2	equ	0xFDF
  9726                           postinc2	equ	0xFDE
  9727                           postdec2	equ	0xFDD
  9728                           fsr2h	equ	0xFDA
  9729                           fsr2l	equ	0xFD9
  9730                           status	equ	0xFD8
  9731                           
  9732                           	psect	param0
  9733  0000                     pclatu	equ	0xFFB
  9734                           pclath	equ	0xFFA
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           intcon	equ	0xFF2
  9742                           intcon2	equ	0xFF1
  9743                           intcon3	equ	0xFF0
  9744                           postinc0	equ	0xFEE
  9745                           fsr0h	equ	0xFEA
  9746                           fsr0l	equ	0xFE9
  9747                           wreg	equ	0xFE8
  9748                           postdec1	equ	0xFE5
  9749                           fsr1h	equ	0xFE2
  9750                           fsr1l	equ	0xFE1
  9751                           bsr	equ	0xFE0
  9752                           indf2	equ	0xFDF
  9753                           postinc2	equ	0xFDE
  9754                           postdec2	equ	0xFDD
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      72
    BANK0           160     53     124
    BANK1           256     16      16
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> distance_array(BANK0[8]), status_array(BANK0[8]), speed_array(BANK0[8]), remote_frame_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _remote_frame_handler->_CANsendMessage
    _board_initialization->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    ___aldiv->___lmul

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->i2___awdiv
    i2___awdiv->i2___wmul

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___aldiv
    _board_initialization->_CANInitialize

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19605
                                             14 BANK1      2     2      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                            ___aldiv
                            ___awdiv
                             ___lmul
               _board_initialization
               _remote_frame_handler
 ---------------------------------------------------------------------------------
 (1) _remote_frame_handler                                 0     0      0    5110
                       _CANisTxReady
                     _CANsendMessage
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     784
                                             36 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             36 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _board_initialization                                 0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             50 BANK0      3     3      0
                                              0 BANK1      9     4      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             36 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             36 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     558
                                             36 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     683
                                             36 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     753
                                              0 BANK1     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Bassa                                           18    18      0    1387
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (5) ___lbdiv                                              4     3      1     226
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_Alta                                            22    22      0    1613
                                             14 BANK0     22    22      0
                        _WriteTimer0
                            ___lwdiv
                          i2___awdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     296
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     515
                                              6 BANK0      8     4      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2     253
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   ___aldiv
     ___lmul (ARG)
   ___awdiv
   ___lmul
   _board_initialization
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _remote_frame_handler
     _CANisTxReady
     _CANsendMessage
     ___wmul

 _ISR_Bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   ___lbdiv

 _ISR_Alta (ROOT)
   _WriteTimer0
   ___lwdiv
   i2___awdiv
     i2___wmul (ARG)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     10      10       6        6.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     35      7C       4       77.5%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     1E      48       1       75.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4       9        0.0%
DATA                 0      0      D4      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jun 09 15:09:53 2016

           ??_CANisTXwarningON 00C3                              _x 023A                              _y 023B  
         __end_of_CANSetFilter 0CBC                   ___awdiv@sign 00C8                             bsr 000FE0  
          ___wmul@multiplicand 00C5                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                    __CFG_OSC$HS 000000                            l400 112A  
                          l403 11E6                            l500 08F0                            l412 13A4  
                          l404 11EA                            l501 08FC                            l413 13A8  
                          l405 12E4                            l510 0A0C                            l502 0900  
                          l414 13B4                            l406 1272                            l511 0A10  
                          l503 090C                            l407 127C                            l520 0B20  
                          l512 0A1C                            l408 1286                            l521 0B2C  
                          l513 0A20                            l409 1290                            l530 0C3C  
                          l522 0B30                            l514 0A2C                            l506 09EC  
                          l450 1BC8                            l442 1B88                            l531 0C40  
                          l523 0B3C                            l507 09F0                            l443 1B8C  
                          l532 0C4C                            l524 0B40                            l508 09FC  
                          l460 1CD8                            l444 1B98                            l380 0D7C  
                          l533 0C50                            l525 0B4C                            l517 0B0C  
                          l509 0A00                            l461 1CE4                            l453 1CA4  
                          l445 1B9C                            l373 0F46                            l534 0C5C  
                          l518 0B10                            l454 1CA8                            l446 1BA8  
                          l390 0F60                            l374 0CD2                            l535 0C60  
                          l519 0B1C                            l455 1CB4                            l463 1D32  
                          l447 1BAC                            l391 105A                            l383 0E90  
                          l375 0CD6                            l536 0C6C                            l528 0C2C  
                          l480 06C2                            l456 1CB8                            l448 1BB8  
                          l368 22FA                            l392 0FE8                            l384 0E94  
                          l376 0DD0                            l712 2056                            l553 2B48  
                          l529 0C30                            l481 06CE                            l473 068E  
                          l457 1CC4                            l449 1BBC                            l369 2304  
                          l393 0FF2                            l385 0EA0                            l377 0D5E  
                          l713 205E                            l538 0CBA                            l490 07DC  
                          l474 0692                            l458 1CC8                            l394 0FFC  
                          l378 0D68                            l491 07E0                            l475 069E  
                          l459 1CD4                            l395 1006                            l387 145A  
                          l379 0D72                            l556 2B56                            l492 07EC  
                          l484 07AC                            l476 06A2                            l388 11D0  
                          l485 07B0                            l477 06AE                            l389 0F5C  
                          l741 2560                            l733 21B8                            l717 209C  
                          l486 07BC                            l478 06B2                            l566 2AF2  
                          l398 111A                            l718 20DC                            l495 08CC  
                          l487 07C0                            l479 06BE                            l567 2AF8  
                          l399 111E                            l751 2564                            l496 08D0  
                          l488 07CC                            l728 2136                            l497 08DC  
                          l489 07D0                            l498 08E0                            l499 08EC  
                          l836 2690                            l767 2A9A                            l960 2760  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000           __size_of_WriteTimer0 0012  
                          _msg 0078                            wreg 000FE8                   _steering_dir 0239  
                 __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000                           l4302 1AFC  
                         l5110 2550                           l5200 2730                           l5120 2988  
                         l4402 030C                           l5132 258C                           l5204 2740  
                         l5116 2960                           l4420 03C8                           l4502 06D4  
                         l4334 1C16                           l5144 25DA                           l5160 2660  
                         l5208 2756                           l4360 1CEA                           l4328 1BCE  
                         l5146 25EC                           l5138 25AC                           l4610 0A7A  
                         l5164 267E                           l5156 264C                           l5148 25F6  
                         l4268 2B04                           l4604 0A32                           l4508 071C  
                         l5084 2454                           l5412 20D0                           l5404 20B6  
                         l5190 26F4                           l5182 26C8                           l4542 083A  
                         l4438 0484                           l4286 1A44                           l4710 229C  
                         l5094 24C6                           l5422 2108                           l5192 26FE  
                         l5176 26B0                           l4536 07F2                           l4456 0540  
                         l4384 0252                           l4704 228C                           l5088 2490  
                         l5416 20E2                           l5408 20C2                           l4570 0912  
                         l4474 05FC                           l4722 2310                           l5450 21D0  
                         l5434 214E                           l5442 21B0                           l5426 212E  
                         l5188 26E6                           l4644 0B9A                           l4724 2354  
                         l4716 22F2                           l5452 2226                           l5436 21A4  
                         l4638 0B52                           l4718 2308                           l4672 0C72  
                         l4576 095A                           l5392 2094                           l5384 2042  
                         l4914 129C                           l4762 0D88                           l4940 13BA  
                         l4934 1398                           l4838 1012                           l4782 0E84  
                         l5398 20A4                           l4864 1130                           l4858 110E  
                         l4788 0EA6                           _LATA 000F89                           _LATB 000F8A  
                         _LATC 000F8B                           _LATD 000F8C                           _LATE 000F8D  
                         u5100 1A76                           u5105 1A6A                           u5115 1AD6  
                         u5300 01CC                           u5060 19BE                           u6120 0DA8  
                         u5305 01C0                           u5065 19B2                           u6130 0DF4  
                         u5315 022C                           u5075 1A1E                           u5500 0576  
                         u5420 03FE                           u5340 0286                           u6125 0D9C  
                         u5270 1D0A                           u5190 1BEE                           u6135 0DE8  
                         u5505 056A                           u5425 03F2                           u5345 027A  
                         u6145 0E54                           u6250 1032                           u5515 05D6  
                         u5435 045E                           u5355 02E6                           u5275 1CFE  
                         u5195 1BE2                           u5460 04BA                           u5380 0342  
                         u6260 107E                           u6405 1368                           u6255 1026  
                         u5465 04AE                           u5385 0336                           u6265 1072  
                         u5475 051A                           u5395 03A2                           u6275 10DE  
                         u6460 2B44                           u6380 12BC                           u6470 2B52  
                         u5910 0B72                           u5830 0A52                           u5750 0932  
                         u5670 0812                           u5590 06F4                           u6390 1308  
                         u6385 12B0                           u5915 0B66                           u5835 0A46  
                         u5755 0926                           u5675 0806                           u5595 06E8  
                         u6395 12FC                           u5990 0C92                           u5995 0C86  
          __size_of_CANSetMask 03AA                           _main 2034                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         _step 0025                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 018E                  __CFG_IESO$OFF 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000000               _CANOperationMode 2AFA  
                 _status_array 0097                _brake_value_inc 0023           _remote_frame_handler 2404  
   __size_of_CANreceiveMessage 052E                __end_of___aldiv 2692                          ?_main 0028  
              __end_of___awdiv 2762                __end_of___lbdiv 2A64                          _T0CON 000FD5  
              ___awdiv@divisor 00C5                          _T1CON 000FCD                          _T3CON 000FB1  
           __size_of_ISR_Bassa 0176                __end_of___lwdiv 294C                          i1l420 1708  
                        i1l428 1988                          i1l700 00B8                          i1l706 0148  
                        i1l571 2B24                          i1l572 2B28                          i2l682 1F44  
                        i2l691 1FFA                          i2l677 1F5C                          i2l686 1FF6  
                        i2l767 2AD2                          i2l679 1F5A                          i2l960 2830  
                        i2l689 1FE0                ___awdiv@counter 00C7                          _TMR0H 000FD7  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _TMR3H 000FB3  
                        _TMR1L 000FCE                          _TMR3L 000FB2              _CANisRxReady$3175 0028  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISC 000F94  
                        _TRISD 000F95                          _TRISE 000F96                  __CFG_PWRT$OFF 000000  
             __end_of_ISR_Alta 2034                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
          ___lmul@multiplicand 00C7                 __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBTR1$OFF 000000             CANInitialize@flags 0104                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
               __pbitbssCOMRAM 0230           __end_of_CANisRxReady 2B2A                          tablat 000FF5  
       _distance_set_counter_1 0017         _distance_set_counter_2 0019           __end_of_CANisTxReady 2AFA  
             __end_ofi2___wmul 2AD4                          status 000FD8                ___lbdiv@divisor 0028  
              ___lbdiv@counter 002A             __size_ofi2___awdiv 00D0                __initialization 29C6  
                 __end_of_main 2236  __size_of_board_initialization 0098               _brake_signal_CAN 0022  
        ?_remote_frame_handler 0028                         ??_main 010E                  __activetblptr 000002  
            _CANisTxReady$3173 00C3                         _CANCON 000F6F               ___awdiv@dividend 00C3  
              __CFG_BBSIZ$1024 000000                         i1l1203 2A62                         i1l4122 0096  
                       i1l4114 0064                         i1l4132 00DC                         i1l4150 0124  
                       i1l4128 00BC                         i1l3602 16AE                         i1l4146 011E  
                       i1l3606 16CE                         i1l4158 0136                         i1l3608 1702  
                       i1l3544 1468                         i1l3660 1914                         i1l3652 18D8  
                       i1l3644 1868                         i1l3548 1470                         i1l3670 1984  
                       i1l3590 164E                         i1l3582 15DC                         i1l3664 1932  
                       i1l3656 18F6                         i1l3594 166E                         i1l3930 2A40  
                       i1l3668 1950                         i1l3924 2A30                         i1l3940 2A5E  
                       i2l1285 2942                         i1l3598 168E                         i1l3936 2A54  
                       i1l3928 2A38                         i2l5220 28F6                         i2l5230 2932  
                       i2l5222 2900                         i2l5304 1EAE                         i2l5218 28E8  
                       i2l5330 1F28                         i2l5306 1EBC                         i2l5260 27B6  
                       i2l5316 1ED4                         i2l5308 1EC0                         i2l5262 27C4  
                       i2l5254 2798                         i2l5350 1F70                         i2l5280 2826  
                       i2l5272 2800                         i2l5264 27CE                         i2l5248 2780  
                       i2l5276 2810                         i2l5364 1FC4                         _RXB0D0 000F66  
                       _RXB0D1 000F67                         _RXB0D2 000F68                         _RXB0D3 000F69  
                       _RXB0D4 000F6A                         _RXB1D0 000F56                         _RXB0D5 000F6B  
                       _RXB1D1 000F57                         _RXB0D6 000F6C                         _RXB1D2 000F58  
                       _RXB0D7 000F6D                         _RXB1D3 000F59                         _RXB1D4 000F5A  
                       _RXB1D5 000F5B                         _RXB1D6 000F5C                         _RXB1D7 000F5D  
                       _TXB0D0 000F46                         _TXB0D1 000F47                         _TXB0D2 000F48  
                       _TXB0D3 000F49                         _TXB1D0 000F36                         _TXB0D4 000F4A  
                       _TXB1D1 000F37                         _TXB0D5 000F4B                         _TXB1D2 000F38  
                       _TXB0D6 000F4C                         _TXB1D3 000F39                         _TXB0D7 000F4D  
                       _TXB2D0 000F26                         _TXB1D4 000F3A                         _TXB2D1 000F27  
                       _TXB1D5 000F3B                         _TXB2D2 000F28                         _TXB1D6 000F3C  
                       _TXB2D3 000F29                         _TXB1D7 000F3D                         _TXB2D4 000F2A  
                       _TXB2D5 000F2B                         _TXB2D6 000F2C                         _TXB2D7 000F2D  
           CANsendMessage@data 00C7             CANsendMessage@tamp 00CF              __end_of_ISR_Bassa 018E  
        __size_of_CANSetFilter 0B2A             _distance_set_value 001B                 __CFG_XINST$OFF 000000  
                       ___lmul 294C                      ??___aldiv 00CF                         ___wmul 2A64  
                    ??___awdiv 00C7                      ??___lbdiv 0029                 __CFG_STVREN$ON 000000  
                    ??___lwdiv 00A3                   ??_CANSetMask 00C8                         clear_0 29CC  
                       clear_1 29DC               ___awdiv@quotient 00C9                 i2___awdiv@sign 00AA  
              __CFG_BOREN$BOHW 000000                   __pdataCOMRAM 0048              __end_ofi2___awdiv 2832  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                _home_position 0024                   _CANSetFilter 0192               ___lbdiv@dividend 0029  
                   __accesstop 0060        __end_of__initialization 2A14             __end_of_CANSetMask 1D34  
              __CFG_PBADEN$OFF 000000                  ___rparam_used 000000      __size_of_CANisRXwarningON 000E  
               __pcstackCOMRAM 0028                      ?_ISR_Alta 0028                   __pidataBANK0 2B58  
       ??_remote_frame_handler 00D3               ___lbdiv@quotient 002B                   _ENC1_measure 0230  
        CANSetFilter@numBuffer 00CC                      ?i2___wmul 009F      __size_of_CANisTXwarningON 000E  
                 _ENC2_measure 0231          __size_of_CANisRxReady 0018          __size_of_CANisTxReady 0026  
     __end_of_CANOperationMode 2B12                     __pbssBANK0 0060        __size_of_CANsendMessage 07A0  
                   ??_ISR_Alta 00AD                        ?___lmul 00C3                        ?___wmul 00C3  
                   _gap_time_1 001D                     _gap_time_2 001F               WriteTimer0@timer 00A1  
                ??_WriteTimer0 00A1                 ___lmul@product 00CB                   _CANisRxReady 2B12  
                      _CANSTAT 000F6E                   _CANisTxReady 2AD4                        _BRGCON1 000F70  
                      _BRGCON2 000F71                        _BRGCON3 000F72                     ??i2___wmul 00A3  
                _int_counter_1 006C                  _int_counter_2 0070         __size_of_CANInitialize 01CE  
        _distance_reached_flag 0236                        _RXB0DLC 000F65                        _RXB1DLC 000F55  
                      _RXB0CON 000F60                        _RXB1CON 000F50                        _TXB0DLC 000F45  
                      _TXB1DLC 000F35                        _TXB2DLC 000F25                     _distance_1 0013  
                   _distance_2 0015            CANsendMessage@flags 00CA                     _count_flag 0235  
                      __Hparam 0000                        __Lparam 0000                        ___aldiv 2566  
                      ___awdiv 2692                        ___lbdiv 2A1E                __size_of___lmul 007A  
              __size_of___wmul 0038                        ___lwdiv 28CA           CANInitialize@propSeg 00D1  
                      __pcinit 29C6                        __ramtop 0300                        __ptext0 2034  
                      __ptext1 2404                        __ptext2 2A64                        __ptext3 0CBC  
                      __ptext4 2AD4                        __ptext5 2832                        __ptext6 2236  
                      __ptext7 198A                        __ptext8 0192                        __ptext9 2AFA  
                    _T0CONbits 000FD5                      _T1CONbits 000FCD                      _T3CONbits 000FB1  
             ___aldiv@dividend 0100            __end_of_WriteTimer0 2B3C         CANreceiveMessage@error 0032  
 __end_of_board_initialization 28CA                 __pintcode_body 1D34           end_of_initialization 2A14  
                _Analogic_Mode 0021                  __Lmediumconst 0000                        int_func 1D34  
          i2___wmul@multiplier 009F               _CANisRXwarningON 2B4A                  _CANInitialize 2236  
             ___aldiv@quotient 010A                      _ISR_Bassa 0018                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
                    _PORTAbits 000F80                 CANSetMask@mask 00C3                      _PORTCbits 000F82  
               CANSetMask@tamp 00CD                 CANSetMask@type 00C7               _CANisTXwarningON 2B3C  
                    i2___awdiv 2762        _clock_counter_reference 0011                 _CANsendMessage 0CBC  
           _remote_frame_array 00D4               CANInitialize@BRP 0103               CANInitialize@SJW 0102  
               ?_CANInitialize 0100             i2___awdiv@dividend 00A5                     ?_ISR_Bassa 0028  
               __end_of___lmul 29C6              __size_of_ISR_Alta 202C                 __end_of___wmul 2A9C  
                __pidataCOMRAM 2B60                    _WriteTimer0 2B2A               i2___wmul@product 00A3  
          start_initialization 29C6             i2___awdiv@quotient 00AB              __size_ofi2___wmul 0038  
          CANSetMask@numBuffer 00CC                     ?i2___awdiv 00A5         __end_of_CANsendMessage 145C  
            ?_CANOperationMode 0028             ??_CANOperationMode 00C3     CANInitialize@FilterConfig1 00D2  
   CANInitialize@FilterConfig2 00D3              _distance_set_flag 0237                       ??___lmul 00CB  
         _board_initialization 2832                       ??___wmul 00C7                    __pdataBANK0 00D4  
             __CFG_LPT1OSC$OFF 000000  __size_of_remote_frame_handler 0162             _brake_value_degree 0027  
       CANInitialize@phaseSeg1 0100         CANInitialize@phaseSeg2 0101                    __pbssCOMRAM 0001  
                __pcstackBANK0 009F                  __pcstackBANK1 0100                    _data_debug1 0060  
                  _BRGCON2bits 000F71                    _BRGCON3bits 000F72                ?_CANsendMessage 00C3  
              ??_CANInitialize 0105             CANSetFilter@filter 00C3               ___lwdiv@dividend 009F  
        ?_board_initialization 0028                    ??_ISR_Bassa 0034                      __pintcode 0008  
                     ?___aldiv 0100                       ?___awdiv 00C3                       ?___lbdiv 0028  
                     ?___lwdiv 009F                    __pintcodelo 0018              WriteTimer0@timer0 009F  
     __end_of_CANisRXwarningON 2B58                    _brake_value 0026                    _COMSTATbits 000F74  
             ___lwdiv@quotient 00A4                    ??i2___awdiv 00A9                ___aldiv@divisor 0104  
        CANreceiveMessage@tamp 0033                ___aldiv@counter 0108                 ___wmul@product 00C7  
                     _IPR1bits 000F9F                       _IPR2bits 000FA2   _delay_quartz_frequency_value 0048  
                     _PIE1bits 000F9D                       _IPR3bits 000FA5                       _PIE2bits 000FA0  
                     _PIE3bits 000FA3       __end_of_CANisTXwarningON 2B4A                       i1u401_25 1560  
                     i1u410_20 17DA                       i1u410_26 17DC                       i1u412_25 17EE  
                     i1u407_25 16DA                       i1u409_20 17B0                       i1u409_26 17B2  
                     i1u418_25 195C                       i1u398_20 151C                       i1u398_26 151E  
                     i1u399_20 154A                       i1u399_26 154C                       _PIR1bits 000F9E  
                     _PIR2bits 000FA1                       _PIR3bits 000FA4                       _RXB0EIDH 000F63  
                     _RXB0EIDL 000F64                       _RXB1EIDH 000F53                       _RXB1EIDL 000F54  
                     _ISR_Alta 0008                       _RCONbits 000FD0               __CFG_WDTPS$32768 000000  
                     _RXB0SIDH 000F61                       _RXB0SIDL 000F62                       _RXF0EIDH 000F02  
                     _RXB1SIDH 000F51                       _RXF0EIDL 000F03                       _RXB1SIDL 000F52  
                     _RXF1EIDH 000F06                       _RXF1EIDL 000F07                       _RXF2EIDH 000F0A  
                     _RXF2EIDL 000F0B                       _RXF3EIDH 000F0E                       _RXF3EIDL 000F0F  
                     _RXF4EIDH 000F12                       _RXF4EIDL 000F13                       _RXF5EIDH 000F16  
                     _RXF5EIDL 000F17                       _RXF0SIDH 000F00                       _RXF0SIDL 000F01  
                     _TXB0EIDH 000F43                       _RXF1SIDH 000F04                       _TXB0EIDL 000F44  
                     _RXF1SIDL 000F05                       _TXB1EIDH 000F33                       _RXF2SIDH 000F08  
                     _TXB1EIDL 000F34                       _RXF2SIDL 000F09                       _TXB2EIDH 000F23  
                     _RXF3SIDH 000F0C                       _TXB2EIDL 000F24                       _RXF3SIDL 000F0D  
                     _RXF4SIDH 000F10                       _RXF4SIDL 000F11                       _RXF5SIDH 000F14  
                     _RXF5SIDL 000F15                       _RXM0EIDH 000F1A                       _RXM0EIDL 000F1B  
                     _TXB0SIDH 000F41                       _RXM1EIDH 000F1E                       _TXB0SIDL 000F42  
                     _RXM1EIDL 000F1F                       _TXB1SIDH 000F31                       _TXB1SIDL 000F32  
                     _TXB2SIDH 000F21                       _TXB2SIDL 000F22                      _timer_off 0074  
                     _RXM0SIDH 000F18                       _RXM0SIDL 000F19                       _RXM1SIDH 000F1C  
                     _RXM1SIDL 000F1D                       _RXERRCNT 000F75                       _TXERRCNT 000F76  
            ___wmul@multiplier 00C3                       i2___wmul 2A9C              i2___awdiv@divisor 00A7  
            i2___awdiv@counter 00A9                  ?_CANSetFilter 00C3              ___lmul@multiplier 00C3  
                  _INTCON2bits 000FF1                    _INTCON3bits 000FF0                      copy_data0 29F6  
                   _CANCONbits 000F6F                       __Hparam0 0000                       __Lparam0 0000  
                 _RXB0SIDLbits 000F62         ??_board_initialization 00D4                   _RXB1SIDLbits 000F52  
             __size_of___aldiv 012C                     _CANSetMask 198A               __size_of___awdiv 00D0  
             __size_of___lbdiv 0046          i2___wmul@multiplicand 00A1               __size_of___lwdiv 0082  
              _remote_frame_id 0001                       _Tx_retry 0234                   ?_WriteTimer0 009F  
                 _RXF0SIDLbits 000F01                ___lwdiv@divisor 00A1                   _RXF1SIDLbits 000F05  
                _TMR1_overflow 0232                ___lwdiv@counter 00A3                 ??_CANSetFilter 00C8  
                     __ptext10 294C                       __ptext11 2692                       __ptext20 2A9C  
                     __ptext12 2566                       __ptext21 2762                       __ptext13 2B3C  
                     __ptext22 28CA                       __ptext14 2B4A                       __ptext23 2B2A  
                     __ptext16 2A1E                       __ptext17 145C                       __ptext18 2B12  
                 _RXF2SIDLbits 000F09                   _RXF3SIDLbits 000F0D                   _RXF4SIDLbits 000F11  
                 _RXF5SIDLbits 000F15       CANsendMessage@dataLength 00C9                   _remote_frame 0238  
                _TMR3_overflow 0233                  __size_of_main 0202           CANreceiveMessage@msg 0028  
                 _TXB0SIDLbits 000F42                   _TXB1SIDLbits 000F32                       _timer_on 0005  
                 _TXB2SIDLbits 000F22      __size_of_CANOperationMode 0018                  ?_CANisRxReady 0028  
                ?_CANisTxReady 0028                    _RXB0DLCbits 000F65                    _RXB1DLCbits 000F55  
                 _RXM0SIDLbits 000F19                    _RXB0CONbits 000F60                    _RXB1CONbits 000F50  
            _CANreceiveMessage 145C                   _RXM1SIDLbits 000F1D                     _INTCONbits 000FF2  
             ??_CANsendMessage 00CB                  _wheel_speed_1 0009                  _wheel_speed_2 000D  
           ?_CANreceiveMessage 0028       CANsendMessage@identifier 00C3   __end_of_remote_frame_handler 2566  
                     intlevel1 0000                       intlevel2 0000               CANSetFilter@tamp 00CD  
             CANSetFilter@type 00C7            ??_CANreceiveMessage 002A                    _TXB0DLCbits 000F45  
                  _TXB1DLCbits 000F35                    _TXB0CONbits 000F40                    _TXB2DLCbits 000F25  
                  _TXB1CONbits 000F30                    _TXB2CONbits 000F20           CANOperationMode@mode 00C3  
               ??_CANisRxReady 0028                    ?_CANSetMask 00C3                 ??_CANisTxReady 00C3  
               _distance_array 0087      __end_of_CANreceiveMessage 198A              ?_CANisRXwarningON 0028  
                  _speed_array 008F                   ___aldiv@sign 0109             ??_CANisRXwarningON 00C3  
        _distance_actual_value 0068          __end_of_CANInitialize 2404              ?_CANisTXwarningON 0028  
